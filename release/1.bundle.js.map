{"version":3,"sources":["webpack:///./node_modules/dojox/charting/plot2d/Default.js","webpack:///./node_modules/dojox/charting/axis2d/Default.js","webpack:///./node_modules/dojox/charting/Chart2D.js","webpack:///./node_modules/dojox/charting/themes/Wetland.js","webpack:///./node_modules/dojox/lang/utils.js","webpack:///./node_modules/dojox/lang/functional.js","webpack:///./node_modules/dojox/charting/plot2d/common.js","webpack:///./node_modules/dojox/gfx/_base.js","webpack:///./node_modules/dojox/gfx.js","webpack:///./node_modules/dojox/gfx/fx.js","webpack:///./node_modules/dojox/gfx/matrix.js","webpack:///./node_modules/dojox/charting/plot2d/_PlotEvents.js","webpack:///./node_modules/dojox/lang/functional/reversed.js","webpack:///./node_modules/dojox/charting/plot2d/CartesianBase.js","webpack:///./node_modules/dojox/main.js","webpack:///./node_modules/dojox/gfx/shape.js","webpack:///./node_modules/dojox/charting/axis2d/common.js","webpack:///./node_modules/dojox/lang/functional/lambda.js","webpack:///./node_modules/dojox/charting/Element.js","webpack:///./node_modules/dojox/charting/plot2d/Base.js","webpack:///./node_modules/dojox/charting/plot2d/Stacked.js","webpack:///./node_modules/dojox/charting/plot2d/commonStacked.js","webpack:///./node_modules/dojox/charting/plot2d/Columns.js","webpack:///./node_modules/dojox/charting/plot2d/Bars.js","webpack:///./node_modules/dojox/gfx/path.js","webpack:///./node_modules/dojox/charting/SimpleTheme.js","webpack:///./node_modules/dojox/gfx/gradutils.js","webpack:///./node_modules/dojo/_base/html.js","webpack:///./node_modules/dojox/string/BidiEngine.js","webpack:///./node_modules/dojox/charting/axis2d/Invisible.js","webpack:///./node_modules/dojox/charting/scaler/linear.js","webpack:///./node_modules/dojox/charting/scaler/common.js","webpack:///./node_modules/dojox/charting/Chart.js","webpack:///./node_modules/dojox/gfx/canvas.js","webpack:///./node_modules/dojox/gfx/arc.js","webpack:///./node_modules/dojox/gfx/decompose.js","webpack:///./node_modules/dojox/gfx/bezierutils.js","webpack:///./node_modules/dojox/charting/Series.js","webpack:///./node_modules/dojox/charting/bidi/Chart.js","webpack:///./node_modules/dojox/gfx/_gfxBidiSupport.js","webpack:///./node_modules/dojox/gfx/utils.js","webpack:///./node_modules/dojox/lang/functional/array.js","webpack:///./node_modules/dojox/lang/functional/object.js","webpack:///./node_modules/dojox/charting/bidi/_bidiutils.js","webpack:///./node_modules/dojox/lang/functional/fold.js","webpack:///./node_modules/dojox/charting/axis2d/Base.js","webpack:///./node_modules/dojox/charting/bidi/axis2d/Default.js","webpack:///./node_modules/dojox/charting/scaler/primitive.js","webpack:///./node_modules/dojox/charting/plot2d/Lines.js","webpack:///./node_modules/dojox/charting/plot2d/Areas.js","webpack:///./node_modules/dojox/charting/plot2d/Markers.js","webpack:///./node_modules/dojox/charting/plot2d/MarkersOnly.js","webpack:///./node_modules/dojox/charting/plot2d/Scatter.js","webpack:///./node_modules/dojox/charting/plot2d/StackedLines.js","webpack:///./node_modules/dojox/charting/plot2d/StackedAreas.js","webpack:///./node_modules/dojox/charting/plot2d/StackedColumns.js","webpack:///./node_modules/dojox/charting/plot2d/ClusteredColumns.js","webpack:///./node_modules/dojox/charting/plot2d/StackedBars.js","webpack:///./node_modules/dojox/charting/plot2d/ClusteredBars.js","webpack:///./node_modules/dojox/charting/plot2d/Grid.js","webpack:///./node_modules/dojox/charting/plot2d/Pie.js","webpack:///./node_modules/dojox/charting/plot2d/Bubble.js","webpack:///./node_modules/dojox/charting/plot2d/Candlesticks.js","webpack:///./node_modules/dojox/charting/plot2d/OHLC.js","webpack:///./node_modules/dojox/charting/plot2d/Spider.js","webpack:///./node_modules/dojo/fx.js","webpack:///./node_modules/dojo/fx/easing.js","webpack:///./node_modules/dojox/charting/themes/common.js"],"names":["__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","undefined","lang","declare","arr","has","CartesianBase","_PlotEvents","dc","df","dfr","du","fx","purgeGroup","lambda","defaultParams","lines","areas","markers","tension","animate","enableCache","interpolate","optionalParams","stroke","outline","shadow","fill","filter","styleFunc","font","fontColor","marker","markerStroke","markerOutline","markerShadow","markerFill","markerFont","markerFontColor","zeroLine","constructor","chart","kwArgs","this","opt","clone","mixin","updateWithObject","updateWithPattern","createPath","run","creator","params","path","_pathFreePool","length","pop","setShape","add","_pathUsePool","push","buildSegments","i","indexed","series","min","Math","max","floor","_hScaler","bounds","from","data","ceil","to","rseg","segments","j","isNullValue","index","hasOwnProperty","y","render","dim","offsets","zoom","isDataDirty","performZoom","s","resetEvents","dirty","isDirty","forEach","_eventSeries","cleanGroup","getGroup","setTransform","forEachRev","item","t","theme","events","concat","lpoly","next","ht","scaler","getTransformerFromModel","vt","_vScaler","eventSeries","name","Array","group","hidden","dyn","symbol","some","rsegments","seg","rsegment","map","v","x","l","height","b","lpath","curve","_plotFill","apoly","isNaN","apath","setFill","getFill","createPolyline","makeStroke","width","shape","frontMarkers","outlineMarkers","shadowMarkers","spoly","c","dx","dy","setStroke","getStroke","color","setFilter","markerBox","markerTheme","tMixin","addMixin","post","labels","getBoundingBox","o","element","cx","cy","_connectEvents","labelBoxW","labelBoxH","createLabel","skip","_reconnectEvents","_checkOrientation","plotGroup","animateTransform","delegate","duration","transform","start","end","play","apply","module","exports","dj","h","connect","domGeom","Invisible","lin","acommon","g","BidiDefault","Default","vertical","fixUpper","fixLower","natural","leftBottom","includeZero","fixed","majorLabels","minorTicks","minorLabels","microTicks","rotation","htmlLabels","dropLabels","labelSizeChange","position","majorTickStep","minorTickStep","microTickStep","labelFunc","maxLabelSize","maxLabelCharCount","trailingSymbol","majorTick","minorTick","microTick","tick","title","titleGap","titleFont","titleFontColor","titleOrientation","_textFreePool","_lineFreePool","_textUsePool","_lineUsePool","_invalidMaxLabelSize","renderingOptions","shape-rendering","setWindow","scale","offset","inherited","arguments","_groupLabelWidth","wcLimit","isObject","label","text","trim","substring","join","_base","_getTextBox","w","_getMaxLabelSize","span","size","_maxLabelSize","minMinorStep","_prevMinMinorStep","ob","sb","buildScaler","_majorStart","major","tb","buildTicks","majLabelW","minLabelW","tickLabelFunc","minor","majLabelH","minLabelH","calculate","_oldSpan","Infinity","ta","axis","labelGap","normalizedLength","splitFontString","labelW","cosr","abs","cos","PI","sinr","sin","gap1","sqrt","gap2","canMinorLabel","_skipInterval","ticks","getOffsets","r","taTitleFont","taTitleGap","gap","taMajorTick","getTick","taMinorTick","tsize","side","labelWidth","createText","labelType","align","textContent","createLine","line","isRtl","_isRtl","stop","titlePos","titleOffset","axisVector","tickVector","anchorOffset","labelOffset","labelAlign","titleRotation","taFont","taFontColor","taTitleFontColor","taTitleOrientation","orientation","taMicroTick","taStroke","cachedLabelW","f","x1","y1","x2","y2","axisTitle","htmlElements","matrix","rotategAt","rel","value","canLabel","elem","getTextWithLimitCharCount","truncated","getTextWithLimitLength","formatTruncatedLabel","labelTooltip","micro","truncatedLabel","elemType","modules","aroundRect","type","fontWidth","fontHeight","firstChild","_events","dojo","handle","e","require","Tooltip","show","hide","shp","getShape","lt","getCoords","round","kernel","dojox","Chart","deprecated","setObject","SimpleTheme","themes","Wetland","colors","getObject","empty","opts","Object","prototype","toString","call","slice","coerceType","target","source","Number","eval","String","Boolean","conv","pattern","merge","object","m","otype","mtype","Color","sc","common","doIfLoaded","makeParameters","defaultStroke","augmentColor","a","augmentStroke","augmentFill","defaultStats","vmin","POSITIVE_INFINITY","vmax","NEGATIVE_INFINITY","hmin","hmax","collectSimpleStats","stats","old_vmin","old_vmax","val","ymin","ymax","old_hmin","old_hmax","xmin","xmax","calculateBarSize","availableSize","clusterSize","minBarSize","maxBarSize","collectStackedStats","foldl","array","p0","p3","bz1x","bz1y","bz2x","bz2y","p1","p2","p1p2","p0p2","p1p3","p0p2f","p1p3f","getLabel","number","precision","numberLib","format","places","toFixed","win","dom","domConstruct","_hasClass","node","classStr","cls","getAttribute","indexOf","_addClass","setAttribute","_removeClass","replace","RegExp","_getFontMeasurements","p","oldStyle","heights","1em","1ex","100%","12pt","16px","xx-small","x-small","small","medium","large","x-large","xx-large","doc","documentElement","style","fontSize","div","create","left","top","borderWidth","margin","padding","lineHeight","overflow","body","offsetHeight","removeChild","fontMeasurements","_getCachedFontMeasurements","recalculate","measuringNode","className","box","al","visibility","innerHTML","getBoundingClientRect","bcr","right","bottom","getMarginBox","_computeTextLocation","textShape","fixHeight","loc","_computeTextBoundingBox","_isRendered","getFont","defaultFont","getTextWidth","parent","getParent","uniqueId","_getUniqueId","id","_scopeName","byId","typeCtorCache","touchActionProp","_fixMsTouchAction","surface","rawNode","defaultPath","defaultPolyline","points","defaultRect","defaultEllipse","rx","ry","defaultCircle","defaultLine","defaultImage","src","defaultText","decoration","rotated","kerning","defaultTextPath","cap","defaultLinearGradient","defaultRadialGradient","defaultPattern","variant","weight","family","getDefault","Function","normalizeColor","normalizeParameters","existed","update","defaults","result","formatNumber","addSpace","point","makeFontString","str","split","charAt","cm_in_pt","mm_in_pt","px_in_pt","pt2px","len","px2pt","parseFloat","pathVmlRegExp","pathSvgRegExp","equalSources","switchTo","renderer","ns","Surface","gfxBase","Hub","fxg","InterpolNumber","InterpolUnit","units","InterpolColor","temp","InterpolValues","values","InterpolObject","def","InterpolTransform","stack","original","getValue","blendColors","ret","Matrix2D","transfMatrix","transparent","getColorInterpol","prop","obj","animateStroke","args","easing","_defaultEasing","anim","Animation","animateFill","animateFont","getTransform","handlers","__svgContainer","parentNode","__svgRoot","__svgWidth","parseInt","ov","ignore","disconnect","sn","root","setTimeout","removeAttribute","_degToRadCache","_degToRad","degree","_radToDeg","radian","arg","xx","yy","normalize","xy","yx","extend","identity","flipX","flipY","flipXY","translate","rotate","angle","rotateg","skewX","tan","skewXg","skewY","skewYg","reflect","a2","b2","n2","project","isIdentity","invert","M","D","_multiplyPoint","multiplyPoint","multiplyRectangle","rect","minx","miny","multiply","_sandwich","scaleAt","d","rotateAt","skewXAt","skewXgAt","skewYAt","skewYgAt","hub","_shapeEvents","destroy","plotEvent","raiseEvent","originalEvent","originalPlot","plot","method","after","_connectSingleEvent","eventName","eventMask","event","hAxis","vAxis","seriesName","fireEvent","eventObject","filterRev","global","mapRev","n","everyRev","someRev","Base","primitive","gfx","alwaysFalse","baseParams","labelStyle","omitLabels","axes","zoomQueue","lastWindow","vscale","hscale","xoffset","yoffset","clear","_hAxis","_vAxis","noClip","_nativeClip","setClip","_clippedGroup","createGroup","setAxis","toPage","coord","ah","av","sh","getScaler","sv","th","tv","toData","getTransformerFromPlot","bbox","_getLabel","lbox","renderLabel","vs","hs","vOffset","hBounds","xOffset","lower","vBounds","yOffset","rVScale","rHScale","rXOffset","rYOffset","shift","initializeScalers","initialized","on","matrixLib","removeItemAt","Shape","fillStyle","strokeStyle","parentMatrix","uid","register","getUID","dispose","__gfxObject__","getNode","getTransformedBoundingBox","_getRealMatrix","gm","getEventSource","clip","getClip","isArray","_applyTransform","moveToFront","_moveChildToFront","_moveToFront","moveToBack","_moveChildToBack","_moveToBack","applyRightTransform","applyLeftTransform","applyTransform","removeShape","silently","remove","_setParent","_updateParentMatrix","_eventsProcessing","listener","fixCallback","fixTarget","hitch","token","gfxElement","fixFunction","scope","isString","Container","_init","children","_batch","openBatch","closeBatch","oldParent","bb","ct","endX","endY","unshift","_parent","_nodes","lastChild","isLoaded","onLoad","whenLoaded","context","once","Rect","Ellipse","Circle","Line","Polyline","closed","_normalizePoints","Image","Text","fontStyle","setFont","newFont","_setFont","Creator","createShape","createRect","createCircle","createEllipse","createImage","createTextPath","createObject","Group","ellipse","circle","image","Path","TextPath","setText","shapeType","rawShape","clearNode","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","html","boxWidth","createElement","getTextDir","dir","appendChild","getBoxWidth","textAlign","whiteSpace","wrap","insertBefore","htmlElementsRegistry","lcache","sep","exec","sects","match","vars","rawLambda","buildLambda","clearLambdaCache","destroyHtmlElements","bgnode","bgNode","namespaceURI","key","overrideShape","limitWidth","minStr","begin","space","spanX","spanY","_shapeFill","_pseudoRadialFill","center","radius","Element","ac","tooltipFunc","assignAxes","addSeries","getSeriesStats","calculateAxes","block","pointerEvents","getRequiredColors","applyMirroring","commonStacked","collectStats","getIndexValue","rearrangeValues","baseline","sets","previousSet","extractedSet","k","minWidth","sum","counter","available","pvalue","z","_rectFreePool","_rectUsePool","naturalBaseline","baselineHeight","bar","getBarProperties","serie","extractedValues","extractValues","finalTheme","sshape","thickness","srect","_animateColumn","specialFill","py","seriesIndex","extracted","voffset","vsize","baselineWidth","actualLength","_animateBar","hoffset","hsize","shapeLib","tbbox","absolute","last","segmented","setAbsoluteMode","mode","_confirmSegmented","getAbsoluteMode","_getRealBBox","_updateWithSegment","getLastPosition","_updateBBox","segment","action","_validSegments","q","_pushSegment","toLowerCase","_collectArgs","moveTo","lineTo","hLineTo","vLineTo","curveTo","smoothCurveTo","qCurveTo","qSmoothCurveTo","arcTo","closePath","_setPath","newShape","lazyPathSegmentation","_2PI","getText","newText","_setText","dlu","dgg","shapeSpaces","shapeX","shapeY","defaultTheme","seriesThemes","defaultColors","markerThemes","defaultMarkers","noGradConv","noRadialConv","reverseFills","_current","_buildMarkerArray","plotarea","grid","indicator","pieInnerRadius","elementType","doPost","old","_markers","markerName","toUpperCase","substr","tickName","inspectObjects","reverse","addMarker","setMarkers","CIRCLE","SQUARE","DIAMOND","CROSS","X","TRIANGLE","TRIANGLE_INVERTED","pageStyle","titleAlign","labelWiring","lineStroke","lineOutline","lineShadow","lineFill","markerSymbol","gradutils","getColor","pt","atan2","projection","pf1","pf2","prev","findColor","sort","attr","ctr","geom","isDescendant","setSelectable","getAttr","get","setAttr","set","hasAttr","removeAttr","getNodeProp","hasClass","contains","addClass","removeClass","toggleClass","toggle","replaceClass","_toDom","toDom","place","_destroyElement","_getPadExtents","getPadExtents","_getBorderExtents","getBorderExtents","_getPadBorderExtents","getPadBorderExtents","_getMarginExtents","getMarginExtents","_getMarginSize","getMarginSize","_getMarginBox","setMarginBox","_getContentBox","getContentBox","setContentSize","_isBodyLtr","isBodyLtr","_docScroll","docScroll","_getIeDocumentElementOffset","getIeDocumentElementOffset","_fixIeBiDiScrollLeft","fixIeBiDiScrollLeft","marginBox","contentBox","coords","includeScroll","getComputedStyle","mb","getProp","setProp","getStyle","setStyle","__toPixelValue","toPixelValue","Stateful","BidiEngine","inputFormat","outputFormat","sourceToTarget","targetToSource","levels","bidiTransform","formatIn","formatOut","map1","map2","stMap","lvMap","initMaps","checkParameters","bdx","BDX","orientIn","getOrientation","orientOut","inFormat","outFormat","swap","stage1Text","doBidiReorder","prepareReorderingParameters","inOrdering","inOrientation","outOrdering","outOrientation","LTR","doReorder","RTL","invertStr","saveSwap","defInFormat","defOutFormat","defSwap","checkContextual","sourceMap","reverseMap","tsMap","rtl","compress","str06","Ix","step","nIEnd","compressArray","previousCursive","compressArrayIndx","isArabicAlefbet","isArabicDiacritics","isNextAlef","getLamAlefFE","LamAlefInialTableFE","LamAlefMedialTableFE","setAlefToSpace","currentChr","isNextArabic","getMedialFormCharacterFE","getFormCharacterFE","FinalForm","InitialForm","IsolatedForm","isStandAlonCharacter","doShape","outBuf","idx","updateMap","splice","consumeNextSpace","strFE","increase","chNum","charCodeAt","AlefTable","FETo06Table","deshape","_inputFormatSetter","validFormat","test","Error","_outputFormatSetter","firstStrongDir","document","hasBidiChar","bidiChars","chars","fdc","computeLevels","hiLevel","getMirror","swapChars","invertLevel","ch","uc","hi","impTab","impTabRtl","impTabLtr","prevState","newClass","newLevel","newState","condPos","ix","types","classes","lastArabic","hasUbatAl","hasUbatB","hasUbatS","MasterTable","TBBASE","UnicodeTable","getCharClass","ITIL","ITCOND","UBAT_B","UBAT_S","UBAT_WS","handleUbatS","cArray","cLength","ArabicAlefBetIntervalsBegine","ArabicAlefBetIntervalsEnd","lev","lo","tmp","cType","UBAT_L","UBAT_R","UBAT_ON","UBAT_AN","UBAT_EN","UBAT_AL","UBAT_CS","wType","nType","UBAT_ES","UBAT_ET","UBAT_NSM","rtlCandidate","UBAT_LRE","UBAT_RLE","UBAT_LRO","UBAT_RLO","UBAT_PDF","UBAT_BN","TYPES_NAMES","mid","low","high","SwapTable","StandAlonForm","BaseForm","MedialForm","formArr","oc","alef06","LamAlefForm","isGreater","defoutFormat","hasBlockSep","hasSegSep","dependOnData","getWindowScale","getWindowOffset","scalerType","tsb","upper","isFinite","getTicks","linear","getNumericLabel","findString","calcTicks","lowerBound","upperBound","useMin","useMax","majorStart","minorStart","microStart","majorCount","minorCount","microCount","minorPerMajor","microPerMinor","majorPrecision","log","LN10","minorPrecision","count","prec","delta","minorDelta","mag","pow","nextMajor","nextMinor","nextMicro","revScale","majorTicks","eq","testedModules","moduleName","ifloaded","ifnotloaded","domStyle","Series","BidiChart","func","purge","makeClean","makeDirty","getName","defaultMargins","margins","_customMargins","delayInMs","chartTitle","plots","runs","createSurface","declaredClass","forIn","tagName","setTheme","addAxis","axisType","axis2d","getAxis","removeAxis","addPlot","plotType","plot2d","getPlot","removePlot","getPlotOrder","setPlotOrder","newOrder","names","order","newStack","movePlotToFront","movePlotToBack","getSeries","removeSeries","updateSeries","_invalidateDependentPlots","getSeriesOrder","plotName","setSeriesOrder","newSeries","moveSeriesToFront","moveSeriesToBack","resize","getDimensions","setDimensions","getGeometry","setAxisWindow","sx","sy","calculateGeometry","zoomIn","range","delayed","delayedRender","fullGeometry","plotArea","_makeDirty","self","_resetLeftBottom","_delayedRenderHandle","clearTimeout","fullRender","_makeClean","_renderChartBackground","_renderPlotBackground","foldr","_renderTitle","tBox","isRightToLeft","posX","connectToPlot","verticalAxis","axisName","setDir","combineStats","gs","pathLib","ga","decompose","bezierUtils","canvas","pattrnbuffer","mp","pi","twoPI","halfPI","CanvasRenderingContext2D","ctx2d","getContext","hasNativeDash","setLineDash","hasFillText","fillText","dasharray","solid","shortdash","shortdot","shortdashdot","shortdashdotdot","dot","dash","longdash","dashdot","longdashdot","longdashdotdot","drawDashedArc","ctx","sa","ea","ccw","prevResidue","residue","beginPath","arc","splitToDashedBezier","dashArray","newPoints","tAtLength","computeLength","curves","splitBezierAtT","toDashedCurveTo","pts","quadratic","api","canvasDash","toDashedLineTo","dal","tlength","distance","prevx","prevy","_render","save","_renderTransform","_renderClip","_renderShape","_renderFill","_renderStroke","restore","canvasClip","canvasTransform","angle2","angle1","fs","iw","canvasFillImage","ih","copyctx","clearRect","drawImage","canvasFill","createPattern","lineWidth","lineCap","lineJoin","miterLimit","_renderDashedStroke","clipType","makeClip","geometry","canvasEllipse","makeEllipse","canvasPath","makeClipPath","canvasPolyline","geo","modifyMethod","extra","createLinearGradient","createRadialGradient","addColorStop","img","downloadImage","st","da","_needsDash","xl","xr","yt","yb","xl2","xr2","yt2","yb2","bezierCircle","u","curvePI4","c1","c2","_dashedPoints","bezierCurveTo","startAngle","canvasImage","canvasFont","measureText","strokeText","pathRenderers","L","H","V","C","S","Q","T","A","Z","lastControl","_dashedPath","_dashResidue","_moveToA","doDash","_moveToR","_lineToA","_lineToR","_hLineToA","_hLineToR","_vLineToA","_vLineToR","_curveToA","_curveToR","_smoothCurveToA","valid","_smoothCurveToR","_qCurveToA","_qCurveToR","_qSmoothCurveToA","_qSmoothCurveToR","_arcTo","relative","arcs","arcAsBezier","_closePath","pendingImageCount","force","pendingRender","pendingImagesCount","url","handler","onImageLoad","onload","onerror","onabort","onImagesLoaded","pos","ownerDocument","pi4","pi8","pi48","unitArcAsBezier","alpha","cosa","sina","xRotg","sweep","xRot","rx2","ry2","pa","pax2","pay2","ca","elliptic_transform","inversed","sp","ep","theta","calcFromValues","r1","m1","r2","m2","scaleSign","eigenvalueDecomposition","l1","l2","vx1","vy1","vx2","vy2","d1","d2","value1","value2","vector1","vector2","decomposeSR","sign","decomposeRS","MT","U","VT","bu","bezierutils","currentLen","splitCount","splitFunc","splitQBezierAtT","_compute","error","pLen","newbezier","newBeziers","splitCBezierAtT","t2","p1x","p1y","p2x","p2y","px","r3","t3","c1x","c1y","c2x","c2y","setSeriesObject","gBidi","domAttr","utils","bidiEngine","validateTextDir","textDir","isMirrored","postscript","truncatedLabelsRegistry","chartDir","setTextDir","newTextDir","tDir","axesKeyArr","keys","reverseMatrix","truncateBidi","isVml","isSvg","svg","useSvgWeb","isSvgWeb","isSilverlight","isCanvas","bidi_const","formatText","targetDir","bidiPreprocess","origText","extendMethod","before","rBefore","restoreText","origObj","groupTextDir","textDirPreprocess","jsonLib","Deferred","config","gu","serialize","isSurface","toJson","prettyPrint","deserialize","fromJson","json","toSvg","deferred","_cleanSvg","_innerXML","callback","errback","_initSvgSerializerDeferred","_initSvgSerializer","jsonForm","serializer","sDim","_gfxSvgProxy","withDoc","ts","ex","fired","addCallback","_svgSerializerInitialized","intv","display","onreadystatechange","contentWindow","readyState","setInterval","scopeMap","clearInterval","uri","toUrl","innerXML","xml","XMLSerializer","serializeToString","hasNext","every","filterIn","mapIn","foldl1","first","foldr1","reduce","reduceRight","unfold","pr","isChartDirectionRtl","isBaseTextDirRtl","shadows","_animateScatter","Stacked","Columns","Bars","sortTicks","hMajorLines","hMinorLines","vMajorLines","vMinorLines","hStripes","vStripes","renderOnAxis","majorHLine","minorHLine","majorVLine","minorVLine","hFill","vFill","hAlternateFill","vAlternateFill","vScaler","_renderHRect","minorLine","_renderHLines","majorLine","hScaler","_renderVRect","_renderVLines","hLine","_animateGrid","vLine","hStripe","allTicks","alternateFill","vStripe","transStart","scaleStart","PlotEvents","radGrad","fanSize","innerRadius","zeroDataMessage","runFilter","_plotSetInnerRadius","filteredRun","slices","labelR","noDataFunc","rColor","ring","_createRing","ength","slicesSteps","localStart","dist","weak","weakCount","weakCoef","oldWeakCoefSum","weakCoefSum","cr","beta","fansx","fansy","fanex","faney","nfans","_createSlice","labelAngle","labeledSlices","significantCount","omit","labelHeight","_getProperLabelRadius","leftColumn","rightColumn","cTheme","lrPadding","jointX","labelX","newRadius","wiring","esi","minRadius","tempSIN","leftCenterSlice","rightCenterSlice","leftMinSIN","rightMinSIN","_caculateLabelR","firstSlice","nextLabelR","currentLabelR","R","fromAngle","stepAngle","innerX1","innerY1","innerX2","innerY2","frontCircles","outlineCircles","shadowCircles","getFinalTheme","_animateBubble","console","warn","open","close","doFill","inner","_animateCandlesticks","hl","op","cl","_animateOHLC","baseFx","coreFx","gfxfx","divisions","axisColor","axisWidth","spiderColor","spiderWidth","seriesWidth","seriesFillAlpha","spiderOrigin","markerSize","spiderType","animationType","backOut","axisTickFont","axisTickFontColor","axisFont","axisFontColor","datas","labelKey","oldSeriePoints","animations","vlist","axisKey","outerPoints","innerPoints","divisionPoints","divisionRadius","labelPoints","serieEntry","asize","ro","dv","ms","spt","at","lboffset","_getObjectLength","_buildPoints","axisGroup","axisStroke","spiderStroke","nd","_drawArrow","labelGroup","spiderGroup","textGroup","_getCoordinate","seriesShapes","sk","seriePoints","tipData","entry","sname","polygonBoundRect","_getBoundary","osps","cs","_createSeriesEntry","po","poly","brect","so","circles","co","tdata","sps","initpoints","scircle","anims","np","spl","pshape","cshape","anims1","combine","point2","point3","recursive","Evented","arrayUtil","aspect","ready","isAsync","_baseObj","_fire","evt","_chain","_index","_animations","_onAnimateCtx","_onEndCtx","delay","_onAnimate","_onEnd","gotoStart","status","beforeBegin","onBegin","onPlay","pause","gotoPercent","percent","andPlay","gotoEnd","chain","_combine","_connects","_finished","_pseudoAnimation","_doAction","_call","wipeIn","animateProperty","properties","scrollHeight","fini","wipeOut","slideTo","init","offsetTop","offsetLeft","easingFuncs","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","sineOut","sineInOut","expoIn","expoOut","expoInOut","circIn","circOut","circInOut","backIn","backInOut","elasticIn","elasticOut","elasticInOut","bounceIn","bounceOut","bounceInOut"],"mappings":"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","file":"1.bundle.js","sourcesContent":["define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\",\n\t\t\"./CartesianBase\", \"./_PlotEvents\", \"./common\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__DefaultCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\n\t\t// summary:\n\t\t//\t\tThe arguments used for any/most plots.\n\n\t\t// lines: Boolean?\n\t\t//\t\tWhether or not to draw lines on this plot.  Defaults to true.\n\t\tlines:   true,\n\n\t\t// areas: Boolean?\n\t\t//\t\tWhether or not to draw areas on this plot. Defaults to false.\n\t\tareas:   false,\n\n\t\t// markers: Boolean?\n\t\t//\t\tWhether or not to draw markers at data points on this plot. Default is false.\n\t\tmarkers: false,\n\n\t\t// tension: Number|String?\n\t\t//\t\tWhether or not to apply 'tensioning' to the lines on this chart.\n\t\t//\t\tOptions include a number, \"X\", \"x\", or \"S\"; if a number is used, the\n\t\t//\t\tsimpler bezier curve calculations are used to draw the lines.  If X, x or S\n\t\t//\t\tis used, the more accurate smoothing algorithm is used.\n\t\ttension: \"\",\n\n\t\t// animate: Boolean?|Number?\n\t\t//\t\tWhether or not to animate the chart to place. When a Number it specifies the duration of the animation.\n\t\t//\t\tDefault is false.\n\t\tanimate: false,\n\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any series on the plot.\n\t\tstroke:\t\t{},\n\n\t\t// outline: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\n\t\toutline:\t{},\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot (such as areas).\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t\t//\t\tbe required for this to work.\n\t\tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// font: String?\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\n\t\tfont:\t\t\"\",\n\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\n\t\tfontColor:\t\"\",\n\n\t\t// markerStroke: dojo.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any markers on the plot.\n\t\tmarkerStroke:\t\t{},\n\n\t\t// markerOutline: dojo.gfx.Stroke?\n\t\t//\t\tAn optional outline to use for any markers on the plot.\n\t\tmarkerOutline:\t\t{},\n\n\t\t// markerShadow: dojo.gfx.Stroke?\n\t\t//\t\tAn optional shadow to use for any markers on the plot.\n\t\tmarkerShadow:\t\t{},\n\n\t\t// markerFill: dojo.gfx.Fill?\n\t\t//\t\tAn optional fill to use for any markers on the plot.\n\t\tmarkerFill:\t\t\t{},\n\n\t\t// markerFont: String?\n\t\t//\t\tAn optional font definition to use for any markers on the plot.\n\t\tmarkerFont:\t\t\t\"\",\n\n\t\t// markerFontColor: String|dojo.Color?\n\t\t//\t\tAn optional color to use for any marker text on the plot.\n\t\tmarkerFontColor:\t\"\",\n\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the markers are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false,\n\n\t\t// interpolate: Boolean?\n\t\t//\t\tWhether when there is a null data point in the data the plot interpolates it or if the lines is split at that\n\t\t//\t\tpoint.\tDefault false.\n\t\tinterpolate: false,\n\n\t\t// zeroLine: Number?\n\t\t//\t\tZero line for an area fill. Should be a numeric value in user coordinates.\n\t\t//\t\tDefault: the lowest value on a vertical axis.\n\t\tzeroLine: 0\n\t});\n=====*/\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\tvar DEFAULT_ANIMATION_LENGTH = 1200;\t// in ms\n\n\treturn declare(\"dojox.charting.plot2d.Default\", [CartesianBase, _PlotEvents], {\n\n\t\t// defaultParams:\n\t\t//\t\tThe default parameters of this plot.\n\t\tdefaultParams: {\n\t\t\tlines:   true,\t// draw lines\n\t\t\tareas:   false,\t// draw areas\n\t\t\tmarkers: false,\t// draw markers\n\t\t\ttension: \"\",\t// draw curved lines (tension is \"X\", \"x\", or \"S\")\n\t\t\tanimate: false, // animate chart to place\n\t\t\tenableCache: false,\n\t\t\tinterpolate: false\n\t\t},\n\n\t\t// optionalParams:\n\t\t//\t\tThe optional parameters of this plot.\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc: null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tmarker:             \"\",\n\t\t\tmarkerStroke:\t\t{},\n\t\t\tmarkerOutline:\t\t{},\n\t\t\tmarkerShadow:\t\t{},\n\t\t\tmarkerFill:\t\t\t{},\n\t\t\tmarkerFont:\t\t\t\"\",\n\t\t\tmarkerFontColor:\t\"\",\n\t\t\tzeroLine:           0\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a new plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define this plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\t// animation properties\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcreatePath: function(run, creator, params){\n\t\t\tvar path;\n\t\t\tif(this.opt.enableCache && run._pathFreePool.length > 0){\n\t\t\t\tpath = run._pathFreePool.pop();\n\t\t\t\tpath.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(path);\n\t\t\t}else{\n\t\t\t\tpath = creator.createPath(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._pathUsePool.push(path);\n\t\t\t}\n\t\t\treturn path;\n\t\t},\n\n\t\tbuildSegments: function(i, indexed){\n\t\t\tvar run = this.series[i],\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\n\t\t\t\tmax = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length,\n\t\t\t\trseg = null, segments = [];\n\n\t\t\t// split the run data into dense segments (each containing no nulls)\n\t\t\t// except if interpolates is false in which case ignore null between valid data\n\t\t\tfor(var j = min; j < max; j++){\n\t\t\t\tif(!this.isNullValue(run.data[j])){\n\t\t\t\t\tif(!rseg){\n\t\t\t\t\t\trseg = [];\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\n\t\t\t\t\t}\n\t\t\t\t\trseg.push((indexed && run.data[j].hasOwnProperty(\"y\"))?run.data[j].y:run.data[j]);\n\t\t\t\t}else{\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\n\t\t\t\t\t\trseg = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segments;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender/draw everything on this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }\n\t\t\t// returns: dojox/charting/plot2d/Default\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\n\t\t\t// make sure all the series is not modified\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\tthis.getGroup().setTransform(null);\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, stroke, outline, events = this.events();\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._pathFreePool = (run._pathFreePool?run._pathFreePool:[]).concat(run._pathUsePool?run._pathUsePool:[]);\n\t\t\t\t\trun._pathUsePool = [];\n\t\t\t\t}\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(this.opt.areas ? \"area\" : \"line\", [this.opt, run], true),\n\t\t\t\t\tlpoly,\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\t\teventSeries = this._eventSeries[run.name] = new Array(run.data.length);\n\n\t\t\t\ts = run.group;\n\t\t\t\tif(run.hidden){\n\t\t\t\t\tif(this.opt.lines){\n\t\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\n\t\t\t\t\t}\n\t\t\t\t\tif (run.markers || (run.markers === undefined && this.opt.markers)) {\n\t\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\n\t\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.areas){\n\t\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// optim works only for index based case\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\n\t\t\t\tvar rsegments = this.buildSegments(i, indexed);\n\t\t\t\tfor(var seg = 0; seg < rsegments.length; seg++){\n\t\t\t\t\tvar rsegment = rsegments[seg];\n\t\t\t\t\tif(indexed){\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v, i){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\n\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\n\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we are indexed & we interpolate we need to put all the segments as a single one now\n\t\t\t\t\tif(indexed && this.opt.interpolate){\n\t\t\t\t\t\twhile(seg < rsegments.length) {\n\t\t\t\t\t\t\tseg++;\n\t\t\t\t\t\t\trsegment = rsegments[seg];\n\t\t\t\t\t\t\tif(rsegment){\n\t\t\t\t\t\t\t\tlpoly = lpoly.concat(arr.map(rsegment.rseg, function(v, i){\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\n\t\t\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\n\t\t\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar lpath = this.opt.tension ? dc.curve(lpoly, this.opt.tension) : \"\";\n\n\t\t\t\t\tif(this.opt.areas && lpoly.length > 1){\n\t\t\t\t\t\tvar fill = this._plotFill(theme.series.fill, dim, offsets), apoly = lang.clone(lpoly),\n\t\t\t\t\t\t\tzeroLine = dim.height - offsets.b;\n\t\t\t\t\t\tif(!isNaN(this.opt.zeroLine)){\n\t\t\t\t\t\t\tzeroLine = Math.max(offsets.t, Math.min(dim.height - offsets.b - vt(this.opt.zeroLine), zeroLine));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\tvar apath = \"L\" + apoly[apoly.length-1].x + \",\" + zeroLine +\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + zeroLine +\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + apoly[0].y;\n\t\t\t\t\t\t\trun.dyn.fill = s.createPath(lpath + \" \" + apath).setFill(fill).getFill();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapoly.push({x: lpoly[lpoly.length - 1].x, y: zeroLine});\n\t\t\t\t\t\t\tapoly.push({x: lpoly[0].x, y: zeroLine});\n\t\t\t\t\t\t\tapoly.push(lpoly[0]);\n\t\t\t\t\t\t\trun.dyn.fill = s.createPolyline(apoly).setFill(fill).getFill();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.lines || this.opt.markers){\n\t\t\t\t\t\t// need a stroke\n\t\t\t\t\t\tstroke = theme.series.stroke;\n\t\t\t\t\t\tif(theme.series.outline){\n\t\t\t\t\t\t\toutline = run.dyn.outline = dc.makeStroke(theme.series.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (stroke && stroke.width || 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.markers){\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\t}\n\t\t\t\t\tvar frontMarkers = null, outlineMarkers = null, shadowMarkers = null;\n\t\t\t\t\tif(stroke && theme.series.shadow && lpoly.length > 1){\n\t\t\t\t\t\tvar shadow = theme.series.shadow,\n\t\t\t\t\t\t\tspoly = arr.map(lpoly, function(c){\n\t\t\t\t\t\t\t\treturn {x: c.x + shadow.dx, y: c.y + shadow.dy};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif(this.opt.lines){\n\t\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPath(dc.curve(spoly, this.opt.tension)).setStroke(shadow).getStroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPolyline(spoly).setStroke(shadow).getStroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.markers && theme.marker.shadow){\n\t\t\t\t\t\t\tshadow = theme.marker.shadow;\n\t\t\t\t\t\t\tshadowMarkers = arr.map(spoly, function(c){\n\t\t\t\t\t\t\t\treturn this.createPath(run, s, \"M\" + c.x + \" \" + c.y + \" \" + theme.symbol).\n\t\t\t\t\t\t\t\t\tsetStroke(shadow).setFill(shadow.color);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.lines && lpoly.length > 1){\n\t\t\t\t\t\tvar shape;\n\t\t\t\t\t\tif(outline){\n\t\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPath(lpath).setStroke(outline).getStroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPolyline(lpoly).setStroke(outline).getStroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPath(lpath)).setStroke(stroke).getStroke();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPolyline(lpoly)).setStroke(stroke).getStroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(shape.setFilter && theme.series.filter){\n\t\t\t\t\t\t\tshape.setFilter(theme.series.filter);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar markerBox = null;\n\t\t\t\t\tif(this.opt.markers){\n\t\t\t\t\t\tvar markerTheme = theme;\n\t\t\t\t\t\tfrontMarkers = new Array(lpoly.length);\n\t\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\n\t\t\t\t\t\toutline = null;\n\t\t\t\t\t\tif(markerTheme.marker.outline){\n\t\t\t\t\t\t\toutline = dc.makeStroke(markerTheme.marker.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (markerTheme.marker.stroke ? markerTheme.marker.stroke.width : 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + markerTheme.symbol;\n\t\t\t\t\t\t\tif(outline){\n\t\t\t\t\t\t\t\toutlineMarkers[i] = this.createPath(run, s, path).setStroke(outline);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfrontMarkers[i] = this.createPath(run, s, path).setStroke(markerTheme.marker.stroke).setFill(markerTheme.marker.fill);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\trun.dyn.markerFill = markerTheme.marker.fill;\n\t\t\t\t\t\trun.dyn.markerStroke = markerTheme.marker.stroke;\n\t\t\t\t\t\tif(!markerBox && this.opt.labels){\n\t\t\t\t\t\t\tmarkerBox = frontMarkers[0].getBoundingBox();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"marker\",\n\t\t\t\t\t\t\t\t\tindex:   i + rsegment.index,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\t\t\toutline: outlineMarkers[i] || null,\n\t\t\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\n\t\t\t\t\t\t\t\t\tcx:      lpoly[i].x,\n\t\t\t\t\t\t\t\t\tcy:      lpoly[i].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif(indexed){\n\t\t\t\t\t\t\t\t\to.x = i + rsegment.index + 1;\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index];\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\to.x = rsegment.rseg[i].x;\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index].y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[i + rsegment.index] = o;\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tvar labelBoxW = markerBox?markerBox.width:2;\n\t\t\t\t\t\tvar labelBoxH = markerBox?markerBox.height:2;\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, rsegment.rseg[i], { x: c.x - labelBoxW / 2, y: c.y - labelBoxH / 2,\n\t\t\t\t\t\t\t\twidth: labelBoxW , height: labelBoxH }, markerTheme);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\tif(this.animate){\n\t\t\t\t// grow from the bottom\n\t\t\t\tvar plotGroup = this.getGroup();\n\t\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\t\tshape: plotGroup,\n\t\t\t\t\tduration: DEFAULT_ANIMATION_LENGTH,\n\t\t\t\t\ttransform:[\n\t\t\t\t\t\t{name:\"translate\", start: [0, dim.height - offsets.b], end: [0, 0]},\n\t\t\t\t\t\t{name:\"scale\", start: [1, 0], end:[1, 1]},\n\t\t\t\t\t\t{name:\"original\"}\n\t\t\t\t\t]\n\t\t\t\t}, this.animate)).play();\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Default\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/sniff\", \"dojo/_base/declare\",\n\t\"dojo/_base/connect\", \"dojo/dom-geometry\", \"./Invisible\",\n\t\"../scaler/linear\", \"./common\", \"dojox/gfx\", \"dojox/lang/utils\", \"dojox/lang/functional\",\n\t\"dojo/has!dojo-bidi?../bidi/axis2d/Default\"],\n\tfunction(lang, arr, has, declare, connect, domGeom, Invisible,\n\t\t\tlin, acommon, g, du, df, BidiDefault){\n\n\t/*=====\n\tvar __AxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// fixUpper: String?\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// fixLower: String?\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// natural: Boolean?\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\n\t\t// leftBottom: Boolean?\n\t\t//\t\tDeprecated: use position instead. The position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\n\t\t// includeZero: Boolean?\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\n\t\t// fixed: Boolean?\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\n\t\t// majorLabels: Boolean?\n\t\t//\t\tFlag to draw labels at major ticks. Default is true.\n\t\t// minorTicks: Boolean?\n\t\t//\t\tFlag to draw minor ticks on an axis.  Default is true.\n\t\t// minorLabels: Boolean?\n\t\t//\t\tFlag to labels on minor ticks when there is enough space. Default is true.\n\t\t// microTicks: Boolean?\n\t\t//\t\tFlag to draw micro ticks on an axis. Default is false.\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tFlag to use HTML (as opposed to the native vector graphics engine) to draw labels. Default is true.\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t\t// from: Number?\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\n\t\t// to: Number?\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\n\t\t// majorTickStep: Number?\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// minorTickStep: Number?\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// microTickStep: Number?\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\n\t\t// labels: Object[]?\n\t\t//\t\tAn array of labels for major ticks, with corresponding numeric values, ordered by value.\n\t\t// labelFunc: Function?\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\n\t\t//\t\tthe default text when available. The function must be of the following form:\n\t\t//\t|\t\tfunction labelFunc(text, value, precision) {}\n\t\t//\t\t`text` is the already pre-formatted text. Pre-formatting is done using `dojo/number` is available, `Date.toFixed` otherwise.\n\t\t//\t\t`value`  is the raw axis value.\n\t\t//\t\t`precision` is the requested precision to be applied.\n\t\t// maxLabelSize: Number?\n\t\t//\t\tThe maximum size, in pixels, for a label.  To be used with the optional label function.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to be used for drawing an axis.\n\t\t// majorTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a major tick.\n\t\t// minorTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a minor tick.\n\t\t// microTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a micro tick.\n\t\t// tick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a tick.\n\t\t// font: String?\n\t\t//\t\tAn optional font definition (as used in the CSS font property) for labels.\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tAn optional color to be used in drawing labels.\n\t\t// titleGap: Number?\n\t\t//\t\tAn optional grap between axis title and axis label\n\t\t// titleFont: String?\n\t\t//\t\tAn optional font definition for axis title\n\t\t// titleFontColor: String?\n\t\t//\t\tAn optional axis title color\n\t\t// titleOrientation: String?\n\t\t//\t\tAn optional orientation for axis title. \"axis\" means the title facing the axis, \"away\" means facing away.\n\t\t//\t\tIf no value is set \"axis\" is used.\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the ticks and labels are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering. For labels it is only working with gfx labels\n\t\t//\t\tnot html ones.  Default false.\n\t\t// dropLabels: Boolean?\n\t\t//\t\tWhether the axis automatically drops labels at regular interval or not to avoid labels overlapping.\n\t\t//\t\tThis gives better results but require more computations.  You can disable it to save computation\n\t\t//\t\ttime when you know your labels won't overlap. Default is true.\n\t\t// labelSizeChange: Boolean?\n\t\t//\t\tIndicates to the axis whether the axis labels are changing their size on zoom. If false this allows to\n\t\t//\t\toptimize the axis by avoiding recomputing labels maximum size on zoom actions. Default is false.\n\t\t// position: String?\n\t\t//\t\tThe position of the axis. Values: \"leftOrBottom\", \"center\" or \"rightOrTop\". Default is \"leftOrBottom\".\n\t};\n\t=====*/\n\n\tvar centerAnchorLimit = 45;\t// in degrees\n\n\tvar Default = declare(has(\"dojo-bidi\")? \"dojox.charting.axis2d.NonBidiDefault\" : \"dojox.charting.axis2d.Default\", Invisible, {\n\t\t// summary:\n\t\t//\t\tThe default axis object used in dojox.charting.  See dojox.charting.Chart.addAxis for details.\n\n\t\t// defaultParams: Object\n\t\t//\t\tThe default parameters used to define any axis.\n\t\t// optionalParams: Object\n\t\t//\t\tAny optional parameters needed to define an axis.\n\n\t\t/*=====\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\n\n\t\t// opt: Object\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\n\t\t// scaler: Object\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\n\t\t// ticks: Object\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\n\t\t// dirty: Boolean\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\n\t\t// scale: Number\n\t\t//\t\tThe current scale of the axis.\n\t\t// offset: Number\n\t\t//\t\tThe current offset of the axis.\n\n\t\topt: null,\n\t\tscaler: null,\n\t\tticks: null,\n\t\tdirty: true,\n\t\tscale: 1,\n\t\toffset: 0,\n\t\t=====*/\n\t\tdefaultParams: {\n\t\t\tvertical:\tfalse,\t\t// true for vertical axis\n\t\t\tfixUpper:\t\"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tfixLower:\t\"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tnatural:\t false,\t\t// all tick marks should be made on natural numbers\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\" - deprecated: use position instead\n\t\t\tincludeZero: false,\t\t// 0 should be included\n\t\t\tfixed:\t   true,\t\t// all labels are fixed numbers\n\t\t\tmajorLabels: true,\t\t// draw major labels\n\t\t\tminorTicks:  true,\t\t// draw minor ticks\n\t\t\tminorLabels: true,\t\t// draw minor labels\n\t\t\tmicroTicks:  false,\t\t// draw micro ticks\n\t\t\trotation:\t0,\t\t\t// label rotation angle in degrees\n\t\t\thtmlLabels:  true,\t\t// use HTML to draw labels\n\t\t\tenableCache: false,\t\t// whether we cache or not\n\t\t\tdropLabels: true,\t\t// whether we automatically drop overlapping labels or not\n\t\t\tlabelSizeChange: false, // whether the labels size change on zoom\n\t\t\tposition: \"leftOrBottom\" // position of the axis: \"leftOrBottom\" (default), \"center\" or \"rightOrTop\"\n\t\t},\n\t\toptionalParams: {\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\n\t\t\tfrom:\t\t\t0,\t// visible from this value\n\t\t\tto:\t\t\t\t1,\t// visible to this value\n\t\t\tmajorTickStep:\t4,\t// major tick step\n\t\t\tminorTickStep:\t2,\t// minor tick step\n\t\t\tmicroTickStep:\t1,\t// micro tick step\n\t\t\tlabels:\t\t\t[],\t// array of labels for major ticks\n\t\t\t// with corresponding numeric values\n\t\t\t// ordered by values\n\t\t\tlabelFunc:\t\tnull, // function to compute label values\n\t\t\tmaxLabelSize:\t0,\t// size in px. For use with labelFunc\n\t\t\tmaxLabelCharCount:\t0,\t// size in word count.\n\t\t\ttrailingSymbol:\tnull,\n\n\t\t\t// TODO: add support for minRange!\n\t\t\t// minRange:\t\t1,\t// smallest distance from min allowed on the axis\n\n\t\t\t// theme components\n\t\t\tstroke:\t\t\t{},\t// stroke for an axis\n\t\t\tmajorTick:\t\t{},\t// stroke + length for a tick\n\t\t\tminorTick:\t\t{},\t// stroke + length for a tick\n\t\t\tmicroTick:\t\t{},\t// stroke + length for a tick\n\t\t\ttick:\t\t   {},\t// stroke + length for a tick\n\t\t\tfont:\t\t\t\"\",\t// font for labels\n\t\t\tfontColor:\t\t\"\",\t// color for labels as a string\n\t\t\ttitle:\t\t\t\t \"\",\t// axis title\n\t\t\ttitleGap:\t\t\t 0,\t\t// gap between axis title and axis label\n\t\t\ttitleFont:\t\t\t \"\",\t\t// axis title font\n\t\t\ttitleFontColor:\t\t \"\",\t\t// axis title font color\n\t\t\ttitleOrientation:\t \"\"\t\t// \"axis\" means the title facing the axis, \"away\" means facing away\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart the axis belongs to.\n\t\t\t// kwArgs: __AxisCtorArgs?\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._textFreePool = [];\n\t\t\t\tthis._lineFreePool = [];\n\t\t\t\tthis._textUsePool = [];\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t}\n\t\t\tthis._invalidMaxLabelSize = true;\n\t\t\t// replace deprecated leftBotton to position\n\t\t\tif(!(kwArgs && ('position' in kwArgs))){\n\t\t\t    this.opt.position = this.opt.leftBottom ? \"leftOrBottom\" : \"rightOrTop\";\n\t\t\t}\t\t\t\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\t\tsetWindow: function(scale, offset){\n\t\t\t// summary:\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe new scale for the axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tThe new offset for the axis.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tif(scale != this.scale){\n\t\t\t\t// if scale changed we need to recompute new max label size\n\t\t\t\tthis._invalidMaxLabelSize = true;\n\t\t\t}\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\n\t\t_groupLabelWidth: function(labels, font, wcLimit){\n\t\t\tif(!labels.length){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(labels.length > 50){\n\t\t\t\t// let's avoid degenerated cases\n\t\t\t\tlabels.length = 50;\n\t\t\t}\n\t\t\tif(lang.isObject(labels[0])){\n\t\t\t\tlabels = df.map(labels, function(label){ return label.text; });\n\t\t\t}\n\t\t\tif(wcLimit){\n\t\t\t\tlabels = df.map(labels, function(label){\n\t\t\t\t\treturn lang.trim(label).length == 0 ? \"\" : label.substring(0, wcLimit) + this.trailingSymbol;\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\tvar s = labels.join(\"<br>\");\n\t\t\treturn g._base._getTextBox(s, {font: font}).w || 0;\n\t\t},\n\n\t\t_getMaxLabelSize: function(min, max, span, rotation, font, size){\n\t\t\tif(this._maxLabelSize == null && arguments.length == 6){\n\t\t\t\tvar o = this.opt;\n\t\t\t\t// everything might have changed, reset the minMinorStep value\n\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep = 0;\n\t\t\t\tvar ob = lang.clone(o);\n\t\t\t\tdelete ob.to;\n\t\t\t\tdelete ob.from;\n\t\t\t\t// build all the ticks from min, to max not from to to _but_ using the step\n\t\t\t\t// that would be used if we where just displaying from to to from.\n\t\t\t\tvar sb = lin.buildScaler(min, max, span, ob, o.to - o.from);\n\t\t\t\tsb.minMinorStep = 0;\n\t\t\t\tthis._majorStart = sb.major.start;\n\t\t\t\t// we build all the ticks not only the ones we need to draw in order to get\n\t\t\t\t// a correct drop rate computation that works for any offset of this scale\n\t\t\t\tvar tb = lin.buildTicks(sb, o);\n\t\t\t\t// if there is not tick at all tb is null\n\t\t\t\tif(size && tb){\n\t\t\t\t\tvar majLabelW = 0, minLabelW = 0; // non rotated versions\n\t\t\t\t\t// we first collect all labels when needed\n\t\t\t\t\tvar tickLabelFunc = function(tick){\n\t\t\t\t\t\tif(tick.label){\n\t\t\t\t\t\t\tthis.push(tick.label);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tvar labels = [];\n\t\t\t\t\tif(this.opt.majorLabels){\n\t\t\t\t\t\tarr.forEach(tb.major, tickLabelFunc, labels);\n\t\t\t\t\t\tmajLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\n\t\t\t\t\t\tif(ob.maxLabelSize){\n\t\t\t\t\t\t\tmajLabelW = Math.min(ob.maxLabelSize, majLabelW);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// do the minor labels computation only if dropLabels is set\n\t\t\t\t\tlabels = [];\n\t\t\t\t\tif(this.opt.dropLabels && this.opt.minorLabels){\n\t\t\t\t\t\tarr.forEach(tb.minor, tickLabelFunc, labels);\n\t\t\t\t\t\tminLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\n\t\t\t\t\t\tif(ob.maxLabelSize){\n\t\t\t\t\t\t\tminLabelW = Math.min(ob.maxLabelSize, minLabelW);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._maxLabelSize = {\n\t\t\t\t\t\tmajLabelW: majLabelW, minLabelW: minLabelW,\n\t\t\t\t\t\tmajLabelH: size, minLabelH: size\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\tthis._maxLabelSize = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._maxLabelSize;\n\t\t},\n\n\t\tcalculate: function(min, max, span){\n\t\t\tthis.inherited(arguments);\n\t\t\t// when the scale has not changed there is no reason for minMinorStep to change\n\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep;\n\t\t\t// we want to recompute the dropping mechanism only when the scale or the size of the axis is changing\n\t\t\t// not when for example when we scroll (otherwise effect would be weird)\n\t\t\tif((this._invalidMaxLabelSize || span != this._oldSpan) && (min != Infinity && max != -Infinity)){\n\t\t\t\tthis._invalidMaxLabelSize = false;\n\t\t\t\tif(this.opt.labelSizeChange){\n\t\t\t\t\tthis._maxLabelSize = null;\n\t\t\t\t}\n\t\t\t\tthis._oldSpan = span;\n\t\t\t\tvar o = this.opt;\n\t\t\t\tvar ta = this.chart.theme.axis, rotation = o.rotation % 360,\n\t\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\t\tfont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\n\t\t\t\t\tsize = font ? g.normalizedLength(g.splitFontString(font).size) : 0,\n\t\t\t\t\t// even if we don't drop label we need to compute max size for offsets\n\t\t\t\t\tlabelW = this._getMaxLabelSize(min, max, span, rotation, font, size);\n\t\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t\t}\n\t\t\t\tif(labelW && o.dropLabels){\n\t\t\t\t\tvar cosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\n\t\t\t\t\tvar majLabelW, minLabelW;\n\t\t\t\t\tif(rotation < 0){\n\t\t\t\t\t\trotation += 360;\n\t\t\t\t\t}\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\t// trivial cases: horizontal labels\n\t\t\t\t\t\t\tif(this.vertical){\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\t// trivial cases: vertical\n\t\t\t\t\t\t\tif(this.vertical){\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// all major labels are parallel they can't collapse except if the two ticks are\n\t\t\t\t\t\t\t// closer than the height of the text * cos(90-rotation)\n\t\t\t\t\t\t\tmajLabelW  = this.vertical ? Math.min(labelW.majLabelW, size / cosr) : Math.min(labelW.majLabelW, size / sinr);\n\t\t\t\t\t\t\t// for minor labels we need to rotated them\n\t\t\t\t\t\t\tvar gap1 = Math.sqrt(labelW.minLabelW * labelW.minLabelW + size * size),\n\t\t\t\t\t\t\t\tgap2 = this.vertical ? size * cosr + labelW.minLabelW * sinr : labelW.minLabelW * cosr + size * sinr;\n\t\t\t\t\t\t\tminLabelW = Math.min(gap1, gap2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// we need to check both minor and major labels fit a minor step\n\t\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep =  Math.max(majLabelW, minLabelW) + labelGap;\n\t\t\t\t\tvar canMinorLabel = this.scaler.minMinorStep <= this.scaler.minor.tick * this.scaler.bounds.scale;\n\t\t\t\t\tif(!canMinorLabel){\n\t\t\t\t\t\t// we can't place minor labels, let's see if we can place major ones\n\t\t\t\t\t\t// in a major step and if not which skip interval we must follow\n\t\t\t\t\t\tthis._skipInterval = Math.floor((majLabelW + labelGap) / (this.scaler.major.tick * this.scaler.bounds.scale));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// everything fit well\n\t\t\t\t\t\tthis._skipInterval = 0;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// drop label disabled\n\t\t\t\t\tthis._skipInterval = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// computes the tick subset we need for that scale/offset\n\t\t\tthis.ticks = lin.buildTicks(this.scaler, this.opt);\n\t\t\treturn this;\n\t\t},\n\n\t\tgetOffsets: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the physical offset values for this axis (used in drawing data series). This method is not\n\t\t\t//\t\tsupposed to be called by the users but internally.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe calculated offsets in the form of { l, r, t, b } (left, right, top, bottom).\n\t\t\tvar s = this.scaler, offsets = { l: 0, r: 0, t: 0, b: 0 };\n\t\t\tif(!s){\n\t\t\t\treturn offsets;\n\t\t\t}\n\t\t\tvar o = this.opt,\n\t\t\t\tta = this.chart.theme.axis,\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap),\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0,\n\t\t\t\trotation = o.rotation % 360, position = o.position, \n\t\t\t\tleftBottom = position !== \"rightOrTop\",\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\n\t\t\tthis.trailingSymbol = (o.trailingSymbol === undefined || o.trailingSymbol === null) ?\n\t\t\t\tthis.trailingSymbol : o.trailingSymbol;\n\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t}\n\t\t\tif(rotation < 0){\n\t\t\t\trotation += 360;\n\t\t\t}\n\t\t\tvar maxLabelSize = this._getMaxLabelSize(); // don't need parameters, calculate has been called before => we use cached value\n\t\t\tif(maxLabelSize){\n\t\t\t\tvar side;\n\t\t\t\tvar labelWidth = Math.ceil(Math.max(maxLabelSize.majLabelW, maxLabelSize.minLabelW)) + 1,\n\t\t\t\t\tsize = Math.ceil(Math.max(maxLabelSize.majLabelH, maxLabelSize.minLabelH)) + 1;\n\t\t\t\tif(this.vertical){\n\t\t\t\t\tside = leftBottom ? \"l\" : \"r\";\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : labelWidth;\n\t\t\t\t\t\t\toffsets.t = offsets.b = size / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\toffsets[side] = size;\n\t\t\t\t\t\t\toffsets.t = offsets.b = labelWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(rotation <= centerAnchorLimit || (180 < rotation && rotation <= (180 + centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2;\n\t\t\t\t\t\t\t}else if(rotation > (360 - centerAnchorLimit) || (180 > rotation && rotation > (180 - centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2;\n\t\t\t\t\t\t\t}else if(rotation < 90 || (180 < rotation && rotation < 270)){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(position === \"center\"){\n\t\t\t\t\t    offsets[side] = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\t\t\t\t\t\n\t\t\t\t\t    offsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tside = leftBottom ? \"b\" : \"t\";\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : size;\n\t\t\t\t\t\t\toffsets.l = offsets.r = labelWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\toffsets[side] = labelWidth;\n\t\t\t\t\t\t\toffsets.l = offsets.r = size / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif((90 - centerAnchorLimit) <= rotation && rotation <= 90 || (270 - centerAnchorLimit) <= rotation && rotation <= 270){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2;\n\t\t\t\t\t\t\t}else if(90 <= rotation && rotation <= (90 + centerAnchorLimit) || 270 <= rotation && rotation <= (270 + centerAnchorLimit)){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2;\n\t\t\t\t\t\t\t}else if(rotation < centerAnchorLimit || (180 < rotation && rotation < (180 + centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(position === \"center\"){\n\t\t\t\t\t    offsets[side] = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\t\t\t\t\t\n\t\t\t\t\toffsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn offsets;\t//\tObject\n\t\t},\n\t\tcleanGroup: function(creator){\n\t\t\tif(this.opt.enableCache && this.group){\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._textFreePool = this._textFreePool.concat(this._textUsePool);\n\t\t\t\tthis._textUsePool = [];\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tcreateText: function(labelType, creator, x, y, align, textContent, font, fontColor, labelWidth){\n\t\t\tif(!this.opt.enableCache || labelType==\"html\"){\n\t\t\t\treturn acommon.createText[labelType](\n\t\t\t\t\t\tthis.chart,\n\t\t\t\t\t\tcreator,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\ttextContent,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\tfontColor,\n\t\t\t\t\t\tlabelWidth\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tvar text;\n\t\t\tif(this._textFreePool.length > 0){\n\t\t\t\ttext = this._textFreePool.pop();\n\t\t\t\ttext.setShape({x: x, y: y, text: textContent, align: align});\n\t\t\t\t// For now all items share the same font, no need to re-set it\n\t\t\t\t//.setFont(font).setFill(fontColor);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(text);\n\t\t\t}else{\n\t\t\t\ttext = acommon.createText[labelType](\n\t\t\t\t\t\tthis.chart,\n\t\t\t\t\t\tcreator,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\ttextContent,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\tfontColor\t\t\t\t\t\t\n\t\t\t\t\t);\t\t\t\n\t\t\t}\n\t\t\tthis._textUsePool.push(text);\n\t\t\treturn text;\n\t\t},\n\t\tcreateLine: function(creator, params){\n\t\t\tvar line;\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\n\t\t\t\tline = this._lineFreePool.pop();\n\t\t\t\tline.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(line);\n\t\t\t}else{\n\t\t\t\tline = creator.createLine(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineUsePool.push(line);\n\t\t\t}\n\t\t\treturn line;\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender/draw the axis.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height}.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\t\n\t\t\tvar isRtl = this._isRtl();\t// chart mirroring\n\t\t\tif(!this.dirty || !this.scaler){\n\t\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\n\t\t\t}\n\t\t\t// prepare variable\n\t\t\tvar o = this.opt, ta = this.chart.theme.axis, position = o.position, \n\t\t\t       leftBottom = position !== \"rightOrTop\", rotation = o.rotation % 360,\n\t\t\t\tstart, stop, titlePos, titleRotation=0, titleOffset, axisVector, tickVector, anchorOffset, labelOffset, labelAlign,\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\ttaFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\n\t\t\t\t// TODO: we use one font color --- we need to use different colors\n\t\t\t\ttaFontColor = o.fontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"black\",\n\t\t\t\ttaTitleFontColor = o.titleFontColor || (ta.title && ta.title.fontColor) || \"black\",\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap) || 15,\n\t\t\t\ttaTitleOrientation = o.titleOrientation || (ta.title && ta.title.orientation) || \"axis\",\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\n\t\t\t\ttaMicroTick = this.chart.theme.getTick(\"micro\", o),\n\n\t\t\t\ttaStroke = \"stroke\" in o ? o.stroke : ta.stroke,\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180)),\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0;\n\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t}\n\t\t\tif(rotation < 0){\n\t\t\t\trotation += 360;\n\t\t\t}\n\t\t\tvar cachedLabelW = this._getMaxLabelSize();\n\t\t\tcachedLabelW = cachedLabelW && cachedLabelW.majLabelW;\n\t\t\tif(this.vertical){\n\t\t\t\tstart = {y: dim.height - offsets.b};\n\t\t\t\tstop  = {y: offsets.t};\n\t\t\t\ttitlePos = {y: (dim.height - offsets.b + offsets.t)/2};\n\t\t\t\ttitleOffset = size * sinr + (cachedLabelW || 0) * cosr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\n\t\t\t\t\ttsize + taTitleGap;\n\t\t\t\taxisVector = {x: 0, y: -1};\n\t\t\t\tlabelOffset = {x: 0, y: 0};\n\t\t\t\ttickVector = {x: 1, y: 0};\n\t\t\t\tanchorOffset = {x: labelGap, y: 0};\n\t\t\t\tswitch(rotation){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tlabelOffset.x = -size;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(rotation < centerAnchorLimit){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 90){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}else if(rotation < (180 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t}else if(rotation < (180 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 270){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\n\t\t\t\t\t\t}else if(rotation < (360 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(leftBottom){\n\t\t\t\t\tstart.x = stop.x = position === \"center\" ? dim.width/2 : offsets.l;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 90 : 270;\n\t\t\t\t\ttitlePos.x = offsets.l - titleOffset + (titleRotation == 270 ? tsize : 0);\n\t\t\t\t\ttickVector.x = -1;\n\t\t\t\t\tanchorOffset.x = -anchorOffset.x;\n\t\t\t\t}else{\n\t\t\t\t\tstart.x = stop.x = dim.width - offsets.r;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 90 : 270;\n\t\t\t\t\ttitlePos.x = dim.width - offsets.r + titleOffset - (titleRotation == 270 ? 0 : tsize);\n\t\t\t\t\tswitch(labelAlign){\n\t\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\tlabelOffset.x += size;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tstart = {x: offsets.l};\n\t\t\t\tstop  = {x: dim.width - offsets.r};\n\t\t\t\ttitlePos = {x: (dim.width - offsets.r + offsets.l)/2};\n\t\t\t\ttitleOffset = size * cosr + (cachedLabelW || 0) * sinr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\n\t\t\t\t\ttsize + taTitleGap;\n\t\t\t\taxisVector = {x: isRtl ? -1 : 1, y: 0}; \t// chart mirroring\n\t\t\t\tlabelOffset = {x: 0, y: 0};\n\t\t\t\ttickVector = {x: 0, y: 1};\n\t\t\t\tanchorOffset = {x: 0, y: labelGap};\n\t\t\t\tswitch(rotation){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tlabelOffset.y = size;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\tlabelOffset.x = size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(rotation < (90 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\n\t\t\t\t\t\t}else if(rotation < (90 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 180){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\n\t\t\t\t\t\t}else if(rotation < (270 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\n\t\t\t\t\t\t}else if(rotation < (270 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size * 0.4 : 0;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(leftBottom){\n\t\t\t\t\tstart.y = stop.y = position === \"center\" ? dim.height/2 : dim.height - offsets.b;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 180 : 0;\n\t\t\t\t\ttitlePos.y = dim.height - offsets.b + titleOffset - (titleRotation ? tsize : 0);\n\t\t\t\t}else{\n\t\t\t\t\tstart.y = stop.y = offsets.t;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 180 : 0;\n\t\t\t\t\ttitlePos.y = offsets.t - titleOffset + (titleRotation ? 0 : tsize);\n\t\t\t\t\ttickVector.y = -1;\n\t\t\t\t\tanchorOffset.y = -anchorOffset.y;\n\t\t\t\t\tswitch(labelAlign){\n\t\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\tlabelOffset.y -= size;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render shapes\n\n\t\t\tthis.cleanGroup();\n\n\t\t\tvar s = this.group,\n\t\t\t\tc = this.scaler,\n\t\t\t\tt = this.ticks,\n\t\t\t\tf = lin.getTransformerFromModel(this.scaler),\n\t\t\t\t// GFX Canvas now supports labels, so let's _not_ fallback to HTML anymore on canvas, just use\n\t\t\t\t// HTML labels if explicitly asked + no rotation + no IE + no Opera\n\t\t\t\tlabelType = (!o.title || !titleRotation) && !rotation && this.opt.htmlLabels && !has(\"ie\") && !has(\"opera\") ? \"html\" : \"gfx\",\n\t\t\t\tdx = tickVector.x * taMajorTick.length,\n\t\t\t\tdy = tickVector.y * taMajorTick.length,\n\t\t\t\tskip = this._skipInterval;\n\n\t\t\ts.createLine({\n\t\t\t\tx1: start.x,\n\t\t\t\ty1: start.y,\n\t\t\t\tx2: stop.x,\n\t\t\t\ty2: stop.y\n\t\t\t}).setStroke(taStroke);\n\n\t\t\t//create axis title\n\t\t\tif(o.title){\n\t\t\t\tvar axisTitle = acommon.createText[labelType](\n\t\t\t\t\tthis.chart,\n\t\t\t\t\ts,\n\t\t\t\t\ttitlePos.x,\n\t\t\t\t\ttitlePos.y,\n\t\t\t\t\t\"middle\",\n\t\t\t\t\to.title,\n\t\t\t\t\ttaTitleFont,\n\t\t\t\t\ttaTitleFontColor\n\t\t\t\t);\n\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\tthis.htmlElements.push(axisTitle);\n\t\t\t\t}else{\n\t\t\t\t\t//as soon as rotation is provided, labelType won't be \"html\"\n\t\t\t\t\t//rotate gfx labels\n\t\t\t\t\taxisTitle.setTransform(g.matrix.rotategAt(titleRotation, titlePos.x, titlePos.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// go out nicely instead of try/catch\n\t\t\tif(t == null){\n\t\t\t\tthis.dirty = false;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar rel = (t.major.length > 0)?(t.major[0].value - this._majorStart) / c.major.tick:0;\n\t\t\tvar canLabel = this.opt.majorLabels;\n\t\t\tarr.forEach(t.major, function(tick, i){\n\t\t\t\tvar offset = f(tick.value), elem,\n\t\t\t\t\tx = (isRtl ? stop.x : start.x) + axisVector.x * offset, // chart mirroring\n\t\t\t\t\ty = start.y + axisVector.y * offset;\n\t\t\t\ti += rel;\n\t\t\t\tthis.createLine(s, {\n\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\tx2: x + dx,\n\t\t\t\t\ty2: y + dy\n\t\t\t\t}).setStroke(taMajorTick);\n\t\t\t\tif(tick.label && (!skip || (i - (1 + skip)) % (1 + skip) == 0)){\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\n\t\t\t\t\t\ttext: tick.label,\n\t\t\t\t\t\ttruncated: false\n\t\t\t\t\t};\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\n\t\t\t\t\telem = this.createText(labelType,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\n\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\n\t\t\t\t\t\tlabelAlign,\n\t\t\t\t\t\tlabel.text,\n\t\t\t\t\t\ttaFont,\n\t\t\t\t\t\ttaFontColor\n\t\t\t\t\t\t//cachedLabelW\n\t\t\t\t\t);\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\n\t\t\t\t\t// truncated label: 11...\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\n\t\t\t\t\tif(label.truncated){\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\n\t\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t\t}else if(rotation){\n\t\t\t\t\t\telem.setTransform([\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\n\t\t\t\t\t\t\tg.matrix.rotategAt(\n\t\t\t\t\t\t\t\trotation,\n\t\t\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x,\n\t\t\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tdx = tickVector.x * taMinorTick.length;\n\t\t\tdy = tickVector.y * taMinorTick.length;\n\t\t\tcanLabel = this.opt.minorLabels && c.minMinorStep <= c.minor.tick * c.bounds.scale;\n\t\t\tarr.forEach(t.minor, function(tick){\n\t\t\t\tvar offset = f(tick.value), elem,\n\t\t\t\t\tx = (isRtl ? stop.x : start.x)  + axisVector.x * offset,\n\t\t\t\t\ty = start.y + axisVector.y * offset; // chart mirroring\n\t\t\t\tthis.createLine(s, {\n\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\tx2: x + dx,\n\t\t\t\t\ty2: y + dy\n\t\t\t\t}).setStroke(taMinorTick);\n\t\t\t\tif(canLabel && tick.label){\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\n\t\t\t\t\t\ttext: tick.label,\n\t\t\t\t\t\ttruncated: false\n\t\t\t\t\t};\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\n\t\t\t\t\telem = this.createText(labelType,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\n\t\t\t\t\t\ty + (taMinorTick.length  > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\n\t\t\t\t\t\tlabelAlign,\n\t\t\t\t\t\tlabel.text,\n\t\t\t\t\t\ttaFont,\n\t\t\t\t\t\ttaFontColor\n\t\t\t\t\t\t//cachedLabelW\n\t\t\t\t\t);\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\n\t\t\t\t\t// truncated label: 11...\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\n\t\t\t\t\tif(label.truncated){\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\n\t\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t\t}else if(rotation){\n\t\t\t\t\t\telem.setTransform([\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\n\t\t\t\t\t\t\tg.matrix.rotategAt(\n\t\t\t\t\t\t\t\trotation,\n\t\t\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x,\n\t\t\t\t\t\t\t\ty + (taMinorTick.length > 0 ? dy : 0) + anchorOffset.y\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tdx = tickVector.x * taMicroTick.length;\n\t\t\tdy = tickVector.y * taMicroTick.length;\n\t\t\tarr.forEach(t.micro, function(tick){\n\t\t\t\tvar offset = f(tick.value),\n\t\t\t\t\tx = start.x + axisVector.x * offset,\n\t\t\t\t\ty = start.y + axisVector.y * offset;\n\t\t\t\t\tthis.createLine(s, {\n\t\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\t\tx2: x + dx,\n\t\t\t\t\t\ty2: y + dy\n\t\t\t\t\t}).setStroke(taMicroTick);\n\t\t\t}, this);\n\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\n\t\t},\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\n\t\t\tvar modules = [\"dijit/Tooltip\"];\n\t\t\tvar aroundRect = {type: \"rect\"}, position = [\"above\", \"below\"],\n\t\t\t\tfontWidth = g._base._getTextBox(truncatedLabel, {font: font}).w || 0,\n\t\t\t\tfontHeight = font ? g.normalizedLength(g.splitFontString(font).size) : 0;\n\t\t\tif(elemType == \"html\"){\n\t\t\t\tlang.mixin(aroundRect, domGeom.position(elem.firstChild, true));\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  dojo,\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseover\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  dojo,\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseout\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tvar shp = elem.getShape(),\n\t\t\t\t\tlt = chart.getCoords();\n\t\t\t\taroundRect = lang.mixin(aroundRect, {\n\t\t\t\t\tx: shp.x - fontWidth / 2,\n\t\t\t\t\ty: shp.y\n\t\t\t\t});\n\t\t\t\taroundRect.x += lt.x;\n\t\t\t\taroundRect.y += lt.y;\n\t\t\t\taroundRect.x = Math.round(aroundRect.x);\n\t\t\t\taroundRect.y = Math.round(aroundRect.y);\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  elem,\n\t\t\t\t\thandle: elem.connect(\"onmouseenter\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  elem,\n\t\t\t\t\thandle: elem.connect(\"onmouseleave\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t_isRtl: function(){\n\t\t\treturn false;\n\t\t}\n\t});\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.axis2d.Default\", [Default, BidiDefault]) : Default;\n});\n","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"..\", \"./Chart\",\n\t\"./axis2d/Default\", \"./axis2d/Invisible\", \"./plot2d/Default\", \"./plot2d/Lines\", \"./plot2d/Areas\",\n\t\"./plot2d/Markers\", \"./plot2d/MarkersOnly\", \"./plot2d/Scatter\", \"./plot2d/Stacked\", \"./plot2d/StackedLines\",\n\t\"./plot2d/StackedAreas\", \"./plot2d/Columns\", \"./plot2d/StackedColumns\", \"./plot2d/ClusteredColumns\",\n\t\"./plot2d/Bars\", \"./plot2d/StackedBars\", \"./plot2d/ClusteredBars\", \"./plot2d/Grid\", \"./plot2d/Pie\",\n\t\"./plot2d/Bubble\", \"./plot2d/Candlesticks\", \"./plot2d/OHLC\", \"./plot2d/Spider\"], \n\t  function(kernel, lang, dojox, Chart){\n\tkernel.deprecated(\"dojox.charting.Chart2D\", \"Use dojox.charting.Chart instead and require all other components explicitly\", \"2.0\");\n\t// module:\n\t//\t\tdojox/charting/Chart2D\n\t// summary:\n\t//\t\tThis is a compatibility module which loads all charting modules that used to be automatically\n\t//\t\tloaded in versions prior to 1.6.  It is highly recommended for performance reasons that\n\t//\t\tthis module no longer be referenced by applications.  Instead, use dojox/charting/Chart.\n\treturn lang.setObject(\"dojox.charting.Chart2D\", Chart);\n});\n","define([\"../SimpleTheme\", \"./common\"], function(SimpleTheme, themes){\n\tthemes.Wetland = new SimpleTheme({\n\t\tcolors: [\n\t\t\t\"#bfbc64\",\n\t\t\t\"#737130\",\n\t\t\t\"#73373b\",\n\t\t\t\"#7dafca\",\n\t\t\t\"#8d3c42\"\n\t\t]\n\t});\n\treturn themes.Wetland;\n});\n","define([\"..\", \"dojo/_base/lang\"], \n  function(dojox, lang){\n\tvar du = lang.getObject(\"lang.utils\", true, dojox);\n\t\n\tvar empty = {}, opts = Object.prototype.toString;\n\n\tvar clone = function(o){\n\t\tif(o){\n\t\t\tswitch(opts.call(o)){\n\t\t\t\tcase \"[object Array]\":\n\t\t\t\t\treturn o.slice(0);\n\t\t\t\tcase \"[object Object]\":\n\t\t\t\t\treturn lang.delegate(o);\n\t\t\t}\n\t\t}\n\t\treturn o;\n\t}\n\t\n\tlang.mixin(du, {\n\t\tcoerceType: function(target, source){\n\t\t\t// summary:\n\t\t\t//\t\tCoerces one object to the type of another.\n\t\t\t// target: Object\n\t\t\t//\t\tobject, which typeof result is used to coerce \"source\" object.\n\t\t\t// source: Object\n\t\t\t//\t\tobject, which will be forced to change type.\n\t\t\tswitch(typeof target){\n\t\t\t\tcase \"number\":\treturn Number(eval(\"(\" + source + \")\"));\n\t\t\t\tcase \"string\":\treturn String(source);\n\t\t\t\tcase \"boolean\":\treturn Boolean(eval(\"(\" + source + \")\"));\n\t\t\t}\n\t\t\treturn eval(\"(\" + source + \")\");\n\t\t},\n\t\t\n\t\tupdateWithObject: function(target, source, conv){\n\t\t\t// summary:\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\n\t\t\t// target: Object\n\t\t\t//\t\tthe \"target\" object to be updated\n\t\t\t// source: Object\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\n\t\t\t// conv: Boolean?\n\t\t\t//\t\tforce conversion to the original type\n\t\t\tif(!source){ return target; }\n\t\t\tfor(var x in target){\n\t\t\t\tif(x in source && !(x in empty)){\n\t\t\t\t\tvar t = target[x];\n\t\t\t\t\tif(t && typeof t == \"object\"){\n\t\t\t\t\t\tdu.updateWithObject(t, source[x], conv);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttarget[x] = conv ? du.coerceType(t, source[x]) : clone(source[x]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\t// Object\n\t\t},\n\t\n\t\tupdateWithPattern: function(target, source, pattern, conv){\n\t\t\t// summary:\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\n\t\t\t// target: Object\n\t\t\t//\t\tthe \"target\" object to be updated\n\t\t\t// source: Object\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\n\t\t\t// pattern: Object\n\t\t\t//\t\tobject, whose properties will be used to pull values from the \"source\"\n\t\t\t// conv: Boolean?\n\t\t\t//\t\tforce conversion to the original type\n\t\t\tif(!source || !pattern){ return target; }\n\t\t\tfor(var x in pattern){\n\t\t\t\tif(x in source && !(x in empty)){\n\t\t\t\t\ttarget[x] = conv ? du.coerceType(pattern[x], source[x]) : clone(source[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\t// Object\n\t\t},\n\t\t\n\t\tmerge: function(object, mixin){\n\t\t\t// summary:\n\t\t\t//\t\tMerge two objects structurally, mixin properties will override object's properties.\n\t\t\t// object: Object\n\t\t\t//\t\toriginal object.\n\t\t\t// mixin: Object\n\t\t\t//\t\tadditional object, which properties will override object's properties.\n\t\t\tif(mixin){\n\t\t\t\tvar otype = opts.call(object), mtype = opts.call(mixin), t, i, l, m;\n\t\t\t\tswitch(mtype){\n\t\t\t\t\tcase \"[object Array]\":\n\t\t\t\t\t\tif(mtype == otype){\n\t\t\t\t\t\t\tt = new Array(Math.max(object.length, mixin.length));\n\t\t\t\t\t\t\tfor(i = 0, l = t.length; i < l; ++i){\n\t\t\t\t\t\t\t\tt[i] = du.merge(object[i], mixin[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn mixin.slice(0);\n\t\t\t\t\tcase \"[object Object]\":\n\t\t\t\t\t\tif(mtype == otype && object){\n\t\t\t\t\t\t\tt = lang.delegate(object);\n\t\t\t\t\t\t\tfor(i in mixin){\n\t\t\t\t\t\t\t\tif(i in object){\n\t\t\t\t\t\t\t\t\tl = object[i];\n\t\t\t\t\t\t\t\t\tm = mixin[i];\n\t\t\t\t\t\t\t\t\tif(m !== l){\n\t\t\t\t\t\t\t\t\t\tt[i] = du.merge(l, m);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tt[i] = lang.clone(mixin[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn lang.clone(mixin);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn mixin;\n\t\t}\n\t});\n\t\n\treturn du;\n});\n","define([\"./functional/lambda\", \"./functional/array\", \"./functional/object\"], function(df){\n\treturn df;\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/Color\", \n\t\t\"dojox/gfx\", \"dojox/lang/functional\", \"../scaler/common\"], \n\tfunction(lang, arr, Color, g, df, sc){\n\t\n\tvar common = lang.getObject(\"dojox.charting.plot2d.common\", true);\n\t\n\treturn lang.mixin(common, {\t\n\t\tdoIfLoaded: sc.doIfLoaded,\n\t\tmakeStroke: function(stroke){\n\t\t\tif(!stroke){ return stroke; }\n\t\t\tif(typeof stroke == \"string\" || stroke instanceof Color){\n\t\t\t\tstroke = {color: stroke};\n\t\t\t}\n\t\t\treturn g.makeParameters(g.defaultStroke, stroke);\n\t\t},\n\t\taugmentColor: function(target, color){\n\t\t\tvar t = new Color(target),\n\t\t\t\tc = new Color(color);\n\t\t\tc.a = t.a;\n\t\t\treturn c;\n\t\t},\n\t\taugmentStroke: function(stroke, color){\n\t\t\tvar s = common.makeStroke(stroke);\n\t\t\tif(s){\n\t\t\t\ts.color = common.augmentColor(s.color, color);\n\t\t\t}\n\t\t\treturn s;\n\t\t},\n\t\taugmentFill: function(fill, color){\n\t\t\tvar fc, c = new Color(color);\n\t\t\tif(typeof fill == \"string\" || fill instanceof Color){\n\t\t\t\treturn common.augmentColor(fill, color);\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\n\t\tdefaultStats: {\n\t\t\tvmin: Number.POSITIVE_INFINITY, vmax: Number.NEGATIVE_INFINITY,\n\t\t\thmin: Number.POSITIVE_INFINITY, hmax: Number.NEGATIVE_INFINITY\n\t\t},\n\n\t\tcollectSimpleStats: function(series, isNullValue){\n\t\t\tvar stats = lang.delegate(common.defaultStats);\n\t\t\tfor(var i = 0; i < series.length; ++i){\n\t\t\t\tvar run = series[i];\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\n\t\t\t\t\tif(!isNullValue(run.data[j])){\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\"){\n\t\t\t\t\t\t\t// 1D case\n\t\t\t\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\n\t\t\t\t\t\t\t\tif(!isNullValue(val)){\n\t\t\t\t\t\t\t\t\tvar x = i + 1, y = val;\n\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\n\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// 2D case\n\t\t\t\t\t\t\tvar old_hmin = stats.hmin, old_hmax = stats.hmax,\n\t\t\t\t\t\t\t\told_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\t\t\t\tif(!(\"xmin\" in run) || !(\"xmax\" in run) || !(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\n\t\t\t\t\t\t\t\t\tif(!isNullValue(val)){\n\t\t\t\t\t\t\t\t\t\tvar x = \"x\" in val ? val.x : i + 1, y = val.y;\n\t\t\t\t\t\t\t\t\t\tif(isNaN(x)){ x = 0; }\n\t\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\n\t\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"xmin\" in run){ stats.hmin = Math.min(old_hmin, run.xmin); }\n\t\t\t\t\t\t\tif(\"xmax\" in run){ stats.hmax = Math.max(old_hmax, run.xmax); }\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\n\t\tcalculateBarSize: function(/* Number */ availableSize, /* Object */ opt, /* Number? */ clusterSize){\n\t\t\tif(!clusterSize){\n\t\t\t\tclusterSize = 1;\n\t\t\t}\n\t\t\tvar gap = opt.gap, size = (availableSize - 2 * gap) / clusterSize;\n\t\t\tif(\"minBarSize\" in opt){\n\t\t\t\tsize = Math.max(size, opt.minBarSize);\n\t\t\t}\n\t\t\tif(\"maxBarSize\" in opt){\n\t\t\t\tsize = Math.min(size, opt.maxBarSize);\n\t\t\t}\n\t\t\tsize = Math.max(size, 1);\n\t\t\tgap = (availableSize - size * clusterSize) / 2;\n\t\t\treturn {size: size, gap: gap};\t// Object\n\t\t},\n\n\t\tcollectStackedStats: function(series){\n\t\t\t// collect statistics\n\t\t\tvar stats = lang.clone(common.defaultStats);\n\t\t\tif(series.length){\n\t\t\t\t// 1st pass: find the maximal length of runs\n\t\t\t\tstats.hmin = Math.min(stats.hmin, 1);\n\t\t\t\tstats.hmax = df.foldl(series, \"seed, run -> Math.max(seed, run.data.length)\", stats.hmax);\n\t\t\t\t// 2nd pass: stack values\n\t\t\t\tfor(var i = 0; i < stats.hmax; ++i){\n\t\t\t\t\tvar v = series[0].data[i];\n\t\t\t\t\tv = v && (typeof v == \"number\" ? v : v.y);\n\t\t\t\t\tif(isNaN(v)){ v = 0; }\n\t\t\t\t\tstats.vmin = Math.min(stats.vmin, v);\n\t\t\t\t\tfor(var j = 1; j < series.length; ++j){\n\t\t\t\t\t\tvar t = series[j].data[i];\n\t\t\t\t\t\tt = t && (typeof t == \"number\" ? t : t.y);\n\t\t\t\t\t\tif(isNaN(t)){ t = 0; }\n\t\t\t\t\t\tv += t;\n\t\t\t\t\t}\n\t\t\t\t\tstats.vmax = Math.max(stats.vmax, v);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\n\t\tcurve: function(/* Number[] */a, /* Number|String */tension){\n\t\t\t//\tFIX for #7235, submitted by Enzo Michelangeli.\n\t\t\t//\tEmulates the smoothing algorithms used in a famous, unnamed spreadsheet\n\t\t\t//\t\tprogram ;)\n\t\t\tvar array = a.slice(0);\n\t\t\tif(tension == \"x\") {\n\t\t\t\tarray[array.length] = array[0];   // add a last element equal to the first, closing the loop\n\t\t\t}\n\t\t\tvar p=arr.map(array, function(item, i){\n\t\t\t\tif(i==0){ return \"M\" + item.x + \",\" + item.y; }\n\t\t\t\tif(!isNaN(tension)) { // use standard Dojo smoothing in tension is numeric\n\t\t\t\t\tvar dx=item.x-array[i-1].x, dy=array[i-1].y;\n\t\t\t\t\treturn \"C\"+(item.x-(tension-1)*(dx/tension))+\",\"+dy+\" \"+(item.x-(dx/tension))+\",\"+item.y+\" \"+item.x+\",\"+item.y;\n\t\t\t\t} else if(tension == \"X\" || tension == \"x\" || tension == \"S\") {\n\t\t\t\t\t// use Excel \"line smoothing\" algorithm (http://xlrotor.com/resources/files.shtml)\n\t\t\t\t\tvar p0, p1 = array[i-1], p2 = array[i], p3;\n\t\t\t\t\tvar bz1x, bz1y, bz2x, bz2y;\n\t\t\t\t\tvar f = 1/6;\n\t\t\t\t\tif(i==1) {\n\t\t\t\t\t\tif(tension == \"x\") {\n\t\t\t\t\t\t\tp0 = array[array.length-2];\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\n\t\t\t\t\t\t\tp0 = p1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tf = 1/3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp0 = array[i-2];\n\t\t\t\t\t}\n\t\t\t\t\tif(i==(array.length-1)) {\n\t\t\t\t\t\tif(tension == \"x\") {\n\t\t\t\t\t\t\tp3 = array[1];\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\n\t\t\t\t\t\t\tp3 = p2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tf = 1/3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp3 = array[i+1];\n\t\t\t\t\t}\n\t\t\t\t\tvar p1p2 = Math.sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));\n\t\t\t\t\tvar p0p2 = Math.sqrt((p2.x-p0.x)*(p2.x-p0.x)+(p2.y-p0.y)*(p2.y-p0.y));\n\t\t\t\t\tvar p1p3 = Math.sqrt((p3.x-p1.x)*(p3.x-p1.x)+(p3.y-p1.y)*(p3.y-p1.y));\n\n\t\t\t\t\tvar p0p2f = p0p2 * f;\n\t\t\t\t\tvar p1p3f = p1p3 * f;\n\n\t\t\t\t\tif(p0p2f > p1p2/2 && p1p3f > p1p2/2) {\n\t\t\t\t\t\tp0p2f = p1p2/2;\n\t\t\t\t\t\tp1p3f = p1p2/2;\n\t\t\t\t\t} else if(p0p2f > p1p2/2) {\n\t\t\t\t\t\tp0p2f = p1p2/2;\n\t\t\t\t\t\tp1p3f = p1p2/2 * p1p3/p0p2;\n\t\t\t\t\t} else if(p1p3f > p1p2/2) {\n\t\t\t\t\t\tp1p3f = p1p2/2;\n\t\t\t\t\t\tp0p2f = p1p2/2 * p0p2/p1p3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tension == \"S\") {\n\t\t\t\t\t\tif(p0 == p1) { p0p2f = 0; }\n\t\t\t\t\t\tif(p2 == p3) { p1p3f = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\tbz1x = p1.x + p0p2f*(p2.x - p0.x)/p0p2;\n\t\t\t\t\tbz1y = p1.y + p0p2f*(p2.y - p0.y)/p0p2;\n\t\t\t\t\tbz2x = p2.x - p1p3f*(p3.x - p1.x)/p1p3;\n\t\t\t\t\tbz2y = p2.y - p1p3f*(p3.y - p1.y)/p1p3;\n\t\t\t\t}\n\t\t\t\treturn \"C\"+(bz1x+\",\"+bz1y+\" \"+bz2x+\",\"+bz2y+\" \"+p2.x+\",\"+p2.y);\n\t\t\t});\n\t\t\treturn p.join(\" \");\n\t\t},\n\t\t\n\t\tgetLabel: function(/*Number*/number, /*Boolean*/fixed, /*Number*/precision){\n\t\t\treturn sc.doIfLoaded(\"dojo/number\", function(numberLib){\n\t\t\t\treturn (fixed ? numberLib.format(number, {places : precision}) :\n\t\t\t\t\tnumberLib.format(number)) || \"\";\n\t\t\t}, function(){\n\t\t\t\treturn fixed ? number.toFixed(precision) : number.toString();\n\t\t\t});\n\t\t}\n\t});\n});\n","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/Color\", \"dojo/_base/sniff\", \"dojo/_base/window\",\n\t    \"dojo/_base/array\",\"dojo/dom\", \"dojo/dom-construct\",\"dojo/dom-geometry\"],\nfunction(kernel, lang, Color, has, win, arr, dom, domConstruct, domGeom){\n\t// module:\n\t//\t\tdojox/gfx\n\t// summary:\n\t//\t\tThis module contains common core Graphics API used by different graphics renderers.\n\n\tvar g = lang.getObject(\"dojox.gfx\", true),\n\t\tb = g._base = {};\n\t\n\t// candidates for dojox.style (work on VML and SVG nodes)\n\tg._hasClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tReturns whether or not the specified classes are a portion of the\n\t\t//\t\tclass list currently applied to the node.\n\t\t\n\t\t// return (new RegExp('(^|\\\\s+)'+classStr+'(\\\\s+|$)')).test(node.className)\t// Boolean\n\t\tvar cls = node.getAttribute(\"className\");\n\t\treturn cls && (\" \" + cls + \" \").indexOf(\" \" + classStr + \" \") >= 0;  // Boolean\n\t};\n\tg._addClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tAdds the specified classes to the end of the class list on the\n\t\t//\t\tpassed node.\n\t\tvar cls = node.getAttribute(\"className\") || \"\";\n\t\tif(!cls || (\" \" + cls + \" \").indexOf(\" \" + classStr + \" \") < 0){\n\t\t\tnode.setAttribute(\"className\", cls + (cls ? \" \" : \"\") + classStr);\n\t\t}\n\t};\n\tg._removeClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tRemoves classes from node.\n\t\tvar cls = node.getAttribute(\"className\");\n\t\tif(cls){\n\t\t\tnode.setAttribute(\n\t\t\t\t\"className\",\n\t\t\t\tcls.replace(new RegExp('(^|\\\\s+)' + classStr + '(\\\\s+|$)'), \"$1$2\")\n\t\t\t);\n\t\t}\n\t};\n\n\t// candidate for dojox.html.metrics (dynamic font resize handler is not implemented here)\n\n\t//\t\tderived from Morris John's emResized measurer\n\tb._getFontMeasurements = function(){\n\t\t// summary:\n\t\t//\t\tReturns an object that has pixel equivilents of standard font\n\t\t//\t\tsize values.\n\t\tvar heights = {\n\t\t\t'1em': 0, '1ex': 0, '100%': 0, '12pt': 0, '16px': 0, 'xx-small': 0,\n\t\t\t'x-small': 0, 'small': 0, 'medium': 0, 'large': 0, 'x-large': 0,\n\t\t\t'xx-large': 0\n\t\t};\n\t\tvar p, oldStyle;\t\n\t\tif(has(\"ie\")){\n\t\t\t//\tWe do a font-size fix if and only if one isn't applied already.\n\t\t\t// NOTE: If someone set the fontSize on the HTML Element, this will kill it.\n\t\t\toldStyle = win.doc.documentElement.style.fontSize || \"\";\n\t\t\tif(!oldStyle){\n\t\t\t\twin.doc.documentElement.style.fontSize=\"100%\";\n\t\t\t}\n\t\t}\n\n\t\t//\t\tset up the measuring node.\n\t\tvar div = domConstruct.create(\"div\", {style: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tleft: \"0\",\n\t\t\t\ttop: \"-100px\",\n\t\t\t\twidth: \"30px\",\n\t\t\t\theight: \"1000em\",\n\t\t\t\tborderWidth: \"0\",\n\t\t\t\tmargin: \"0\",\n\t\t\t\tpadding: \"0\",\n\t\t\t\toutline: \"none\",\n\t\t\t\tlineHeight: \"1\",\n\t\t\t\toverflow: \"hidden\"\n\t\t\t}}, win.body());\n\n\t\t//\t\tdo the measurements.\n\t\tfor(p in heights){\n\t\t\tdiv.style.fontSize = p;\n\t\t\theights[p] = Math.round(div.offsetHeight * 12/16) * 16/12 / 1000;\n\t\t}\n\n\t\tif(has(\"ie\")){\n\t\t\t// Restore the font to its old style.\n\t\t\twin.doc.documentElement.style.fontSize = oldStyle;\n\t\t}\n\t\twin.body().removeChild(div);\n\t\treturn heights; //object\n\t};\n\n\tvar fontMeasurements = null;\n\n\tb._getCachedFontMeasurements = function(recalculate){\n\t\tif(recalculate || !fontMeasurements){\n\t\t\tfontMeasurements = b._getFontMeasurements();\n\t\t}\n\t\treturn fontMeasurements;\n\t};\n\n\t// candidate for dojox.html.metrics\n\n\tvar measuringNode = null, empty = {};\n\tb._getTextBox = function(\t/*String*/ text,\n\t\t\t\t\t\t\t\t/*Object*/ style,\n\t\t\t\t\t\t\t\t/*String?*/ className){\n\t\tvar m, s, al = arguments.length;\n\t\tvar i, box;\n\t\tif(!measuringNode){\n\t\t\tmeasuringNode = domConstruct.create(\"div\", {style: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"-10000px\",\n\t\t\t\tleft: \"0\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t}}, win.body());\n\t\t}\n\t\tm = measuringNode;\n\t\t// reset styles\n\t\tm.className = \"\";\n\t\ts = m.style;\n\t\ts.borderWidth = \"0\";\n\t\ts.margin = \"0\";\n\t\ts.padding = \"0\";\n\t\ts.outline = \"0\";\n\t\t// set new style\n\t\tif(al > 1 && style){\n\t\t\tfor(i in style){\n\t\t\t\tif(i in empty){ continue; }\n\t\t\t\ts[i] = style[i];\n\t\t\t}\n\t\t}\n\t\t// set classes\n\t\tif(al > 2 && className){\n\t\t\tm.className = className;\n\t\t}\n\t\t// take a measure\n\t\tm.innerHTML = text;\n\n\t\tif(m.getBoundingClientRect){\n\t\t\tvar bcr = m.getBoundingClientRect();\n\t\t\tbox = {l: bcr.left, t: bcr.top, w: bcr.width || (bcr.right - bcr.left), h: bcr.height || (bcr.bottom - bcr.top)};\n\t\t}else{\n\t\t\tbox = domGeom.getMarginBox(m);\n\t\t}\n\t\tm.innerHTML = \"\";\n\t\treturn box;\n\t};\n\n\tb._computeTextLocation = function(/*g.defaultTextShape*/textShape, /*Number*/width, /*Number*/height, /*Boolean*/fixHeight) {\n\t\tvar loc = {}, align = textShape.align;\n\t\tswitch (align) {\n\t\t\tcase 'end':\n\t\t\t\tloc.x = textShape.x - width;\n\t\t\t\tbreak;\n\t\t\tcase 'middle':\n\t\t\t\tloc.x = textShape.x - width / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tloc.x = textShape.x;\n\t\t\t\tbreak;\n\t\t}\n\t\tvar c = fixHeight ? 0.75 : 1;\n\t\tloc.y = textShape.y - height*c; // **rough** approximation of the ascent...\n\t\treturn loc;\n\t};\n\tb._computeTextBoundingBox = function(/*shape.Text*/s){\n\t\t// summary:\n\t\t//\t\tCompute the bbox of the given shape.Text instance. Note that this method returns an\n\t\t//\t\tapproximation of the bbox, and should be used when the underlying renderer cannot provide precise metrics.\n\t\tif(!g._base._isRendered(s)){\n\t\t\treturn {x:0, y:0, width:0, height:0};\n\t\t}\n\t\tvar loc, textShape = s.getShape(),\n\t\t\tfont = s.getFont() || g.defaultFont,\n\t\t\tw = s.getTextWidth(),\n\t\t\th = g.normalizedLength(font.size);\n\t\tloc = b._computeTextLocation(textShape, w, h, true);\n\t\treturn {\n\t\t\tx: loc.x,\n\t\t\ty: loc.y,\n\t\t\twidth: w,\n\t\t\theight: h\n\t\t};\n\t};\n\tb._isRendered = function(/*Shape*/s){\n\t\tvar p = s.parent;\n\t\twhile(p && p.getParent){\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn p !== null;\n\t};\n\n\t// candidate for dojo.dom\n\n\tvar uniqueId = 0;\n\tb._getUniqueId = function(){\n\t\t// summary:\n\t\t//\t\treturns a unique string for use with any DOM element\n\t\tvar id;\n\t\tdo{\n\t\t\tid = kernel._scopeName + \"xUnique\" + (++uniqueId);\n\t\t}while(dom.byId(id));\n\t\treturn id;\n\t};\n\n\t// IE10\n\n\tvar touchActionProp = has(\"pointer-events\") ? \"touchAction\" : has(\"MSPointer\") ? \"msTouchAction\" : null;\n\tb._fixMsTouchAction = touchActionProp ? function(/*dojox/gfx/shape.Surface*/surface){\n\t\tsurface.rawNode.style[touchActionProp] = \"none\";\n\t} : function() {};\n\n\t/*=====\n\tg.Stroke = {\n\t\t// summary:\n\t\t//\t\tA stroke defines stylistic properties that are used when drawing a path.\n\n\t\t// color: String\n\t\t//\t\tThe color of the stroke, default value 'black'.\n\t\tcolor: \"black\",\n\n\t\t// style: String\n\t\t//\t\tThe style of the stroke, one of 'solid', ... . Default value 'solid'.\n\t\tstyle: \"solid\",\n\n\t\t// width: Number\n\t\t//\t\tThe width of a stroke, default value 1.\n\t\twidth: 1,\n\n\t\t// cap: String\n\t\t//\t\tThe endcap style of the path. One of 'butt', 'round', ... . Default value 'butt'.\n\t\tcap: \"butt\",\n\n\t\t// join: Number\n\t\t//\t\tThe join style to use when combining path segments. Default value 4.\n\t\tjoin: 4\n\t};\n\t\n\tg.Fill = {\n\t\t// summary:\n\t\t//\t\tDefines how to fill a shape. Four types of fills can be used: solid, linear gradient, radial gradient and pattern.\n\t\t//\t\tSee dojox/gfx.LinearGradient, dojox/gfx.RadialGradient and dojox/gfx.Pattern respectively for more information about the properties supported by each type.\n\t\t\n\t\t// type: String?\n\t\t//\t\tThe type of fill. One of 'linear', 'radial', 'pattern' or undefined. If not specified, a solid fill is assumed.\n\t\ttype:\"\",\n\t\t\n\t\t// color: String|dojo/Color?\n\t\t//\t\tThe color of a solid fill type.\n\t\tcolor:null,\n\t\t\n\t};\n\t\n\tg.LinearGradient = {\n\t\t// summary:\n\t\t//\t\tAn object defining the default stylistic properties used for Linear Gradient fills.\n\t\t//\t\tLinear gradients are drawn along a virtual line, which results in appearance of a rotated pattern in a given direction/orientation.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Linear Gradient, value 'linear'\n\t\ttype: \"linear\",\n\n\t\t// x1: Number\n\t\t//\t\tThe X coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\tx1: 0,\n\n\t\t// y1: Number\n\t\t//\t\tThe Y coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\ty1: 0,\n\n\t\t// x2: Number\n\t\t//\t\tThe X coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\tx2: 100,\n\n\t\t// y2: Number\n\t\t//\t\tThe Y coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\ty2: 100,\n\n\t\t// colors: Array\n\t\t//\t\tAn array of colors at given offsets (from the start of the line).  The start of the line is\n\t\t//\t\tdefined at offest 0 with the end of the line at offset 1.\n\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\tcolors: []\n\t};\n\t\n\tg.RadialGradient = {\n\t\t// summary:\n\t\t//\t\tSpecifies the properties for RadialGradients using in fills patterns.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this is a RadialGradient, value 'radial'\n\t\ttype: \"radial\",\n\n\t\t// cx: Number\n\t\t//\t\tThe X coordinate of the center of the radial gradient, default value 0.\n\t\tcx: 0,\n\n\t\t// cy: Number\n\t\t//\t\tThe Y coordinate of the center of the radial gradient, default value 0.\n\t\tcy: 0,\n\n\t\t// r: Number\n\t\t//\t\tThe radius to the end of the radial gradient, default value 100.\n\t\tr: 100,\n\n\t\t// colors: Array\n\t\t//\t\tAn array of colors at given offsets (from the center of the radial gradient).\n\t\t//\t\tThe center is defined at offest 0 with the outer edge of the gradient at offset 1.\n\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\tcolors: []\n\t};\n\t\n\tg.Pattern = {\n\t\t// summary:\n\t\t//\t\tAn object specifying the default properties for a Pattern using in fill operations.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Pattern, value 'pattern'.\n\t\ttype: \"pattern\",\n\n\t\t// x: Number\n\t\t//\t\tThe X coordinate of the position of the pattern, default value is 0.\n\t\tx: 0,\n\n\t\t// y: Number\n\t\t//\t\tThe Y coordinate of the position of the pattern, default value is 0.\n\t\ty: 0,\n\n\t\t// width: Number\n\t\t//\t\tThe width of the pattern image, default value is 0.\n\t\twidth: 0,\n\n\t\t// height: Number\n\t\t//\t\tThe height of the pattern image, default value is 0.\n\t\theight: 0,\n\n\t\t// src: String\n\t\t//\t\tA url specifying the image to use for the pattern.\n\t\tsrc: \"\"\n\t};\n\n\tg.Text = {\n\t\t//\tsummary:\n\t\t//\t\tA keyword argument object defining both the text to be rendered in a VectorText shape,\n\t\t//\t\tand specifying position, alignment, and fitting.\n\t\t//\ttext: String\n\t\t//\t\tThe text to be rendered.\n\t\t//\tx: Number?\n\t\t//\t\tThe left coordinate for the text's bounding box.\n\t\t//\ty: Number?\n\t\t//\t\tThe top coordinate for the text's bounding box.\n\t\t//\twidth: Number?\n\t\t//\t\tThe width of the text's bounding box.\n\t\t//\theight: Number?\n\t\t//\t\tThe height of the text's bounding box.\n\t\t//\talign: String?\n\t\t//\t\tThe alignment of the text, as defined in SVG. Can be \"start\", \"end\" or \"middle\".\n\t\t//\tfitting: Number?\n\t\t//\t\tHow the text is to be fitted to the bounding box. Can be 0 (no fitting), 1 (fitting based on\n\t\t//\t\tpassed width of the bounding box and the size of the font), or 2 (fit text to the bounding box,\n\t\t//\t\tand ignore any size parameters).\n\t\t//\tleading: Number?\n\t\t//\t\tThe leading to be used between lines in the text.\n\t\t//\tdecoration: String?\n\t\t//\t\tAny text decoration to be used.\n\t};\n\n\tg.Font = {\n\t\t// summary:\n\t\t//\t\tAn object specifying the properties for a Font used in text operations.\n\t\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Font, value 'font'.\n\t\ttype: \"font\",\n\t\n\t\t// style: String\n\t\t//\t\tThe font style, one of 'normal', 'bold', default value 'normal'.\n\t\tstyle: \"normal\",\n\t\n\t\t// variant: String\n\t\t//\t\tThe font variant, one of 'normal', ... , default value 'normal'.\n\t\tvariant: \"normal\",\n\t\n\t\t// weight: String\n\t\t//\t\tThe font weight, one of 'normal', ..., default value 'normal'.\n\t\tweight: \"normal\",\n\t\n\t\t// size: String\n\t\t//\t\tThe font size (including units), default value '10pt'.\n\t\tsize: \"10pt\",\n\t\n\t\t// family: String\n\t\t//\t\tThe font family, one of 'serif', 'sanserif', ..., default value 'serif'.\n\t\tfamily: \"serif\"\n\t};\n\n\t=====*/\n\n\tlang.mixin(g, {\n\t\t// summary:\n\t\t//\t\tdefines constants, prototypes, and utility functions for the core Graphics API\n\n\t\t// default shapes, which are used to fill in missing parameters\n\t\tdefaultPath: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Path prototype object.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Path, default value 'path'.\n\t\t\ttype: \"path\", \n\n\t\t\t// path: String\n\t\t\t//\t\tThe path commands. See W32C SVG 1.0 specification.\n\t\t\t//\t\tDefaults to empty string value.\n\t\t\tpath: \"\"\n\t\t},\n\t\tdefaultPolyline: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default PolyLine prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a PolyLine, default value 'polyline'.\n\t\t\ttype: \"polyline\",\n\n\t\t\t// points: Array\n\t\t\t//\t\tAn array of point objects [{x:0,y:0},...] defining the default polyline's line segments. Value is an empty array [].\n\t\t\tpoints: []\n\t\t},\n\t\tdefaultRect: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Rect prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this default object is a type of Rect. Value is 'rect'\n\t\t\ttype: \"rect\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the default rectangles position, value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the default rectangle's position, value 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the default rectangle, value 100.\n\t\t\twidth: 100,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the default rectangle, value 100.\n\t\t\theight: 100,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe corner radius for the default rectangle, value 0.\n\t\t\tr: 0\n\t\t},\n\t\tdefaultEllipse: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Ellipse prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies that this object is a type of Ellipse, value is 'ellipse'\n\t\t\ttype: \"ellipse\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the ellipse, default value 0.\n\t\t\tcx: 0,\n\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the ellipse, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// rx: Number\n\t\t\t//\t\tThe radius of the ellipse in the X direction, default value 200.\n\t\t\trx: 200,\n\n\t\t\t// ry: Number\n\t\t\t//\t\tThe radius of the ellipse in the Y direction, default value 200.\n\t\t\try: 100\n\t\t},\n\t\tdefaultCircle: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default Circle prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a circle, value 'circle'\n\t\t\ttype: \"circle\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the circle, default value 0.\n\t\t\tcx: 0,\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the circle, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe radius, default value 100.\n\t\t\tr: 100\n\t\t},\n\t\tdefaultLine: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default Line prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a Line, value 'line'\n\t\t\ttype: \"line\",\n\n\t\t\t// x1: Number\n\t\t\t//\t\tThe X coordinate of the start of the line, default value 0.\n\t\t\tx1: 0,\n\n\t\t\t// y1: Number\n\t\t\t//\t\tThe Y coordinate of the start of the line, default value 0.\n\t\t\ty1: 0,\n\n\t\t\t// x2: Number\n\t\t\t//\t\tThe X coordinate of the end of the line, default value 100.\n\t\t\tx2: 100,\n\n\t\t\t// y2: Number\n\t\t\t//\t\tThe Y coordinate of the end of the line, default value 100.\n\t\t\ty2: 100\n\t\t},\n\t\tdefaultImage: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Image prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is an image, value 'image'.\n\t\t\ttype: \"image\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the image's position, default value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the image's position, default value 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the image, default value 0.\n\t\t\twidth: 0,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the image, default value 0.\n\t\t\theight: 0,\n\n\t\t\t// src: String\n\t\t\t//\t\tThe src url of the image, defaults to empty string.\n\t\t\tsrc: \"\"\n\t\t},\n\t\tdefaultText: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Text prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a Text shape, value 'text'.\n\t\t\ttype: \"text\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the text position, default value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the text position, default value 0.\n\t\t\ty: 0,\n\n\t\t\t// text: String\n\t\t\t//\t\tThe text to be displayed, default value empty string.\n\t\t\ttext: \"\",\n\n\t\t\t// align:\tString\n\t\t\t//\t\tThe horizontal text alignment, one of 'start', 'end', 'center'. Default value 'start'.\n\t\t\talign: \"start\",\n\n\t\t\t// decoration: String\n\t\t\t//\t\tThe text decoration , one of 'none', ... . Default value 'none'.\n\t\t\tdecoration: \"none\",\n\n\t\t\t// rotated: Boolean\n\t\t\t//\t\tWhether the text is rotated, boolean default value false.\n\t\t\trotated: false,\n\n\t\t\t// kerning: Boolean\n\t\t\t//\t\tWhether kerning is used on the text, boolean default value true.\n\t\t\tkerning: true\n\t\t},\n\t\tdefaultTextPath: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default TextPath prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a TextPath, value 'textpath'.\n\t\t\ttype: \"textpath\",\n\n\t\t\t// text: String\n\t\t\t//\t\tThe text to be displayed, default value empty string.\n\t\t\ttext: \"\",\n\n\t\t\t// align: String\n\t\t\t//\t\tThe horizontal text alignment, one of 'start', 'end', 'center'. Default value 'start'.\n\t\t\talign: \"start\",\n\n\t\t\t// decoration: String\n\t\t\t//\t\tThe text decoration , one of 'none', ... . Default value 'none'.\n\t\t\tdecoration: \"none\",\n\n\t\t\t// rotated: Boolean\n\t\t\t//\t\tWhether the text is rotated, boolean default value false.\n\t\t\trotated: false,\n\n\t\t\t// kerning: Boolean\n\t\t\t//\t\tWhether kerning is used on the text, boolean default value true.\n\t\t\tkerning: true\n\t\t},\n\n\t\t// default stylistic attributes\n\t\tdefaultStroke: {\n\t\t\t// summary:\n\t\t\t//\t\tA stroke defines stylistic properties that are used when drawing a path.\n\t\t\t//\t\tThis object defines the default Stroke prototype.\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a type of Stroke, value 'stroke'.\n\t\t\ttype: \"stroke\",\n\n\t\t\t// color: String\n\t\t\t//\t\tThe color of the stroke, default value 'black'.\n\t\t\tcolor: \"black\",\n\n\t\t\t// style: String\n\t\t\t//\t\tThe style of the stroke, one of 'solid', ... . Default value 'solid'.\n\t\t\tstyle: \"solid\",\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of a stroke, default value 1.\n\t\t\twidth: 1,\n\n\t\t\t// cap: String\n\t\t\t//\t\tThe endcap style of the path. One of 'butt', 'round', ... . Default value 'butt'.\n\t\t\tcap: \"butt\",\n\n\t\t\t// join: Number\n\t\t\t//\t\tThe join style to use when combining path segments. Default value 4.\n\t\t\tjoin: 4\n\t\t},\n\t\tdefaultLinearGradient: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default stylistic properties used for Linear Gradient fills.\n\t\t\t//\t\tLinear gradients are drawn along a virtual line, which results in appearance of a rotated pattern in a given direction/orientation.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Linear Gradient, value 'linear'\n\t\t\ttype: \"linear\",\n\n\t\t\t// x1: Number\n\t\t\t//\t\tThe X coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\t\tx1: 0,\n\n\t\t\t// y1: Number\n\t\t\t//\t\tThe Y coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\t\ty1: 0,\n\n\t\t\t// x2: Number\n\t\t\t//\t\tThe X coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\t\tx2: 100,\n\n\t\t\t// y2: Number\n\t\t\t//\t\tThe Y coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\t\ty2: 100,\n\n\t\t\t// colors: Array\n\t\t\t//\t\tAn array of colors at given offsets (from the start of the line).  The start of the line is\n\t\t\t//\t\tdefined at offest 0 with the end of the line at offset 1.\n\t\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\t\tcolors: [\n\t\t\t\t{ offset: 0, color: \"black\" }, { offset: 1, color: \"white\" }\n\t\t\t]\n\t\t},\n\t\tdefaultRadialGradient: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for RadialGradients using in fills patterns.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a RadialGradient, value 'radial'\n\t\t\ttype: \"radial\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the radial gradient, default value 0.\n\t\t\tcx: 0,\n\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the radial gradient, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe radius to the end of the radial gradient, default value 100.\n\t\t\tr: 100,\n\n\t\t\t// colors: Array\n\t\t\t//\t\tAn array of colors at given offsets (from the center of the radial gradient).\n\t\t\t//\t\tThe center is defined at offest 0 with the outer edge of the gradient at offset 1.\n\t\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\t\tcolors: [\n\t\t\t\t{ offset: 0, color: \"black\" }, { offset: 1, color: \"white\" }\n\t\t\t]\n\t\t},\n\t\tdefaultPattern: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for a Pattern using in fill operations.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Pattern, value 'pattern'.\n\t\t\ttype: \"pattern\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the position of the pattern, default value is 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the position of the pattern, default value is 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the pattern image, default value is 0.\n\t\t\twidth: 0,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the pattern image, default value is 0.\n\t\t\theight: 0,\n\n\t\t\t// src: String\n\t\t\t//\t\tA url specifying the image to use for the pattern.\n\t\t\tsrc: \"\"\n\t\t},\n\t\tdefaultFont: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for a Font used in text operations.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Font, value 'font'.\n\t\t\ttype: \"font\",\n\n\t\t\t// style: String\n\t\t\t//\t\tThe font style, one of 'normal', 'bold', default value 'normal'.\n\t\t\tstyle: \"normal\",\n\n\t\t\t// variant: String\n\t\t\t//\t\tThe font variant, one of 'normal', ... , default value 'normal'.\n\t\t\tvariant: \"normal\",\n\n\t\t\t// weight: String\n\t\t\t//\t\tThe font weight, one of 'normal', ..., default value 'normal'.\n\t\t\tweight: \"normal\",\n\n\t\t\t// size: String\n\t\t\t//\t\tThe font size (including units), default value '10pt'.\n\t\t\tsize: \"10pt\",\n\n\t\t\t// family: String\n\t\t\t//\t\tThe font family, one of 'serif', 'sanserif', ..., default value 'serif'.\n\t\t\tfamily: \"serif\"\n\t\t},\n\n\t\tgetDefault: (function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a function used to access default memoized prototype objects (see them defined above).\n\t\t\tvar typeCtorCache = {};\n\t\t\t// a memoized delegate()\n\t\t\treturn function(/*String*/ type){\n\t\t\t\tvar t = typeCtorCache[type];\n\t\t\t\tif(t){\n\t\t\t\t\treturn new t();\n\t\t\t\t}\n\t\t\t\tt = typeCtorCache[type] = new Function();\n\t\t\t\tt.prototype = g[ \"default\" + type ];\n\t\t\t\treturn new t();\n\t\t\t}\n\t\t})(),\n\n\t\tnormalizeColor: function(/*dojo/Color|Array|string|Object*/ color){\n\t\t\t// summary:\n\t\t\t//\t\tconverts any legal color representation to normalized\n\t\t\t//\t\tdojo/Color object\n\t\t\t// color:\n\t\t\t//\t\tA color representation.\n\t\t\treturn (color instanceof Color) ? color : new Color(color); // dojo/Color\n\t\t},\n\t\tnormalizeParameters: function(existed, update){\n\t\t\t// summary:\n\t\t\t//\t\tupdates an existing object with properties from an 'update'\n\t\t\t//\t\tobject\n\t\t\t// existed: Object\n\t\t\t//\t\tthe target object to be updated\n\t\t\t// update: Object\n\t\t\t//\t\tthe 'update' object, whose properties will be used to update\n\t\t\t//\t\tthe existed object\n\t\t\tvar x;\n\t\t\tif(update){\n\t\t\t\tvar empty = {};\n\t\t\t\tfor(x in existed){\n\t\t\t\t\tif(x in update && !(x in empty)){\n\t\t\t\t\t\texisted[x] = update[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn existed;\t// Object\n\t\t},\n\t\tmakeParameters: function(defaults, update){\n\t\t\t// summary:\n\t\t\t//\t\tcopies the original object, and all copied properties from the\n\t\t\t//\t\t'update' object\n\t\t\t// defaults: Object\n\t\t\t//\t\tthe object to be cloned before updating\n\t\t\t// update: Object\n\t\t\t//\t\tthe object, which properties are to be cloned during updating\n\t\t\t// returns: Object\n\t\t\t//      new object with new and default properties\n\t\t\tvar i = null;\n\t\t\tif(!update){\n\t\t\t\t// return dojo.clone(defaults);\n\t\t\t\treturn lang.delegate(defaults);\n\t\t\t}\n\t\t\tvar result = {};\n\t\t\tfor(i in defaults){\n\t\t\t\tif(!(i in result)){\n\t\t\t\t\tresult[i] = lang.clone((i in update) ? update[i] : defaults[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result; // Object\n\t\t},\n\t\tformatNumber: function(x, addSpace){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a number to a string using a fixed notation\n\t\t\t// x: Number\n\t\t\t//\t\tnumber to be converted\n\t\t\t// addSpace: Boolean\n\t\t\t//\t\twhether to add a space before a positive number\n\t\t\t// returns: String\n\t\t\t//      the formatted value\n\t\t\tvar val = x.toString();\n\t\t\tif(val.indexOf(\"e\") >= 0){\n\t\t\t\tval = x.toFixed(4);\n\t\t\t}else{\n\t\t\t\tvar point = val.indexOf(\".\");\n\t\t\t\tif(point >= 0 && val.length - point > 5){\n\t\t\t\t\tval = x.toFixed(4);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(x < 0){\n\t\t\t\treturn val; // String\n\t\t\t}\n\t\t\treturn addSpace ? \" \" + val : val; // String\n\t\t},\n\t\t// font operations\n\t\tmakeFontString: function(font){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a font object to a CSS font string\n\t\t\t// font: Object\n\t\t\t//\t\tfont object (see dojox/gfx.defaultFont)\n\t\t\treturn font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \" \" + font.family; // Object\n\t\t},\n\t\tsplitFontString: function(str){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a CSS font string to a font object\n\t\t\t// description:\n\t\t\t//\t\tConverts a CSS font string to a gfx font object. The CSS font\n\t\t\t//\t\tstring components should follow the W3C specified order\n\t\t\t//\t\t(see http://www.w3.org/TR/CSS2/fonts.html#font-shorthand):\n\t\t\t//\t\tstyle, variant, weight, size, optional line height (will be\n\t\t\t//\t\tignored), and family. Note that the Font.size attribute is limited to numeric CSS length.\n\t\t\t// str: String\n\t\t\t//\t\ta CSS font string.\n\t\t\t// returns: Object\n\t\t\t//      object in dojox/gfx.defaultFont format\n\t\t\tvar font = g.getDefault(\"Font\");\n\t\t\tvar t = str.split(/\\s+/);\n\t\t\tdo{\n\t\t\t\tif(t.length < 5){ break; }\n\t\t\t\tfont.style   = t[0];\n\t\t\t\tfont.variant = t[1];\n\t\t\t\tfont.weight  = t[2];\n\t\t\t\tvar i = t[3].indexOf(\"/\");\n\t\t\t\tfont.size = i < 0 ? t[3] : t[3].substring(0, i);\n\t\t\t\tvar j = 4;\n\t\t\t\tif(i < 0){\n\t\t\t\t\tif(t[4] == \"/\"){\n\t\t\t\t\t\tj = 6;\n\t\t\t\t\t}else if(t[4].charAt(0) == \"/\"){\n\t\t\t\t\t\tj = 5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(j < t.length){\n\t\t\t\t\tfont.family = t.slice(j).join(\" \");\n\t\t\t\t}\n\t\t\t}while(false);\n\t\t\treturn font;\t// Object\n\t\t},\n\t\t// length operations\n\n\t\t// cm_in_pt: Number\n\t\t//\t\tpoints per centimeter (constant)\n\t\tcm_in_pt: 72 / 2.54,\n\n\t\t// mm_in_pt: Number\n\t\t//\t\tpoints per millimeter (constant)\n\t\tmm_in_pt: 7.2 / 2.54,\n\n\t\tpx_in_pt: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current number of pixels per point.\n\t\t\treturn g._base._getCachedFontMeasurements()[\"12pt\"] / 12;\t// Number\n\t\t},\n\n\t\tpt2px: function(len){\n\t\t\t// summary:\n\t\t\t//\t\tconverts points to pixels\n\t\t\t// len: Number\n\t\t\t//\t\ta value in points\n\t\t\treturn len * g.px_in_pt();\t// Number\n\t\t},\n\n\t\tpx2pt: function(len){\n\t\t\t// summary:\n\t\t\t//\t\tconverts pixels to points\n\t\t\t// len: Number\n\t\t\t//\t\ta value in pixels\n\t\t\treturn len / g.px_in_pt();\t// Number\n\t\t},\n\n\t\tnormalizedLength: function(len) {\n\t\t\t// summary:\n\t\t\t//\t\tconverts any length value to pixels\n\t\t\t// len: String\n\t\t\t//\t\ta length, e.g., '12pc'\n\t\t\t// returns: Number\n\t\t\t//      pixels\n\t\t\tif(len.length === 0){ return 0; }\n\t\t\tif(len.length > 2){\n\t\t\t\tvar px_in_pt = g.px_in_pt();\n\t\t\t\tvar val = parseFloat(len);\n\t\t\t\tswitch(len.slice(-2)){\n\t\t\t\t\tcase \"px\": return val;\n\t\t\t\t\tcase \"pt\": return val * px_in_pt;\n\t\t\t\t\tcase \"in\": return val * 72 * px_in_pt;\n\t\t\t\t\tcase \"pc\": return val * 12 * px_in_pt;\n\t\t\t\t\tcase \"mm\": return val * g.mm_in_pt * px_in_pt;\n\t\t\t\t\tcase \"cm\": return val * g.cm_in_pt * px_in_pt;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parseFloat(len);\t// Number\n\t\t},\n\n\t\t// pathVmlRegExp: RegExp\n\t\t//\t\ta constant regular expression used to split a SVG/VML path into primitive components\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tpathVmlRegExp: /([A-Za-z]+)|(\\d+(\\.\\d+)?)|(\\.\\d+)|(-\\d+(\\.\\d+)?)|(-\\.\\d+)/g,\n\n\t\t// pathVmlRegExp: RegExp\n\t\t//\t\ta constant regular expression used to split a SVG/VML path into primitive components\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tpathSvgRegExp: /([A-DF-Za-df-z])|([-+]?\\d*[.]?\\d+(?:[eE][-+]?\\d+)?)/g,\n\n\t\tequalSources: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tcompares event sources, returns true if they are equal\n\t\t\t// a: Object\n\t\t\t//\t\tfirst event source\n\t\t\t// b: Object\n\t\t\t//\t\tevent source to compare against a\n\t\t\t// returns: Boolean\n\t\t\t//      true, if objects are truthy and the same\n\t\t\treturn a && b && a === b;\n\t\t},\n\n\t\tswitchTo: function(/*String|Object*/ renderer){\n\t\t\t// summary:\n\t\t\t//\t\tswitch the graphics implementation to the specified renderer.\n\t\t\t// renderer:\n\t\t\t//\t\tEither the string name of a renderer (eg. 'canvas', 'svg, ...) or the renderer\n\t\t\t//\t\tobject to switch to.\n\t\t\tvar ns = typeof renderer == \"string\" ? g[renderer] : renderer;\n\t\t\tif(ns){\n\t\t\t\t// If more options are added, update the docblock at the end of shape.js!\n\t\t\t\tarr.forEach([\"Group\", \"Rect\", \"Ellipse\", \"Circle\", \"Line\",\n\t\t\t\t\t\t\"Polyline\", \"Image\", \"Text\", \"Path\", \"TextPath\",\n\t\t\t\t\t\t\"Surface\", \"createSurface\", \"fixTarget\"], function(name){\n\t\t\t\t\tg[name] = ns[name];\n\t\t\t\t});\n\t\t\t\tif(typeof renderer == \"string\"){\n\t\t\t\t\tg.renderer = renderer;\n\t\t\t\t}else{\n\t\t\t\t\tarr.some([\"svg\",\"vml\",\"canvas\",\"canvasWithEvents\",\"silverlight\"], function(r){\n\t\t\t\t\t\treturn (g.renderer = g[r] && g[r].Surface === g.Surface ? r : null);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*=====\n\t\tg.createSurface = function(parentNode, width, height){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a surface\n\t\t\t// parentNode: Node\n\t\t\t//\t\ta parent node\n\t\t\t// width: String|Number\n\t\t\t//\t\twidth of surface, e.g., \"100px\" or 100\n\t\t\t// height: String|Number\n\t\t\t//\t\theight of surface, e.g., \"100px\" or 100\n\t\t\t// returns: dojox/gfx.Surface\n\t\t\t//     newly created surface\n\t\t};\n\t\tg.fixTarget = function(){\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t};\n\t=====*/\n\t\n\treturn g; // defaults object api\n});\n","define([\"dojo/_base/lang\", \"./gfx/_base\", \"./gfx/renderer!\"], \n  function(lang, gfxBase, renderer){\n\t// module:\n\t//\t\tdojox/gfx\n\t// summary:\n\t//\t\tThis the root of the Dojo Graphics package\n\tgfxBase.switchTo(renderer);\n\treturn gfxBase;\n});\n","define([\"dojo/_base/lang\", \"./_base\", \"./matrix\", \"dojo/_base/Color\", \"dojo/_base/array\", \"dojo/_base/fx\", \"dojo/_base/connect\", \"dojo/sniff\"], \n  function(lang, g, m, Color, arr, fx, Hub, has){\n\tvar fxg = g.fx = {};\n\n\t// Generic interpolators. Should they be moved to dojox.fx?\n\n\tfunction InterpolNumber(start, end){\n\t\tthis.start = start, this.end = end;\n\t}\n\tInterpolNumber.prototype.getValue = function(r){\n\t\treturn (this.end - this.start) * r + this.start;\n\t};\n\n\tfunction InterpolUnit(start, end, units){\n\t\tthis.start = start, this.end = end;\n\t\tthis.units = units;\n\t}\n\tInterpolUnit.prototype.getValue = function(r){\n\t\treturn (this.end - this.start) * r + this.start + this.units;\n\t};\n\n\tfunction InterpolColor(start, end){\n\t\tthis.start = start, this.end = end;\n\t\tthis.temp = new Color();\n\t}\n\tInterpolColor.prototype.getValue = function(r){\n\t\treturn Color.blendColors(this.start, this.end, r, this.temp);\n\t};\n\n\tfunction InterpolValues(values){\n\t\tthis.values = values;\n\t\tthis.length = values.length;\n\t}\n\tInterpolValues.prototype.getValue = function(r){\n\t\treturn this.values[Math.min(Math.floor(r * this.length), this.length - 1)];\n\t};\n\n\tfunction InterpolObject(values, def){\n\t\tthis.values = values;\n\t\tthis.def = def ? def : {};\n\t}\n\tInterpolObject.prototype.getValue = function(r){\n\t\tvar ret = lang.clone(this.def);\n\t\tfor(var i in this.values){\n\t\t\tret[i] = this.values[i].getValue(r);\n\t\t}\n\t\treturn ret;\n\t};\n\n\tfunction InterpolTransform(stack, original){\n\t\tthis.stack = stack;\n\t\tthis.original = original;\n\t}\n\tInterpolTransform.prototype.getValue = function(r){\n\t\tvar ret = [];\n\t\tarr.forEach(this.stack, function(t){\n\t\t\tif(t instanceof m.Matrix2D){\n\t\t\t\tret.push(t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(t.name == \"original\" && this.original){\n\t\t\t\tret.push(this.original);\n\t\t\t\treturn;\n\t\t\t}\n \t\t\t// Adding support for custom matrices\n \t\t\tif(t.name == \"matrix\"){\n \t\t\t\tif((t.start instanceof m.Matrix2D) && (t.end instanceof m.Matrix2D)){\n \t\t\t\t\tvar transfMatrix = new m.Matrix2D();\n \t\t\t\t\tfor(var p in t.start) {\n \t\t\t\t\t\ttransfMatrix[p] = (t.end[p] - t.start[p])*r + t.start[p];\n \t\t\t\t\t}\n \t\t\t\t\tret.push(transfMatrix);\n \t\t\t\t}\n \t\t\t\treturn;\n \t\t\t}\n\t\t\tif(!(t.name in m)){ return; }\n\t\t\tvar f = m[t.name];\n\t\t\tif(typeof f != \"function\"){\n\t\t\t\t// constant\n\t\t\t\tret.push(f);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar val = arr.map(t.start, function(v, i){\n\t\t\t\t\t\t\treturn (t.end[i] - v) * r + v;\n\t\t\t\t\t\t}),\n\t\t\t\tmatrix = f.apply(m, val);\n\t\t\tif(matrix instanceof m.Matrix2D){\n\t\t\t\tret.push(matrix);\n\t\t\t}\n\t\t}, this);\n\t\treturn ret;\n\t};\n\n\tvar transparent = new Color(0, 0, 0, 0);\n\n\tfunction getColorInterpol(prop, obj, name, def){\n\t\tif(prop.values){\n\t\t\treturn new InterpolValues(prop.values);\n\t\t}\n\t\tvar value, start, end;\n\t\tif(prop.start){\n\t\t\tstart = g.normalizeColor(prop.start);\n\t\t}else{\n\t\t\tstart = value = obj ? (name ? obj[name] : obj) : def;\n\t\t}\n\t\tif(prop.end){\n\t\t\tend = g.normalizeColor(prop.end);\n\t\t}else{\n\t\t\tif(!value){\n\t\t\t\tvalue = obj ? (name ? obj[name] : obj) : def;\n\t\t\t}\n\t\t\tend = value;\n\t\t}\n\t\treturn new InterpolColor(start, end);\n\t}\n\n\tfunction getNumberInterpol(prop, obj, name, def){\n\t\tif(prop.values){\n\t\t\treturn new InterpolValues(prop.values);\n\t\t}\n\t\tvar value, start, end;\n\t\tif(prop.start){\n\t\t\tstart = prop.start;\n\t\t}else{\n\t\t\tstart = value = obj ? obj[name] : def;\n\t\t}\n\t\tif(prop.end){\n\t\t\tend = prop.end;\n\t\t}else{\n\t\t\tif(typeof value != \"number\"){\n\t\t\t\tvalue = obj ? obj[name] : def;\n\t\t\t}\n\t\t\tend = value;\n\t\t}\n\t\treturn new InterpolNumber(start, end);\n\t}\n\n\tfxg.animateStroke = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change stroke properties over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tfxg.animateStroke{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"},\n\t\t//\t|\t\twidth: {end: 15},\n\t\t//\t|\t\tjoin:  {values: [\"miter\", \"bevel\", \"round\"]}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, stroke;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tstroke = shape.getStroke();\n\t\t\tvar prop = args.color, values = {}, value, start, end;\n\t\t\tif(prop){\n\t\t\t\tvalues.color = getColorInterpol(prop, stroke, \"color\", transparent);\n\t\t\t}\n\t\t\tprop = args.style;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.width;\n\t\t\tif(prop){\n\t\t\t\tvalues.width = getNumberInterpol(prop, stroke, \"width\", 1);\n\t\t\t}\n\t\t\tprop = args.cap;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.cap = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.join;\n\t\t\tif(prop){\n\t\t\t\tif(prop.values){\n\t\t\t\t\tvalues.join = new InterpolValues(prop.values);\n\t\t\t\t}else{\n\t\t\t\t\tstart = prop.start ? prop.start : (stroke && stroke.join || 0);\n\t\t\t\t\tend = prop.end ? prop.end : (stroke && stroke.join || 0);\n\t\t\t\t\tif(typeof start == \"number\" && typeof end == \"number\"){\n\t\t\t\t\t\tvalues.join = new InterpolNumber(start, end);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.curve = new InterpolObject(values, stroke);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setStroke\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateFill = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change fill color over time.\n\t\t//\t\tOnly solid fill color is supported at the moment\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateFill{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, fill;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tfill = shape.getFill();\n\t\t\tvar prop = args.color, values = {};\n\t\t\tif(prop){\n\t\t\t\tthis.curve = getColorInterpol(prop, fill, \"\", transparent);\n\t\t\t}\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFill\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateFont = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change font properties over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateFont{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tvariant: {values: [\"normal\", \"small-caps\"]},\n\t\t//\t|\t\tsize:  {end: 10, units: \"pt\"}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, font;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tfont = shape.getFont();\n\t\t\tvar prop = args.style, values = {}, value, start, end;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.variant;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.variant = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.weight;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.weight = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.family;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.family = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.size;\n\t\t\tif(prop && prop.units){\n\t\t\t\tstart = parseFloat(prop.start ? prop.start : (shape.font && shape.font.size || \"0\"));\n\t\t\t\tend = parseFloat(prop.end ? prop.end : (shape.font && shape.font.size || \"0\"));\n\t\t\t\tvalues.size = new InterpolUnit(start, end, prop.units);\n\t\t\t}\n\t\t\tthis.curve = new InterpolObject(values, font);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFont\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateTransform = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change transformation over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateTransform{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\ttransform: [\n\t\t//\t|\t\t\t{name: \"translate\", start: [0, 0], end: [200, 200]},\n\t\t//\t|\t\t\t{name: \"original\"}\n\t\t//\t|\t\t]\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, original;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\toriginal = shape.getTransform();\n\t\t\tthis.curve = new InterpolTransform(args.transform, original);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setTransform\");\n\t\tif(g.renderer === \"svg\" && (has(\"ie\") >= 9 || has(\"ff\"))){\n\t\t\t// fix http://bugs.dojotoolkit.org/ticket/16879\n\t\t\tvar handlers = [\n\t\t\t\t\tHub.connect(anim, \"onBegin\", anim, function(){\n\t\t\t\t\t\tvar parent = shape.getParent();\n\t\t\t\t\t\twhile(parent && parent.getParent){\n\t\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(parent){\n\t\t\t\t\t\t\tshape.__svgContainer = parent.rawNode.parentNode;\n\t\t\t\t\t\t\tshape.__svgRoot = parent.rawNode;\n\t\t\t\t\t\t\tif(shape.__svgRoot && shape.__svgRoot.getAttribute){\n\t\t\t\t\t\t\t\tshape.__svgWidth = parseInt(shape.__svgRoot.getAttribute(\"width\"), 10);\n\t\t\t\t\t\t\t\tif(isNaN(shape.__svgWidth)){\n\t\t\t\t\t\t\t\t\tdelete shape.__svgWidth;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tHub.connect(anim, \"onAnimate\", anim, function(){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(shape.__svgContainer){\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = \"visible\";\n\t\t\t\t\t\t\t\tvar pokeNode = shape.__svgContainer.offsetHeight;\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = ov;\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\n\t\t\t\t\t\t\t\tif(!isNaN(width)){\n\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width  - 0.000005);\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width);\n\t\t\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t}),\n\t\t\t\t\tHub.connect(anim, \"onEnd\", anim, function(){\n\t\t\t\t\t\tarr.forEach(handlers, Hub.disconnect);\n\t\t\t\t\t\tif(shape.__svgContainer){\n\t\t\t\t\t\t\tvar sn = shape.__svgContainer;\n\t\t\t\t\t\t\tif(sn.getAttribute(\"__gotVis\") == null){\n\t\t\t\t\t\t\t\tsn.setAttribute(\"__gotVis\", true);\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\n\t\t\t\t\t\t\t\tvar root = shape.__svgRoot;\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\n\t\t\t\t\t\t\t\tsn.style.visibility = \"visible\";\n\t\t\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\tsn.style.visibility = ov;\n\t\t\t\t\t\t\t\t\t\tsn.removeAttribute(\"__gotVis\");\n\t\t\t\t\t\t\t\t\t\tsn = null;\n\t\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\t\tif(!isNaN(width)){\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width - 0.000005);\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t\t\t\t},100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete shape.__svgContainer;\n\t\t\t\t\t\tdelete shape.__svgRoot;\n\t\t\t\t\t\tdelete shape.__svgWidth;\n\t\t\t\t\t})\n\t\t\t\t];\n\t\t}\n\t\treturn anim; // dojo.Animation\n\t};\n\t\n\treturn fxg;\n});\n","define([\"./_base\",\"dojo/_base/lang\"], \n  function(g, lang){\n\tvar m = g.matrix = {};\n\n\t// candidates for dojox.math:\n\tvar _degToRadCache = {};\n\tm._degToRad = function(degree){\n\t\treturn _degToRadCache[degree] || (_degToRadCache[degree] = (Math.PI * degree / 180));\n\t};\n\tm._radToDeg = function(radian){ return radian / Math.PI * 180; };\n\n\tm.Matrix2D = function(arg){\n\t\t// summary:\n\t\t//\t\ta 2D matrix object\n\t\t// description:\n\t\t//\t\tNormalizes a 2D matrix-like object. If arrays is passed,\n\t\t//\t\tall objects of the array are normalized and multiplied sequentially.\n\t\t// arg: Object\n\t\t//\t\ta 2D matrix-like object, a number, or an array of such objects\n\t\tif(arg){\n\t\t\tif(typeof arg == \"number\"){\n\t\t\t\tthis.xx = this.yy = arg;\n\t\t\t}else if(arg instanceof Array){\n\t\t\t\tif(arg.length > 0){\n\t\t\t\t\tvar matrix = m.normalize(arg[0]);\n\t\t\t\t\t// combine matrices\n\t\t\t\t\tfor(var i = 1; i < arg.length; ++i){\n\t\t\t\t\t\tvar l = matrix, r = m.normalize(arg[i]);\n\t\t\t\t\t\tmatrix = new m.Matrix2D();\n\t\t\t\t\t\tmatrix.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\t\t\tmatrix.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\t\t\tmatrix.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\t\t\tmatrix.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\t\t\tmatrix.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\t\t\tmatrix.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t\t\t}\n\t\t\t\t\tlang.mixin(this, matrix);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tlang.mixin(this, arg);\n\t\t\t}\n\t\t}\n\t};\n\n\t// the default (identity) matrix, which is used to fill in missing values\n\tlang.extend(m.Matrix2D, {xx: 1, xy: 0, yx: 0, yy: 1, dx: 0, dy: 0});\n\n\tlang.mixin(m, {\n\t\t// summary:\n\t\t//\t\tclass constants, and methods of dojox/gfx/matrix\n\n\t\t// matrix constants\n\n\t\t// identity: dojox/gfx/matrix.Matrix2D\n\t\t//\t\tan identity matrix constant: identity * (x, y) == (x, y)\n\t\tidentity: new m.Matrix2D(),\n\n\t\t// flipX: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at x = 0 line: flipX * (x, y) == (-x, y)\n\t\tflipX:    new m.Matrix2D({xx: -1}),\n\n\t\t// flipY: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at y = 0 line: flipY * (x, y) == (x, -y)\n\t\tflipY:    new m.Matrix2D({yy: -1}),\n\n\t\t// flipXY: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at the origin of coordinates: flipXY * (x, y) == (-x, -y)\n\t\tflipXY:   new m.Matrix2D({xx: -1, yy: -1}),\n\n\t\t// matrix creators\n\n\t\ttranslate: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a translation matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to translate (move) points by specified offsets.\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x coordinate value, or a point-like object, which specifies offsets for both dimensions\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 1){\n\t\t\t\treturn new m.Matrix2D({dx: a, dy: b}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\t// branch\n\t\t\treturn new m.Matrix2D({dx: a.x, dy: a.y}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tscale: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a scaling matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to scale (magnify) points by specified offsets.\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\ta scaling factor used for the x coordinate, or\n\t\t\t//\t\ta uniform scaling factor used for the both coordinates, or\n\t\t\t//\t\ta point-like object, which specifies scale factors for both dimensions\n\t\t\t// b: Number?\n\t\t\t//\t\ta scaling factor used for the y coordinate\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 1){\n\t\t\t\treturn new m.Matrix2D({xx: a, yy: b}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\tif(typeof a == \"number\"){\n\t\t\t\treturn new m.Matrix2D({xx: a, yy: a}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn new m.Matrix2D({xx: a.x, yy: a.y}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotate: function(angle){\n\t\t\t// summary:\n\t\t\t//\t\tforms a rotating matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to rotate points\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar c = Math.cos(angle);\n\t\t\tvar s = Math.sin(angle);\n\t\t\treturn new m.Matrix2D({xx: c, xy: -s, yx: s, yy: c}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotateg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms a rotating matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to rotate points\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.rotate() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.rotate(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewX: function(angle) {\n\t\t\t// summary:\n\t\t\t//\t\tforms an x skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn new m.Matrix2D({xy: Math.tan(angle)}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms an x skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.skewX() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.skewX(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewY: function(angle){\n\t\t\t// summary:\n\t\t\t//\t\tforms a y skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn new m.Matrix2D({yx: Math.tan(angle)}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms a y skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.skewY() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.skewY(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\treflect: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a reflection matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to reflect points around a vector,\n\t\t\t//\t\twhich goes through the origin.\n\t\t\t// a: dojox/gfx.Point|Number\n\t\t\t//\t\ta point-like object, which specifies a vector of reflection, or an X value\n\t\t\t// b: Number?\n\t\t\t//\t\ta Y value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length == 1){\n\t\t\t\tb = a.y;\n\t\t\t\ta = a.x;\n\t\t\t}\n\t\t\t// make a unit vector\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, xy = 2 * a * b / n2;\n\t\t\treturn new m.Matrix2D({xx: 2 * a2 / n2 - 1, xy: xy, yx: xy, yy: 2 * b2 / n2 - 1}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tproject: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms an orthogonal projection matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to project points orthogonally on a vector,\n\t\t\t//\t\twhich goes through the origin.\n\t\t\t// a: dojox/gfx.Point|Number\n\t\t\t//\t\ta point-like object, which specifies a vector of projection, or\n\t\t\t//\t\tan x coordinate value\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length == 1){\n\t\t\t\tb = a.y;\n\t\t\t\ta = a.x;\n\t\t\t}\n\t\t\t// make a unit vector\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, xy = a * b / n2;\n\t\t\treturn new m.Matrix2D({xx: a2 / n2, xy: xy, yx: xy, yy: b2 / n2}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// ensure matrix 2D conformance\n\t\tnormalize: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tconverts an object to a matrix, if necessary\n\t\t\t// description:\n\t\t\t//\t\tConverts any 2D matrix-like object or an array of\n\t\t\t//\t\tsuch objects to a valid dojox/gfx/matrix.Matrix2D object.\n\t\t\t// matrix: Object\n\t\t\t//\t\tan object, which is converted to a matrix, if necessary\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn (matrix instanceof m.Matrix2D) ? matrix : new m.Matrix2D(matrix); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// common operations\n\n\t\tisIdentity: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\treturns whether the specified matrix is the identity.\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be tested\n\t\t\t// returns: Boolean\n\t\t\treturn matrix.xx == 1 && matrix.xy == 0 && matrix.yx == 0 && matrix.yy == 1 && matrix.dx == 0 && matrix.dy == 0; // Boolean\n\t\t},\n\t\tclone: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a copy of a 2D matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object to be cloned\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar obj = new m.Matrix2D();\n\t\t\tfor(var i in matrix){\n\t\t\t\tif(typeof(matrix[i]) == \"number\" && typeof(obj[i]) == \"number\" && obj[i] != matrix[i]) obj[i] = matrix[i];\n\t\t\t}\n\t\t\treturn obj; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tinvert: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tinverts a 2D matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object to be inverted\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar M = m.normalize(matrix),\n\t\t\t\tD = M.xx * M.yy - M.xy * M.yx;\n\t\t\t\tM = new m.Matrix2D({\n\t\t\t\t\txx: M.yy/D, xy: -M.xy/D,\n\t\t\t\t\tyx: -M.yx/D, yy: M.xx/D,\n\t\t\t\t\tdx: (M.xy * M.dy - M.yy * M.dx) / D,\n\t\t\t\t\tdy: (M.yx * M.dx - M.xx * M.dy) / D\n\t\t\t\t});\n\t\t\treturn M; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\t_multiplyPoint: function(matrix, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix to a point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied\n\t\t\t// x: Number\n\t\t\t//\t\tan x coordinate of a point\n\t\t\t// y: Number\n\t\t\t//\t\ta y coordinate of a point\n\t\t\t// returns: dojox/gfx.Point\n\t\t\treturn {x: matrix.xx * x + matrix.xy * y + matrix.dx, y: matrix.yx * x + matrix.yy * y + matrix.dy}; // dojox/gfx.Point\n\t\t},\n\t\tmultiplyPoint: function(matrix, /* Number||Point */ a, /* Number? */ b){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix to a point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x coordinate of a point, or a point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate of a point\n\t\t\t// returns: dojox/gfx.Point\n\t\t\tvar M = m.normalize(matrix);\n\t\t\tif(typeof a == \"number\" && typeof b == \"number\"){\n\t\t\t\treturn m._multiplyPoint(M, a, b); // dojox/gfx.Point\n\t\t\t}\n\t\t\treturn m._multiplyPoint(M, a.x, a.y); // dojox/gfx.Point\n\t\t},\n\t\tmultiplyRectangle: function(matrix, /*Rectangle*/ rect){\n\t\t\t// summary:\n\t\t\t//\t\tApplies a matrix to a rectangle.\n\t\t\t// description:\n\t\t\t//\t\tThe method applies the transformation on all corners of the\n\t\t\t//\t\trectangle and returns the smallest rectangle enclosing the 4 transformed\n\t\t\t//\t\tpoints.\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied.\n\t\t\t// rect: Rectangle\n\t\t\t//\t\tthe rectangle to transform.\n\t\t\t// returns: dojox/gfx.Rectangle\n\t\t\tvar M = m.normalize(matrix);\n\t\t\trect = rect || {x:0, y:0, width:0, height:0}; \n\t\t\tif(m.isIdentity(M))\n\t\t\t\treturn {x: rect.x, y: rect.y, width: rect.width, height: rect.height}; // dojo/gfx.Rectangle\n\t\t\tvar p0 = m.multiplyPoint(M, rect.x, rect.y),\n\t\t\t\tp1 = m.multiplyPoint(M, rect.x, rect.y + rect.height),\n\t\t\t\tp2 = m.multiplyPoint(M, rect.x + rect.width, rect.y),\n\t\t\t\tp3 = m.multiplyPoint(M, rect.x + rect.width, rect.y + rect.height),\n\t\t\t\tminx = Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tminy = Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tmaxx = Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tmaxy = Math.max(p0.y, p1.y, p2.y, p3.y);\n\t\t\treturn{ // dojo/gfx.Rectangle\n\t\t\t\tx: minx,\n\t\t\t\ty: miny,\n\t\t\t\twidth: maxx - minx,\n\t\t\t\theight: maxy - miny\n\t\t\t};\n\t\t},\n\t\tmultiply: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tcombines matrices by multiplying them sequentially in the given order\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object,\n\t\t\t//\t\tall subsequent arguments are matrix-like objects too\n\t\t\tvar M = m.normalize(matrix);\n\t\t\t// combine matrices\n\t\t\tfor(var i = 1; i < arguments.length; ++i){\n\t\t\t\tvar l = M, r = m.normalize(arguments[i]);\n\t\t\t\tM = new m.Matrix2D();\n\t\t\t\tM.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\tM.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\tM.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\tM.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\tM.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\tM.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t}\n\t\t\treturn M; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// high level operations\n\n\t\t_sandwich: function(matrix, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix at a central point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object, which is applied at a central point\n\t\t\t// x: Number\n\t\t\t//\t\tan x component of the central point\n\t\t\t// y: Number\n\t\t\t//\t\ta y component of the central point\n\t\t\treturn m.multiply(m.translate(x, y), matrix, m.translate(-x, -y)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tscaleAt: function(a, b, c, d){\n\t\t\t// summary:\n\t\t\t//\t\tscales a picture using a specified point as a center of scaling\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.scale().\n\t\t\t// a: Number\n\t\t\t//\t\ta scaling factor used for the x coordinate, or a uniform scaling factor used for both coordinates\n\t\t\t// b: Number?\n\t\t\t//\t\ta scaling factor used for the y coordinate\n\t\t\t// c: Number|Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// d: Number\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tswitch(arguments.length){\n\t\t\t\tcase 4:\n\t\t\t\t\t// a and b are scale factor components, c and d are components of a point\n\t\t\t\t\treturn m._sandwich(m.scale(a, b), c, d); // dojox/gfx/matrix.Matrix2D\n\t\t\t\tcase 3:\n\t\t\t\t\tif(typeof c == \"number\"){\n\t\t\t\t\t\treturn m._sandwich(m.scale(a), b, c); // dojox/gfx/matrix.Matrix2D\n\t\t\t\t\t}\n\t\t\t\t\treturn m._sandwich(m.scale(a, b), c.x, c.y); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.scale(a), b.x, b.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotateAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.rotate().\n\t\t\t// angle: Number\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.rotate(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.rotate(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotategAt: function(degree, a, b){\n\t\t\t// summary:\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.rotateg().\n\t\t\t// degree: Number\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.rotateg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.rotateg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewX().\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewX(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewX(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXgAt: function(degree, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewXg().\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewXg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewXg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewY().\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewY(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewY(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYgAt: function(/* Number */ degree, /* Number||Point */ a, /* Number? */ b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewYg().\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewYg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewYg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t}\n\n\t\t//TODO: rect-to-rect mapping, scale-to-fit (isotropic and anisotropic versions)\n\n\t});\n\t// propagate Matrix2D up\n\tg.Matrix2D = m.Matrix2D;\n\n\treturn m;\n});\n\n\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/_base/connect\"], \n\tfunction(lang, arr, declare, hub){\n\n\treturn declare(\"dojox.charting.plot2d._PlotEvents\", null, {\n\t\tconstructor: function(){\n\t\t\tthis._shapeEvents = [];\n\t\t\tthis._eventSeries = {};\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDestroy any internal elements and event handlers.\n\t\t\tthis.resetEvents();\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tplotEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for use by specific plots.\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t},\n\t\traiseEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tRaises events in predefined order\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t\tthis.plotEvent(o);\n\t\t\tvar t = lang.delegate(o);\n\t\t\tt.originalEvent = o.type;\n\t\t\tt.originalPlot  = o.plot;\n\t\t\tt.type = \"onindirect\";\n\t\t\tarr.forEach(this.chart.stack, function(plot){\n\t\t\t\tif(plot !== this && plot.plotEvent){\n\t\t\t\t\tt.plot = plot;\n\t\t\t\t\tplot.plotEvent(t);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\tconnect: function(object, method){\n\t\t\t// summary:\n\t\t\t//\t\tHelper function to connect any object's method to our plotEvent.\n\t\t\t// object: Object\n\t\t\t//\t\tThe object to connect to.\n\t\t\t// method: String|Function\n\t\t\t//\t\tThe method to fire when our plotEvent is fired.\n\t\t\t// returns: Array\n\t\t\t//\t\tThe handle as returned from dojo.connect (see dojo.connect).\n\t\t\tthis.dirty = true;\n\t\t\treturn hub.connect(this, \"plotEvent\", object, method);\t//\tArray\n\t\t},\n\t\tevents: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFind out if any event handlers have been connected to our plotEvent.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tA flag indicating that there are handlers attached.\n\t\t\treturn !!this.plotEvent.after;\n\t\t},\n\t\tresetEvents: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReset all events attached to our plotEvent (i.e. disconnect).\n\t\t\tif(this._shapeEvents.length){\n\t\t\t\tarr.forEach(this._shapeEvents, function(item){\n\t\t\t\t\titem.shape.disconnect(item.handle);\n\t\t\t\t});\n\t\t\t\tthis._shapeEvents = [];\n\t\t\t}\n\t\t\tthis.raiseEvent({type: \"onplotreset\", plot: this});\n\t\t},\n\t\t_connectSingleEvent: function(o, eventName){\n\t\t\tthis._shapeEvents.push({\n\t\t\t\tshape:  o.eventMask,\n\t\t\t\thandle: o.eventMask.connect(eventName, this, function(e){\n\t\t\t\t\to.type  = eventName;\n\t\t\t\t\to.event = e;\n\t\t\t\t\tthis.raiseEvent(o);\n\t\t\t\t\to.event = null;\n\t\t\t\t})\n\t\t\t});\n\t\t},\n\t\t_connectEvents: function(o){\n\t\t\tif(o){\n\t\t\t\to.chart = this.chart;\n\t\t\t\to.plot  = this;\n\t\t\t\to.hAxis = this.hAxis || null;\n\t\t\t\to.vAxis = this.vAxis || null;\n\t\t\t\to.eventMask = o.eventMask || o.shape;\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseover\");\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseout\");\n\t\t\t\tthis._connectSingleEvent(o, \"onclick\");\n\t\t\t}\n\t\t},\n\t\t_reconnectEvents: function(seriesName){\n\t\t\tvar a = this._eventSeries[seriesName];\n\t\t\tif(a){\n\t\t\t\tarr.forEach(a, this._connectEvents, this);\n\t\t\t}\n\t\t},\n\t\tfireEvent: function(seriesName, eventName, index, eventObject){\n\t\t\t// summary:\n\t\t\t//\t\tEmulates firing an event for a given data value (specified by\n\t\t\t//\t\tan index) of a given series.\n\t\t\t// seriesName: String\n\t\t\t//\t\tSeries name.\n\t\t\t// eventName: String\n\t\t\t//\t\tEvent name to emulate.\n\t\t\t// index: Number\n\t\t\t//\t\tValid data value index used to raise an event.\n\t\t\t// eventObject: Object?\n\t\t\t//\t\tOptional event object. Especially useful for synthetic events.\n\t\t\t//\t\tDefault: null.\n\t\t\tvar s = this._eventSeries[seriesName];\n\t\t\tif(s && s.length && index < s.length){\n\t\t\t\tvar o = s[index];\n\t\t\t\to.type  = eventName;\n\t\t\t\to.event = eventObject || null;\n\t\t\t\tthis.raiseEvent(o);\n\t\t\t\to.event = null;\n\t\t\t}\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/kernel\" ,\"./lambda\"],\n\tfunction(lang, kernel, df){\n// This module adds high-level functions and related constructs:\n//\t- reversed versions of array-processing functions similar to standard JS functions\n\n// Notes:\n//\t- this module provides reversed versions of standard array-processing functions:\n//\t\tforEachRev, mapRev, filterRev\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n\n\tlang.mixin(df, {\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\n\t\tfilterRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with all elements that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = [], v, i = a.length - 1;\n\t\t\tfor(; i >= 0; --i){\n\t\t\t\tv = a[i];\n\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tforEachRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\texecutes a provided function once per array element.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; f.call(o, a[i], i, a), --i);\n\t\t},\n\t\tmapRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with the results of calling\n\t\t\t//\t\ta provided function on every element in this array.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar n = a.length, t = new Array(n), i = n - 1, j = 0;\n\t\t\tfor(; i >= 0; t[j++] = f.call(o, a[i], i, a), --i);\n\t\t\treturn t;\t// Array\n\t\t},\n\t\teveryRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether all elements in the array pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\n\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\t// Boolean\n\t\t},\n\t\tsomeRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether some element in the array passes the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\n\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\t// Boolean\n\t\t}\n\t});\n\t\n\treturn df;\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/connect\", \"dojo/has\",\n\t\t\"./Base\", \"../scaler/primitive\", \"dojox/gfx\", \"dojox/gfx/fx\", \"dojox/lang/utils\"], \n\tfunction(lang, declare, hub, has, Base, primitive, gfx, fx, du){\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__CartesianCtorArgs\", dojox.charting.plot2d.__PlotCtorArgs, {\n\t\t// hAxis: String?\n\t\t//\t\tThe horizontal axis name.\n\t\thAxis: \"x\",\n\n\t\t// vAxis: String?\n\t\t//\t\tThe vertical axis name\n\t\tvAxis: \"y\",\n\n\t\t// labels: Boolean?\n\t\t//\t\tFor plots that support labels, whether or not to draw labels for each data item.  Default is false.\n\t\tlabels:\t\t\tfalse,\n\n\t\t// fixed: Boolean?\n        //\t\tWhether a fixed precision must be applied to data values for display. Default is true.\n\t\tfixed:\t\t\ttrue,\n\n\t\t// precision: Number?\n        //\t\tThe precision at which to round data values for display. Default is 0.\n\t\tprecision:\t\t1,\n\n\t\t// labelOffset: Number?\n\t\t//\t\tThe amount in pixels by which to offset labels when using \"outside\" labelStyle.  Default is 10.\n\t\tlabelOffset:\t10,\n\n\t\t// labelStyle: String?\n\t\t//\t\tOptions as to where to draw labels.  This must be either \"inside\" or \"outside\". By default\n\t\t//      the labels are drawn \"inside\" the shape representing the data point (a column rectangle for a Columns plot\n\t\t//      or a marker for a Line plot for instance). When \"outside\" is used the labels are drawn above the data point shape.\n\t\tlabelStyle:\t\t\"inside\",\n\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\n\t\thtmlLabels:\t\ttrue,\n\n\t\t// omitLabels: Boolean?\n\t\t//\t\tWhether labels that do not fit in an item render are omitted or not.\tThis applies only when labelStyle\n\t\t//\t\tis \"inside\".\tDefault is false.\n\t\tomitLabels: true,\n\n\t\t// labelFunc: Function?\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\n\t\t//\t\tthe default text when available.\n\t\t//\t|\t\tfunction labelFunc(value, fixed, precision) {}\n\t\t//\t\t`value` is the data value to display\n\t\t//\t\t`fixed` is true if fixed precision must be applied.\n\t\t//\t\t`precision` is the requested precision to be applied.\n\t\tlabelFunc: null\n\t});\n\t=====*/\n\n\tvar alwaysFalse = function(){ return false; }\n\n\treturn declare(\"dojox.charting.plot2d.CartesianBase\", Base, {\n\t\tbaseParams: {\n\t\t\thAxis: \t\t\t\"x\",\n\t\t\tvAxis: \t\t\t\"y\",\n\t\t\tlabels:\t\t\tfalse,\n\t\t\tlabelOffset:    10,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelStyle:\t\t\"inside\",\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tomitLabels:\t\ttrue,\n\t\t\tlabelFunc:\t\tnull\n        },\n\n\t\t// summary:\n\t\t//\t\tBase class for cartesian plot types.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a cartesian base plot for cartesian charts.\n\t\t\t// chart: dojox/chart/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__CartesianCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define the plot.\n\t\t\tthis.axes = [\"hAxis\", \"vAxis\"];\n\t\t\tthis.zoom = null;\n\t\t\tthis.zoomQueue = [];\t// zooming action task queue\n\t\t\tthis.lastWindow = {vscale: 1, hscale: 1, xoffset: 0, yoffset: 0};\n\t\t\tthis.hAxis = (kwArgs && kwArgs.hAxis) || \"x\";\n\t\t\tthis.vAxis = (kwArgs && kwArgs.vAxis) || \"y\";\n\t\t\tthis.series = [];\n\t\t\tthis.opt = lang.clone(this.baseParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis._hAxis = null;\n\t\t\tthis._vAxis = null;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tcleanGroup: function(creator, noClip){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!noClip && this.chart._nativeClip){\n\t\t\t\tvar offsets = this.chart.offsets, dim = this.chart.dim;\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\t\t\t\tthis.group.setClip({ x: offsets.l, y: offsets.t, width: w, height: h });\n\t\t\t\tif(!this._clippedGroup){\n\t\t\t\t\tthis._clippedGroup = this.group.createGroup();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpurgeGroup: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis._clippedGroup = null;\n\t\t},\n\t\tgetGroup: function(){\n\t\t\treturn this._clippedGroup || this.group;\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tSet an axis for this plot.\n\t\t\t// axis: dojox/charting/axis2d/Base\n\t\t\t//\t\tThe axis to set.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(axis){\n\t\t\t\tthis[axis.vertical ? \"_vAxis\" : \"_hAxis\"] = axis;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\ttoPage: function(coord){\n\t\t\t// summary:\n\t\t\t//\t\tCompute page coordinates from plot axis data coordinates.\n\t\t\t// coord: Object?\n\t\t\t//\t\tThe coordinates in plot axis data coordinate space. For cartesian charts that is of the following form:\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\n\t\t\t//\t\tIf not provided return the transform method instead of the result of the transformation.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting page pixel coordinates. That is of the following form:\n\t\t\t//\t\t`{ x: 50, y: 200 }`\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\n\t\t\t\tth = sh.scaler.getTransformerFromModel(sh),\n\t\t\t\ttv = sv.scaler.getTransformerFromModel(sv),\n\t\t\t\tc = this.chart.getCoords(),\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\n\t\t\tvar t = function(coord){\n\t\t\t\tvar r = {};\n\t\t\t\tr.x = th(coord[ah.name]) + c.x + o.l;\n\t\t\t\tr.y = c.y + dim.height - o.b - tv(coord[av.name]);\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\t// if no coord return the function so that we can capture the current transforms\n\t\t\t// and reuse them later on\n\t\t\treturn coord?t(coord):t; // Object\n\t\t},\n\t\ttoData: function(coord){\n\t\t\t// summary:\n\t\t\t//\t\tCompute plot axis data coordinates from page coordinates.\n\t\t\t// coord: Object\n\t\t\t//\t\tThe pixel coordinate in page coordinate space. That is of the following form:\n\t\t\t//\t\t`{ x: 50, y: 200 }`\n\t\t\t//\t\tIf not provided return the tranform method instead of the result of the transformation.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting plot axis data coordinates. For cartesian charts that is of the following form:\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\n\t\t\t\tth = sh.scaler.getTransformerFromPlot(sh),\n\t\t\t\ttv = sv.scaler.getTransformerFromPlot(sv),\n\t\t\t\tc = this.chart.getCoords(),\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\n\t\t\tvar t = function(coord){\n\t\t\t\tvar r = {};\n\t\t\t\tr[ah.name] = th(coord.x - c.x - o.l);\n\t\t\t\tr[av.name] = tv(c.y + dim.height - coord.y  - o.b);\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\t// if no coord return the function so that we can capture the current transforms\n\t\t\t// and reuse them later on\n\t\t\treturn coord?t(coord):t; // Object\n\t\t},\n\t\tisDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns whether or not this plot needs to be rendered.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tThe state of the plot.\n\t\t\treturn this.dirty || this._hAxis && this._hAxis.dirty || this._vAxis && this._vAxis.dirty;\t//\tBoolean\n\t\t},\n\t\tcreateLabel: function(group, value, bbox, theme){\n\t\t\tif(this.opt.labels){\n\t\t\t\tvar x, y, label = this.opt.labelFunc?this.opt.labelFunc.apply(this, [value, this.opt.fixed, this.opt.precision]):\n\t\t\t\t\tthis._getLabel(isNaN(value.y)?value:value.y);\n\t\t\t\tif(this.opt.labelStyle == \"inside\"){\n\t\t\t\t\tvar lbox = gfx._base._getTextBox(label, { font: theme.series.font } );\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\n\t\t\t\t\ty = bbox.y + bbox.height / 2 + lbox.h / 4;\n\t\t\t\t\tif(lbox.w > bbox.width || lbox.h > bbox.height){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\n\t\t\t\t\ty = bbox.y - this.opt.labelOffset;\n\t\t\t\t}\n\t\t\t\tthis.renderLabel(group, x, y, label, theme, this.opt.labelStyle == \"inside\");\n\t\t\t}\n\t\t},\n\t\tperformZoom: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tCreate/alter any zooming windows on this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\n\t\t\t// get current zooming various\n\t\t\tvar vs = this._vAxis.scale || 1,\n\t\t\t\ths = this._hAxis.scale || 1,\n\t\t\t\tvOffset = dim.height - offsets.b,\n\t\t\t\thBounds = this._hScaler.bounds,\n\t\t\t\txOffset = (hBounds.from - hBounds.lower) * hBounds.scale,\n\t\t\t\tvBounds = this._vScaler.bounds,\n\t\t\t\tyOffset = (vBounds.from - vBounds.lower) * vBounds.scale,\n\t\t\t\t// get incremental zooming various\n\t\t\t\trVScale = vs / this.lastWindow.vscale,\n\t\t\t\trHScale = hs / this.lastWindow.hscale,\n\t\t\t\trXOffset = (this.lastWindow.xoffset - xOffset)/\n\t\t\t\t\t((this.lastWindow.hscale == 1)? hs : this.lastWindow.hscale),\n\t\t\t\trYOffset = (yOffset - this.lastWindow.yoffset)/\n\t\t\t\t\t((this.lastWindow.vscale == 1)? vs : this.lastWindow.vscale),\n\n\t\t\t\tshape = this.getGroup(),\n\t\t\t\tanim = fx.animateTransform(lang.delegate({\n\t\t\t\t\tshape: shape,\n\t\t\t\t\tduration: 1200,\n\t\t\t\t\ttransform:[\n\t\t\t\t\t\t{name:\"translate\", start:[0, 0], end: [offsets.l * (1 - rHScale), vOffset * (1 - rVScale)]},\n\t\t\t\t\t\t{name:\"scale\", start:[1, 1], end: [rHScale, rVScale]},\n\t\t\t\t\t\t{name:\"original\"},\n\t\t\t\t\t\t{name:\"translate\", start: [0, 0], end: [rXOffset, rYOffset]}\n\t\t\t\t\t]}, this.zoom));\n\n\t\t\tlang.mixin(this.lastWindow, {vscale: vs, hscale: hs, xoffset: xOffset, yoffset: yOffset});\n\t\t\t//add anim to zooming action queue,\n\t\t\t//in order to avoid several zooming action happened at the same time\n\t\t\tthis.zoomQueue.push(anim);\n\t\t\t//perform each anim one by one in zoomQueue\n\t\t\thub.connect(anim, \"onEnd\", this, function(){\n\t\t\t\tthis.zoom = null;\n\t\t\t\tthis.zoomQueue.shift();\n\t\t\t\tif(this.zoomQueue.length > 0){\n\t\t\t\t\tthis.zoomQueue[0].play();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(this.zoomQueue.length == 1){\n\t\t\t\tthis.zoomQueue[0].play();\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tinitializeScalers: function(dim, stats){\n\t\t\t// summary:\n\t\t\t//\t\tInitializes scalers using attached axes.\n\t\t\t// dim: Object\n\t\t\t//\t\tSize of a plot area in pixels as {width, height}.\n\t\t\t// stats: Object\n\t\t\t//\t\tMin/max of data in both directions as {hmin, hmax, vmin, vmax}.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this._hAxis){\n\t\t\t\tif(!this._hAxis.initialized()){\n\t\t\t\t\tthis._hAxis.calculate(stats.hmin, stats.hmax, dim.width);\n\t\t\t\t}\n\t\t\t\tthis._hScaler = this._hAxis.getScaler();\n\t\t\t}else{\n\t\t\t\tthis._hScaler = primitive.buildScaler(stats.hmin, stats.hmax, dim.width);\n\t\t\t}\n\t\t\tif(this._vAxis){\n\t\t\t\tif(!this._vAxis.initialized()){\n\t\t\t\t\tthis._vAxis.calculate(stats.vmin, stats.vmax, dim.height);\n\t\t\t\t}\n\t\t\t\tthis._vScaler = this._vAxis.getScaler();\n\t\t\t}else{\n\t\t\t\tthis._vScaler = primitive.buildScaler(stats.vmin, stats.vmax, dim.height);\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn h(1) || v(value);\n\t\t\t}\n\t\t\treturn h(isNaN(value.x) ? 1 : value.x) || value.y === null || v(value.y);\n\t\t}\t\t\n\t});\n});\n","define([\"dojo/_base/kernel\"], function(dojo) {\n\t// module:\n\t//\t\tdojox/main\n\n\t/*=====\n\treturn {\n\t\t// summary:\n\t\t//\t\tThe dojox package main module; dojox package is somewhat unusual in that the main module currently just provides an empty object.\n\t\t//\t\tApps should require modules from the dojox packages directly, rather than loading this module.\n\t};\n\t=====*/\n\n\treturn dojo.dojox;\n});","define([\"./_base\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/kernel\", \"dojo/_base/sniff\",\n\t\"dojo/on\", \"dojo/_base/array\", \"dojo/dom-construct\", \"dojo/_base/Color\", \"./matrix\" ],\n\tfunction(g, lang, declare, kernel, has, on, arr, domConstruct, Color, matrixLib){\n\n\tfunction removeItemAt(a, index) {\n\t\tvar len = (a.length - 1);\n\t\twhile (index < len) {\n\t\t\ta[index] = a[++index];\n\t\t}\n\t\ta.length = len;\n\t}\n\n\tvar shape = g.shape = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Shape API.\n\t\t//\t\tDifferent graphics renderer implementation modules (svg, canvas, vml, silverlight, etc.) extend this\n\t\t//\t\tbasic api to provide renderer-specific implementations for each shape.\n\t};\n\n\tshape.Shape = declare(\"dojox.gfx.shape.Shape\", null, {\n\t\t// summary:\n\t\t//\t\ta Shape object, which knows how to apply\n\t\t//\t\tgraphical attributes and transformations\n\t\n\t\tconstructor: function(){\n\t\t\t// rawNode: Node\n\t\t\t//\t\tunderlying graphics-renderer-specific implementation object (if applicable)\n\t\t\tthis.rawNode = null;\n\n\t\t\t// shape: Object\n\t\t\t//\t\tan abstract shape object\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\tthis.shape = null;\n\t\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta transformation matrix\n\t\t\tthis.matrix = null;\n\t\n\t\t\t// fillStyle: dojox/gfx.Fill\n\t\t\t//\t\ta fill object\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/Color)\n\t\t\tthis.fillStyle = null;\n\t\n\t\t\t// strokeStyle: dojox/gfx.Stroke\n\t\t\t//\t\ta stroke object\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\tthis.strokeStyle = null;\n\t\n\t\t\t// bbox: dojox/gfx.Rectangle\n\t\t\t//\t\ta bounding box of this shape\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\n\t\t\tthis.bbox = null;\n\t\n\t\t\t// virtual group structure\n\t\n\t\t\t// parent: Object\n\t\t\t//\t\ta parent or null\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\tthis.parent = null;\n\t\n\t\t\t// parentMatrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta transformation matrix inherited from the parent\n\t\t\tthis.parentMatrix = null;\n\n\t\t\tif(has(\"gfxRegistry\")){\n\t\t\t\tvar uid = shape.register(this);\n\t\t\t\tthis.getUID = function(){\n\t\t\t\t\treturn uid;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\n\t\t\t//\t\tthe instance is considered destroyed and should not be used anymore.\n\t\t\tif(has(\"gfxRegistry\")){\n\t\t\t\tshape.dispose(this);\n\t\t\t}\n\t\t\tif(this.rawNode && \"__gfxObject__\" in this.rawNode){\n\t\t\t\tthis.rawNode.__gfxObject__ = null;\n\t\t\t}\n\t\t\tthis.rawNode = null;\n\t\t},\n\t\n\t\t// trivial getters\n\t\n\t\tgetNode: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDifferent graphics rendering subsystems implement shapes in different ways.  This\n\t\t\t//\t\tmethod provides access to the underlying graphics subsystem object.  Clients calling this\n\t\t\t//\t\tmethod and using the return value must be careful not to try sharing or using the underlying node\n\t\t\t//\t\tin a general way across renderer implementation.\n\t\t\t//\t\tReturns the underlying graphics Node, or null if no underlying graphics node is used by this shape.\n\t\t\treturn this.rawNode; // Node\n\t\t},\n\t\tgetShape: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current Shape object or null\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\treturn this.shape; // Object\n\t\t},\n\t\tgetTransform: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current transformation matrix applied to this Shape or null\n\t\t\treturn this.matrix;\t// dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tgetFill: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current fill object or null\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/Color)\n\t\t\treturn this.fillStyle;\t// Object\n\t\t},\n\t\tgetStroke: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current stroke object or null\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\treturn this.strokeStyle;\t// Object\n\t\t},\n\t\tgetParent: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the parent Shape, Group or null if this Shape is unparented.\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\treturn this.parent;\t// Object\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape or null if a BoundingBox cannot be\n\t\t\t//\t\tcalculated for the shape on the current renderer or for shapes with no geometric area (points).\n\t\t\t//\t\tA bounding box is a rectangular geometric region\n\t\t\t//\t\tdefining the X and Y extent of the shape.\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\n\t\t\t//\t\tNote that this method returns a direct reference to the attribute of this instance. Therefore you should\n\t\t\t//\t\tnot modify its value directly but clone it instead.\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t},\n\t\tgetTransformedBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of four points or null\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\n\t\t\tvar b = this.getBoundingBox();\n\t\t\tif(!b){\n\t\t\t\treturn null;\t// null\n\t\t\t}\n\t\t\tvar m = this._getRealMatrix(),\n\t\t\t\tgm = matrixLib;\n\t\t\treturn [\t// Array\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y),\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y),\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y + b.height),\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y + b.height)\n\t\t\t\t];\n\t\t},\n\t\tgetEventSource: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a Node, which is used as\n\t\t\t//\t\ta source of events for this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn this.rawNode;\t// Node\n\t\t},\n\t\n\t\t// empty settings\n\t\t\n\t\tsetClip: function(clip){\n\t\t\t// summary:\n\t\t\t//\t\tsets the clipping area of this shape.\n\t\t\t// description:\n\t\t\t//\t\tThe clipping area defines the shape area that will be effectively visible. Everything that\n\t\t\t//\t\twould be drawn outside of the clipping area will not be rendered.\n\t\t\t//\t\tThe possible clipping area types are rectangle, ellipse, polyline and path, but all are not\n\t\t\t//\t\tsupported by all the renderers. vml only supports rectangle clipping, while the gfx silverlight renderer does not\n\t\t\t//\t\tsupport path clipping.\n\t\t\t//\t\tThe clip parameter defines the clipping area geometry, and should be an object with the following properties:\n\t\t\t//\n\t\t\t//\t\t- {x:Number, y:Number, width:Number, height:Number} for rectangular clip\n\t\t\t//\t\t- {cx:Number, cy:Number, rx:Number, ry:Number} for ellipse clip\n\t\t\t//\t\t- {points:Array} for polyline clip\n\t\t\t//\t\t- {d:String} for a path clip.\n\t\t\t//\n\t\t\t//\t\tThe clip geometry coordinates are expressed in the coordinate system used to draw the shape. In other\n\t\t\t//\t\twords, the clipping area is defined in the shape parent coordinate system and the shape transform is automatically applied.\n\t\t\t// example:\n\t\t\t//\t\tThe following example shows how to clip a gfx image with all the possible clip geometry: a rectangle,\n\t\t\t//\t\tan ellipse, a circle (using the ellipse geometry), a polyline and a path:\n\t\t\t//\n\t\t\t//\t|\tsurface.createImage({src:img, width:200,height:200}).setClip({x:10,y:10,width:50,height:50});\n\t\t\t//\t|\tsurface.createImage({src:img, x:100,y:50,width:200,height:200}).setClip({cx:200,cy:100,rx:20,ry:30});\n\t\t\t//\t|\tsurface.createImage({src:img, x:0,y:350,width:200,height:200}).setClip({cx:100,cy:425,rx:60,ry:60});\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:0,width:200,height:200}).setClip({points:[350,0,450,50,380,130,300,110]});\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:350,width:200,height:200}).setClip({d:\"M 350,350 C314,414 317,557 373,450.0000 z\"});\n\n\t\t\t// clip: Object\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.clip = clip;\n\t\t},\n\t\t\n\t\tgetClip: function(){\n\t\t\treturn this.clip;\n\t\t},\n\t\n\t\tsetShape: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tsets a shape object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// shape: Object\n\t\t\t//\t\ta shape object\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.shape = g.makeParameters(this.shape, shape);\n\t\t\tthis.bbox = null;\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetFill: function(fill){\n\t\t\t// summary:\n\t\t\t//\t\tsets a fill object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// fill: Object\n\t\t\t//\t\ta fill object\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/_base/Color)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tif(!fill){\n\t\t\t\t// don't fill\n\t\t\t\tthis.fillStyle = null;\n\t\t\t\treturn this;\t// self\n\t\t\t}\n\t\t\tvar f = null;\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\n\t\t\t\t// gradient or pattern\n\t\t\t\tswitch(fill.type){\n\t\t\t\t\tcase \"linear\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultLinearGradient, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"radial\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultRadialGradient, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pattern\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultPattern, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// color object\n\t\t\t\tf = g.normalizeColor(fill);\n\t\t\t}\n\t\t\tthis.fillStyle = f;\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetStroke: function(stroke){\n\t\t\t// summary:\n\t\t\t//\t\tsets a stroke object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// stroke: Object\n\t\t\t//\t\ta stroke object\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tif(!stroke){\n\t\t\t\t// don't stroke\n\t\t\t\tthis.strokeStyle = null;\n\t\t\t\treturn this;\t// self\n\t\t\t}\n\t\t\t// normalize the stroke\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof Color){\n\t\t\t\tstroke = {color: stroke};\n\t\t\t}\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\n\t\t\ts.color = g.normalizeColor(s.color);\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tsets a transformation matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.matrix = matrixLib.clone(matrix ? matrixLib.normalize(matrix) : matrixLib.identity);\n\t\t\treturn this._applyTransform();\t// self\n\t\t},\n\t\n\t\t_applyTransform: function(){\n\t\t\t// summary:\n\t\t\t//\t\tphysically sets a matrix\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn this;\t// self\n\t\t},\n\t\n\t\t// z-index\n\t\n\t\tmoveToFront: function(){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes\n\t\t\tvar p = this.getParent();\n\t\t\tif(p){\n\t\t\t\tp._moveChildToFront(this);\n\t\t\t\tthis._moveToFront();\t// execute renderer-specific action\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\tmoveToBack: function(){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes\n\t\t\tvar p = this.getParent();\n\t\t\tif(p){\n\t\t\t\tp._moveChildToBack(this);\n\t\t\t\tthis._moveToBack();\t// execute renderer-specific action\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_moveToFront: function(){\n\t\t\t// summary:\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t},\n\t\t_moveToBack: function(){\n\t\t\t// summary:\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t},\n\t\n\t\t// apply left & right transformation\n\t\n\t\tapplyRightTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tmultiplies the existing matrix with an argument on right side\n\t\t\t//\t\t(this.matrix * matrix)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\n\t\t},\n\t\tapplyLeftTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tmultiplies the existing matrix with an argument on left side\n\t\t\t//\t\t(matrix * this.matrix)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([matrix, this.matrix]) : this;\t// self\n\t\t},\n\t\tapplyTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\ta shortcut for dojox/gfx/shape.Shape.applyRightTransform\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\n\t\t},\n\t\n\t\t// virtual group methods\n\t\n\t\tremoveShape: function(silently){\n\t\t\t// summary:\n\t\t\t//\t\tremoves the shape from its parent's list of shapes\n\t\t\t// silently: Boolean\n\t\t\t//\t\tif true, do not redraw a picture yet\n\t\t\tif(this.parent){\n\t\t\t\tthis.parent.remove(this, silently);\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_setParent: function(parent, matrix){\n\t\t\t// summary:\n\t\t\t//\t\tsets a parent\n\t\t\t// parent: Object\n\t\t\t//\t\ta parent or null\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix or a matrix-like object\n\t\t\tthis.parent = parent;\n\t\t\treturn this._updateParentMatrix(matrix);\t// self\n\t\t},\n\t\t_updateParentMatrix: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the parent matrix with new matrix\n\t\t\t// matrix: dojox/gfx/Matrix2D\n\t\t\t//\t\ta 2D matrix or a matrix-like object\n\t\t\tthis.parentMatrix = matrix ? matrixLib.clone(matrix) : null;\n\t\t\treturn this._applyTransform();\t// self\n\t\t},\n\t\t_getRealMatrix: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the cumulative ('real') transformation matrix\n\t\t\t//\t\tby combining the shape's matrix with its parent's matrix\n\t\t\tvar m = this.matrix;\n\t\t\tvar p = this.parent;\n\t\t\twhile(p){\n\t\t\t\tif(p.matrix){\n\t\t\t\t\tm = matrixLib.multiply(p.matrix, m);\n\t\t\t\t}\n\t\t\t\tp = p.parent;\n\t\t\t}\n\t\t\treturn m;\t// dojox/gfx/matrix.Matrix2D\n\t\t}\n\t});\n\t\n\tshape._eventsProcessing = {\n\t\ton: function(type, listener){\n\t\t\t//\tsummary:\n\t\t\t//\t\tConnects an event to this shape.\n\n\t\t\treturn on(this.getEventSource(), type, shape.fixCallback(this, g.fixTarget, listener));\n\t\t},\n\n\t\tconnect: function(name, object, method){\n\t\t\t// summary:\n\t\t\t//\t\tconnects a handler to an event on this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\t// redirect to fixCallback to normalize events and add the gfxTarget to the event. The latter\n\t\t\t// is done by dojox/gfx.fixTarget which is defined by each renderer\n\t\t\tif(name.substring(0, 2) == \"on\"){\n\t\t\t\tname = name.substring(2);\n\t\t\t}\n\t\t\treturn this.on(name, method ? lang.hitch(object, method) : object);\n\t\t},\n\n\t\tdisconnect: function(token){\n\t\t\t// summary:\n\t\t\t//\t\tconnects a handler by token from an event on this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\n\t\t\treturn token.remove();\n\t\t}\n\t};\n\t\n\tshape.fixCallback = function(gfxElement, fixFunction, scope, method){\n\t\t// summary:\n\t\t//\t\tWraps the callback to allow for tests and event normalization\n\t\t//\t\tbefore it gets invoked. This is where 'fixTarget' is invoked.\n\t\t// tags:\n\t\t//      private\n\t\t// gfxElement: Object\n\t\t//\t\tThe GFX object that triggers the action (ex.:\n\t\t//\t\tdojox/gfx.Surface and dojox/gfx/shape.Shape). A new event property\n\t\t//\t\t'gfxTarget' is added to the event to reference this object.\n\t\t//\t\tfor easy manipulation of GFX objects by the event handlers.\n\t\t// fixFunction: Function\n\t\t//\t\tThe function that implements the logic to set the 'gfxTarget'\n\t\t//\t\tproperty to the event. It should be 'dojox/gfx.fixTarget' for\n\t\t//\t\tmost of the cases\n\t\t// scope: Object\n\t\t//\t\tOptional. The scope to be used when invoking 'method'. If\n\t\t//\t\tomitted, a global scope is used.\n\t\t// method: Function|String\n\t\t//\t\tThe original callback to be invoked.\n\t\tif(!method){\n\t\t\tmethod = scope;\n\t\t\tscope = null;\n\t\t}\n\t\tif(lang.isString(method)){\n\t\t\tscope = scope || kernel.global;\n\t\t\tif(!scope[method]){ throw(['dojox.gfx.shape.fixCallback: scope[\"', method, '\"] is null (scope=\"', scope, '\")'].join('')); }\n\t\t\treturn function(e){  \n\t\t\t\treturn fixFunction(e,gfxElement) ? scope[method].apply(scope, arguments || []) : undefined; }; // Function\n\t\t}\n\t\treturn !scope \n\t\t\t? function(e){ \n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments) : undefined; } \n\t\t\t: function(e){ \n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments || []) : undefined; }; // Function\n\t};\n\tlang.extend(shape.Shape, shape._eventsProcessing);\n\t\n\tshape.Container = {\n\t\t// summary:\n\t\t//\t\ta container of shapes, which can be used\n\t\t//\t\tas a foundation for renderer-specific groups, or as a way\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t\n\t\t_init: function() {\n\t\t\t// children: Array\n\t\t\t//\t\ta list of children\n\t\t\tthis.children = [];\n\t\t\tthis._batch = 0;\n\t\t},\n\t\n\t\t// group management\n\t\n\t\topenBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\n\t\t\t//\t\tthe batch instead of appending to the container directly.\n\t\t\t// description:\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\n\t\t\treturn this;\n\t\t},\n\t\tcloseBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tsubmits the current batch, append all pending child shapes to DOM\n\t\t\t// description:\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\n\t\t\treturn this;\n\t\t},\n\t\tadd: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tadds a shape to the list\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tthe shape to add to the list\n\t\t\tvar oldParent = shape.getParent();\n\t\t\tif(oldParent){\n\t\t\t\toldParent.remove(shape, true);\n\t\t\t}\n\t\t\tthis.children.push(shape);\n\t\t\treturn shape._setParent(this, this._getRealMatrix());\t// self\n\t\t},\n\t\tremove: function(shape, silently){\n\t\t\t// summary:\n\t\t\t//\t\tremoves a shape from the list\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tthe shape to remove\n\t\t\t// silently: Boolean\n\t\t\t//\t\tif true, do not redraw a picture yet\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tif(silently){\n\t\t\t\t\t\t// skip for now\n\t\t\t\t\t}else{\n\t\t\t\t\t\tshape.parent = null;\n\t\t\t\t\t\tshape.parentMatrix = null;\n\t\t\t\t\t}\n\t\t\t\t\tremoveItemAt(this.children, i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\tclear: function(/*Boolean?*/ destroy){\n\t\t\t// summary:\n\t\t\t//\t\tremoves all shapes from a group/surface.\n\t\t\t// destroy: Boolean\n\t\t\t//\t\tIndicates whether the children should be destroyed. Optional.\n\t\t\tvar shape;\n\t\t\tfor(var i = 0; i < this.children.length;++i){\n\t\t\t\tshape = this.children[i];\n\t\t\t\tshape.parent = null;\n\t\t\t\tshape.parentMatrix = null;\n\t\t\t\tif(destroy){\n\t\t\t\t\tshape.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.children = [];\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape.\n\t\t\tif(this.children){\n\t\t\t\t// if this is a composite shape, then sum up all the children\n\t\t\t\tvar result = null;\n\t\t\t\tarr.forEach(this.children, function(shape){\n\t\t\t\t\tvar bb = shape.getBoundingBox();\n\t\t\t\t\tif(bb){\n\t\t\t\t\t\tvar ct = shape.getTransform();\n\t\t\t\t\t\tif(ct){\n\t\t\t\t\t\t\tbb = matrixLib.multiplyRectangle(ct, bb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result){\n\t\t\t\t\t\t\t// merge two bbox \n\t\t\t\t\t\t\tresult.x = Math.min(result.x, bb.x);\n\t\t\t\t\t\t\tresult.y = Math.min(result.y, bb.y);\n\t\t\t\t\t\t\tresult.endX = Math.max(result.endX, bb.x + bb.width);\n\t\t\t\t\t\t\tresult.endY = Math.max(result.endY, bb.y + bb.height);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// first bbox \n\t\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\tx: bb.x,\n\t\t\t\t\t\t\t\ty: bb.y,\n\t\t\t\t\t\t\t\tendX: bb.x + bb.width,\n\t\t\t\t\t\t\t\tendY: bb.y + bb.height\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(result){\n\t\t\t\t\tresult.width = result.endX - result.x;\n\t\t\t\t\tresult.height = result.endY - result.y;\n\t\t\t\t}\n\t\t\t\treturn result; // dojox/gfx.Rectangle\n\t\t\t}\n\t\t\t// unknown/empty bounding box, subclass shall override this impl \n\t\t\treturn null;\n\t\t},\n\t\t// moving child nodes\n\t\t_moveChildToFront: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to front of the list of shapes\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tone of the child shapes to move to the front\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tremoveItemAt(this.children, i);\n\t\t\t\t\tthis.children.push(shape);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_moveChildToBack: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to back of the list of shapes\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tone of the child shapes to move to the front\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tremoveItemAt(this.children, i);\n\t\t\t\t\tthis.children.unshift(shape);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t}\n\t};\n\n\tshape.Surface = declare(\"dojox.gfx.shape.Surface\", null, {\n\t\t// summary:\n\t\t//\t\ta surface object to be used for drawings\n\t\tconstructor: function(){\n\t\t\t// underlying node\n\t\t\tthis.rawNode = null;\n\t\t\t// the parent node\n\t\t\tthis._parent = null;\n\t\t\t// the list of DOM nodes to be deleted in the case of destruction\n\t\t\tthis._nodes = [];\n\t\t\t// the list of events to be detached in the case of destruction\n\t\t\tthis._events = [];\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tdestroy all relevant external resources and release all\n\t\t\t//\t\texternal references to make this object garbage-collectible\n\t\t\tarr.forEach(this._nodes, domConstruct.destroy);\n\t\t\tthis._nodes = [];\n\t\t\tarr.forEach(this._events, function(h){ if(h){ h.remove(); } });\n\t\t\tthis._events = [];\n\t\t\tthis.rawNode = null;\t// recycle it in _nodes, if it needs to be recycled\n\t\t\tif(has(\"ie\")){\n\t\t\t\twhile(this._parent.lastChild){\n\t\t\t\t\tdomConstruct.destroy(this._parent.lastChild);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis._parent.innerHTML = \"\";\n\t\t\t}\n\t\t\tthis._parent = null;\n\t\t},\n\t\tgetEventSource: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a node, which can be used to attach event listeners\n\t\t\treturn this.rawNode; // Node\n\t\t},\n\t\t_getRealMatrix: function(){\n\t\t\t// summary:\n\t\t\t//\t\talways returns the identity matrix\n\t\t\treturn null;\t// dojox/gfx/Matrix2D\n\t\t},\n\t\t/*=====\n\t\t setDimensions: function(width, height){\n\t\t\t // summary:\n\t\t\t //\t\tsets the width and height of the rawNode\n\t\t\t // width: String\n\t\t\t //\t\twidth of surface, e.g., \"100px\"\n\t\t\t // height: String\n\t\t\t //\t\theight of surface, e.g., \"100px\"\n\t\t\t return this;\t// self\n\t\t },\n\t\t getDimensions: function(){\n\t\t\t // summary:\n\t\t\t //     gets current width and height in pixels\n\t\t\t // returns: Object\n\t\t\t //     object with properties \"width\" and \"height\"\n\t\t },\n\t\t =====*/\n\t\tisLoaded: true,\n\t\tonLoad: function(/*dojox/gfx/shape.Surface*/ surface){\n\t\t\t// summary:\n\t\t\t//\t\tlocal event, fired once when the surface is created\n\t\t\t//\t\tasynchronously, used only when isLoaded is false, required\n\t\t\t//\t\tonly for Silverlight.\n\t\t},\n\t\twhenLoaded: function(/*Object|Null*/ context, /*Function|String*/ method){\n\t\t\tvar f = lang.hitch(context, method);\n\t\t\tif(this.isLoaded){\n\t\t\t\tf(this);\n\t\t\t}else{\n\t\t\t\ton.once(this, \"load\", function(surface){\n\t\t\t\t\tf(surface);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\tlang.extend(shape.Surface, shape._eventsProcessing);\n\n\t/*=====\n\tg.Point = declare(\"dojox/gfx.Point\", null, {\n\t\t// summary:\n\t\t//\t\t2D point for drawings - {x, y}\n\t\t// description:\n\t\t//\t\tDo not use this object directly!\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2}.\n\t});\n\n\tg.Rectangle = declare(\"dojox.gfx.Rectangle\", null, {\n\t\t// summary:\n\t\t//\t\trectangle - {x, y, width, height}\n\t\t// description:\n\t\t//\t\tDo not use this object directly!\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2, width: 100, height: 200}.\n\t});\n\t =====*/\n\n\n\tshape.Rect = declare(\"dojox.gfx.shape.Rect\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic rectangle\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\tThe underlying graphics system object (typically a DOM Node)\n\t\t\tthis.shape = g.getDefault(\"Rect\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box (its shape in this case)\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Ellipse = declare(\"dojox.gfx.shape.Ellipse\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic ellipse\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Ellipse\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {x: shape.cx - shape.rx, y: shape.cy - shape.ry,\n\t\t\t\t\twidth: 2 * shape.rx, height: 2 * shape.ry};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Circle = declare(\"dojox.gfx.shape.Circle\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic circle\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Circle\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {x: shape.cx - shape.r, y: shape.cy - shape.r,\n\t\t\t\t\twidth: 2 * shape.r, height: 2 * shape.r};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Line = declare(\"dojox.gfx.shape.Line\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic line (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Line\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {\n\t\t\t\t\tx:\t\tMath.min(shape.x1, shape.x2),\n\t\t\t\t\ty:\t\tMath.min(shape.y1, shape.y2),\n\t\t\t\t\twidth:\tMath.abs(shape.x2 - shape.x1),\n\t\t\t\t\theight:\tMath.abs(shape.y2 - shape.y1)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Polyline = declare(\"dojox.gfx.shape.Polyline\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic polyline/polygon (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Polyline\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tsetShape: function(points, closed){\n\t\t\t// summary:\n\t\t\t//\t\tsets a polyline/polygon shape object\n\t\t\t// points: Object|Array\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\n\t\t\t// closed: Boolean\n\t\t\t//\t\tclose the polyline to make a polygon\n\t\t\tif(points && points instanceof Array){\n\t\t\t\tthis.inherited(arguments, [{points: points}]);\n\t\t\t\tif(closed && this.shape.points.length){\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.inherited(arguments, [points]);\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_normalizePoints: function(){\n\t\t\t// summary:\n\t\t\t//\t\tnormalize points to array of {x:number, y:number}\n\t\t\tvar p = this.shape.points, l = p && p.length;\n\t\t\tif(l && typeof p[0] == \"number\"){\n\t\t\t\tvar points = [];\n\t\t\t\tfor(var i = 0; i < l; i += 2){\n\t\t\t\t\tpoints.push({x: p[i], y: p[i + 1]});\n\t\t\t\t}\n\t\t\t\tthis.shape.points = points;\n\t\t\t}\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox && this.shape.points.length){\n\t\t\t\tvar p = this.shape.points;\n\t\t\t\tvar l = p.length;\n\t\t\t\tvar t = p[0];\n\t\t\t\tvar bbox = {l: t.x, t: t.y, r: t.x, b: t.y};\n\t\t\t\tfor(var i = 1; i < l; ++i){\n\t\t\t\t\tt = p[i];\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\n\t\t\t\t}\n\t\t\t\tthis.bbox = {\n\t\t\t\t\tx:\t\tbbox.l,\n\t\t\t\t\ty:\t\tbbox.t,\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\n\t\t\t\t\theight:\tbbox.b - bbox.t\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Image = declare(\"dojox.gfx.shape.Image\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic image (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Image\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box (its shape in this case)\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\n\t\t},\n\t\tsetStroke: function(){\n\t\t\t// summary:\n\t\t\t//\t\tignore setting a stroke style\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetFill: function(){\n\t\t\t// summary:\n\t\t\t//\t\tignore setting a fill style\n\t\t\treturn this;\t// self\n\t\t}\n\t});\n\t\n\tshape.Text = declare(shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic text (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.fontStyle = null;\n\t\t\tthis.shape = g.getDefault(\"Text\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetFont: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current font object or null\n\t\t\treturn this.fontStyle;\t// Object\n\t\t},\n\t\tsetFont: function(newFont){\n\t\t\t// summary:\n\t\t\t//\t\tsets a font for text\n\t\t\t// newFont: Object\n\t\t\t//\t\ta font object (see dojox/gfx.defaultFont) or a font string\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ? g.splitFontString(newFont) :\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\n\t\t\tthis._setFont();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\tvar bbox = null, s = this.getShape();\n\t\t\tif(s.text){\n\t\t\t\tbbox = g._base._computeTextBoundingBox(this);\n\t\t\t}\n\t\t\treturn bbox;\n\t\t}\n\t});\n\t\n\tshape.Creator = {\n\t\t// summary:\n\t\t//\t\tshape creators\n\t\tcreateShape: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a shape object based on its type; it is meant to be used\n\t\t\t//\t\tby group-like objects\n\t\t\t// shape: Object\n\t\t\t//\t\ta shape descriptor object\n\t\t\t// returns: dojox/gfx/shape.Shape | Null\n\t\t\t//      a fully instantiated surface-specific Shape object\n\t\t\tswitch(shape.type){\n\t\t\t\tcase g.defaultPath.type:\t\treturn this.createPath(shape);\n\t\t\t\tcase g.defaultRect.type:\t\treturn this.createRect(shape);\n\t\t\t\tcase g.defaultCircle.type:\t    return this.createCircle(shape);\n\t\t\t\tcase g.defaultEllipse.type:\t    return this.createEllipse(shape);\n\t\t\t\tcase g.defaultLine.type:\t\treturn this.createLine(shape);\n\t\t\t\tcase g.defaultPolyline.type:\treturn this.createPolyline(shape);\n\t\t\t\tcase g.defaultImage.type:\t\treturn this.createImage(shape);\n\t\t\t\tcase g.defaultText.type:\t\treturn this.createText(shape);\n\t\t\t\tcase g.defaultTextPath.type:\treturn this.createTextPath(shape);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tcreateGroup: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a group shape\n\t\t\treturn this.createObject(g.Group);\t// dojox/gfx/Group\n\t\t},\n\t\tcreateRect: function(rect){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a rectangle shape\n\t\t\t// rect: Object\n\t\t\t//\t\ta path object (see dojox/gfx.defaultRect)\n\t\t\treturn this.createObject(g.Rect, rect);\t// dojox/gfx/shape.Rect\n\t\t},\n\t\tcreateEllipse: function(ellipse){\n\t\t\t// summary:\n\t\t\t//\t\tcreates an ellipse shape\n\t\t\t// ellipse: Object\n\t\t\t//\t\tan ellipse object (see dojox/gfx.defaultEllipse)\n\t\t\treturn this.createObject(g.Ellipse, ellipse);\t// dojox/gfx/shape.Ellipse\n\t\t},\n\t\tcreateCircle: function(circle){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a circle shape\n\t\t\t// circle: Object\n\t\t\t//\t\ta circle object (see dojox/gfx.defaultCircle)\n\t\t\treturn this.createObject(g.Circle, circle);\t// dojox/gfx/shape.Circle\n\t\t},\n\t\tcreateLine: function(line){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a line shape\n\t\t\t// line: Object\n\t\t\t//\t\ta line object (see dojox/gfx.defaultLine)\n\t\t\treturn this.createObject(g.Line, line);\t// dojox/gfx/shape.Line\n\t\t},\n\t\tcreatePolyline: function(points){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a polyline/polygon shape\n\t\t\t// points: Object\n\t\t\t//\t\ta points object (see dojox/gfx.defaultPolyline)\n\t\t\t//\t\tor an Array of points\n\t\t\treturn this.createObject(g.Polyline, points);\t// dojox/gfx/shape.Polyline\n\t\t},\n\t\tcreateImage: function(image){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a image shape\n\t\t\t// image: Object\n\t\t\t//\t\tan image object (see dojox/gfx.defaultImage)\n\t\t\treturn this.createObject(g.Image, image);\t// dojox/gfx/shape.Image\n\t\t},\n\t\tcreateText: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a text shape\n\t\t\t// text: Object\n\t\t\t//\t\ta text object (see dojox/gfx.defaultText)\n\t\t\treturn this.createObject(g.Text, text);\t// dojox/gfx/shape.Text\n\t\t},\n\t\tcreatePath: function(path){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a path shape\n\t\t\t// path: Object\n\t\t\t//\t\ta path object (see dojox/gfx.defaultPath)\n\t\t\treturn this.createObject(g.Path, path);\t// dojox/gfx/shape.Path\n\t\t},\n\t\tcreateTextPath: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a text shape\n\t\t\t// text: Object\n\t\t\t//\t\ta textpath object (see dojox/gfx.defaultTextPath)\n\t\t\treturn this.createObject(g.TextPath, {}).setText(text);\t// dojox/gfx/shape.TextPath\n\t\t},\n\t\tcreateObject: function(shapeType, rawShape){\n\t\t\t// summary:\n\t\t\t//\t\tcreates an instance of the passed shapeType class\n\t\t\t// shapeType: Function\n\t\t\t//\t\ta class constructor to create an instance of\n\t\t\t// rawShape: Object \n\t\t\t//\t\tproperties to be passed in to the classes 'setShape' method\n\t\n\t\t\t// SHOULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn null;\t// dojox/gfx/shape.Shape\n\t\t}\n\t};\n\t\n\t/*=====\n\t lang.extend(shape.Surface, shape.Container);\n\t lang.extend(shape.Surface, shape.Creator);\n\n\t g.Group = declare(shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta group shape, which can be used\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t});\n\tlang.extend(g.Group, shape.Container);\n\tlang.extend(g.Group, shape.Creator);\n\n\tg.Rect     = shape.Rect;\n\tg.Circle   = shape.Circle;\n\tg.Ellipse  = shape.Ellipse;\n\tg.Line     = shape.Line;\n\tg.Polyline = shape.Polyline;\n\tg.Text     = shape.Text;\n\tg.Surface  = shape.Surface;\n\t=====*/\n\n\treturn shape;\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/window\", \"dojo/dom-geometry\", \"dojox/gfx\", \"dojo/has\"],\n\tfunction(lang, win, domGeom, g, has){\n\n\tvar common = lang.getObject(\"dojox.charting.axis2d.common\", true);\n\t\n\tvar clearNode = function(s){\n\t\ts.marginLeft   = \"0px\";\n\t\ts.marginTop    = \"0px\";\n\t\ts.marginRight  = \"0px\";\n\t\ts.marginBottom = \"0px\";\n\t\ts.paddingLeft   = \"0px\";\n\t\ts.paddingTop    = \"0px\";\n\t\ts.paddingRight  = \"0px\";\n\t\ts.paddingBottom = \"0px\";\n\t\ts.borderLeftWidth   = \"0px\";\n\t\ts.borderTopWidth    = \"0px\";\n\t\ts.borderRightWidth  = \"0px\";\n\t\ts.borderBottomWidth = \"0px\";\n\t};\n\n\tvar getBoxWidth = function(n){\n\t\t// marginBox is incredibly slow, so avoid it if we can\n\t\tif(n[\"getBoundingClientRect\"]){\n\t\t\tvar bcr = n.getBoundingClientRect();\n\t\t\treturn bcr.width || (bcr.right - bcr.left);\n\t\t}else{\n\t\t\treturn domGeom.getMarginBox(n).w;\n\t\t}\n\t};\n\n\treturn lang.mixin(common, {\n\t\t// summary:\n\t\t//\t\tCommon methods to be used by any axis.  This is considered \"static\".\n\t\tcreateText: {\n\t\t\tgfx: function(chart, creator, x, y, align, text, font, fontColor){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tUse dojox.gfx to create any text.\n\t\t\t\t// chart: dojox.charting.Chart\n\t\t\t\t//\t\tThe chart to create the text into.\n\t\t\t\t// creator: dojox.gfx.Surface\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\n\t\t\t\t// x: Number\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\n\t\t\t\t// y: Number\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\n\t\t\t\t// align: String\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\n\t\t\t\t// text: String\n\t\t\t\t//\t\tThe text to render.\n\t\t\t\t// font: String\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\n\t\t\t\t// fontColor: String|dojo.Color\n\t\t\t\t//\t\tThe color of the resultant text.\n\t\t\t\t// returns: dojox.gfx.Text\n\t\t\t\t//\t\tThe resultant GFX object.\n\t\t\t\treturn creator.createText({\n\t\t\t\t\tx: x, y: y, text: text, align: align\n\t\t\t\t}).setFont(font).setFill(fontColor);\t//\tdojox.gfx.Text\n\t\t\t},\n\t\t\thtml: function(chart, creator, x, y, align, text, font, fontColor, labelWidth){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tUse the HTML DOM to create any text.\n\t\t\t\t// chart: dojox.charting.Chart\n\t\t\t\t//\t\tThe chart to create the text into.\n\t\t\t\t// creator: dojox.gfx.Surface\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\n\t\t\t\t// x: Number\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\n\t\t\t\t// y: Number\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\n\t\t\t\t// align: String\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\n\t\t\t\t// text: String\n\t\t\t\t//\t\tThe text to render.\n\t\t\t\t// font: String\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\n\t\t\t\t// fontColor: String|dojo.Color\n\t\t\t\t//\t\tThe color of the resultant text.\n\t\t\t\t// labelWidth: Number?\n\t\t\t\t//\t\tThe maximum width of the resultant DOM node.\n\t\t\t\t// returns: DOMNode\n\t\t\t\t//\t\tThe resultant DOMNode (a \"div\" element).\n\n\t\t\t\t// setup the text node\n\t\t\t\tvar p = win.doc.createElement(\"div\"), s = p.style, boxWidth;\n\t\t\t\t// bidi support, if this function exists the module was loaded \n\t\t\t\tif(chart.getTextDir){\n\t\t\t\t\tp.dir = chart.getTextDir(text);\n\t\t\t\t}\n\t\t\t\tclearNode(s);\n\t\t\t\ts.font = font;\n\t\t\t\tp.innerHTML = String(text).replace(/\\s/g, \"&nbsp;\");\n\t\t\t\ts.color = fontColor;\n\t\t\t\t// measure the size\n\t\t\t\ts.position = \"absolute\";\n\t\t\t\ts.left = \"-10000px\";\n\t\t\t\twin.body().appendChild(p);\n\t\t\t\tvar size = g.normalizedLength(g.splitFontString(font).size);\n\n\t\t\t\t// do we need to calculate the label width?\n\t\t\t\tif(!labelWidth){\n\t\t\t\t\tboxWidth = getBoxWidth(p);\n\t\t\t\t}\n\t\t\t\t// when the textDir is rtl, but the UI ltr needs\n\t\t\t\t// to recalculate the starting point\n\t\t\t\tif(p.dir == \"rtl\"){\n\t\t\t\t\tx += labelWidth ? labelWidth : boxWidth;\n\t\t\t\t}\n\n\t\t\t\t// new settings for the text node\n\t\t\t\twin.body().removeChild(p);\n\n\t\t\t\ts.position = \"relative\";\n\t\t\t\tif(labelWidth){\n\t\t\t\t\ts.width = labelWidth + \"px\";\n\t\t\t\t\t// s.border = \"1px dotted grey\";\n\t\t\t\t\tswitch(align){\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\ts.textAlign = \"center\";\n\t\t\t\t\t\t\ts.left = (x - labelWidth / 2) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\ts.textAlign = \"right\";\n\t\t\t\t\t\t\ts.left = (x - labelWidth) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ts.left = x + \"px\";\n\t\t\t\t\t\t\ts.textAlign = \"left\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tswitch(align){\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth / 2) + \"px\";\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth / 2) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth) + \"px\";\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t//case \"start\":\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ts.left = Math.floor(x) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts.top = Math.floor(y - size) + \"px\";\n\t\t\t\ts.whiteSpace = \"nowrap\";\t// hack for WebKit\n\t\t\t\t// setup the wrapper node\n\t\t\t\tvar wrap = win.doc.createElement(\"div\"), w = wrap.style;\n\t\t\t\tclearNode(w);\n\t\t\t\tw.width = \"0px\";\n\t\t\t\tw.height = \"0px\";\n\t\t\t\t// insert nodes\n\t\t\t\twrap.appendChild(p);\n\t\t\t\tchart.node.insertBefore(wrap, chart.node.firstChild);\n\t\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\t\tchart.htmlElementsRegistry.push([wrap, x, y, align, text, font, fontColor]);\n\t\t\t\t}\n\t\t\t\treturn wrap;\t//\tDOMNode\n\t\t\t}\n\t\t}\n\t});\n});\n","define([\"../..\", \"dojo/_base/lang\", \"dojo/_base/array\"], function(dojox, lang, arr){\n\tvar df = lang.getObject(\"lang.functional\", true, dojox);\n\n// This module adds high-level functions and related constructs:\n//\t- anonymous functions built from the string\n\n// Acknowledgements:\n//\t- lambda() is based on work by Oliver Steele\n//\t\t(http://osteele.com/sources/javascript/functional/functional.js)\n//\t\twhich was published under MIT License\n\n// Notes:\n//\t- lambda() produces functions, which after the compilation step are\n//\t\tas fast as regular JS functions (at least theoretically).\n\n// Lambda input values:\n//\t- returns functions unchanged\n//\t- converts strings to functions\n//\t- converts arrays to a functional composition\n\n\tvar lcache = {};\n\n\t// split() is augmented on IE6 to ensure the uniform behavior\n\tvar split = \"ab\".split(/a*/).length > 1 ? String.prototype.split :\n\t\t\tfunction(sep){\n\t\t\t\t var r = this.split.call(this, sep),\n\t\t\t\t\t m = sep.exec(this);\n\t\t\t\t if(m && m.index == 0){ r.unshift(\"\"); }\n\t\t\t\t return r;\n\t\t\t};\n\t\t\t\n\tvar lambda = function(/*String*/ s){\n\t\tvar args = [], sects = split.call(s, /\\s*->\\s*/m);\n\t\tif(sects.length > 1){\n\t\t\twhile(sects.length){\n\t\t\t\ts = sects.pop();\n\t\t\t\targs = sects.pop().split(/\\s*,\\s*|\\s+/m);\n\t\t\t\tif(sects.length){ sects.push(\"(function(\" + args.join(\", \") + \"){ return (\" + s + \"); })\"); }\n\t\t\t}\n\t\t}else if(s.match(/\\b_\\b/)){\n\t\t\targs = [\"_\"];\n\t\t}else{\n\t\t\tvar l = s.match(/^\\s*(?:[+*\\/%&|\\^\\.=<>]|!=)/m),\n\t\t\t\tr = s.match(/[+\\-*\\/%&|\\^\\.=<>!]\\s*$/m);\n\t\t\tif(l || r){\n\t\t\t\tif(l){\n\t\t\t\t\targs.push(\"$1\");\n\t\t\t\t\ts = \"$1\" + s;\n\t\t\t\t}\n\t\t\t\tif(r){\n\t\t\t\t\targs.push(\"$2\");\n\t\t\t\t\ts = s + \"$2\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// the point of the long regex below is to exclude all well-known\n\t\t\t\t// lower-case words from the list of potential arguments\n\t\t\t\tvar vars = s.\n\t\t\t\t\treplace(/(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*:|this|true|false|null|undefined|typeof|instanceof|in|delete|new|void|arguments|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape|dojo|dijit|dojox|window|document|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"/g, \"\").\n\t\t\t\t\tmatch(/([a-z_$][a-z_$\\d]*)/gi) || [], t = {};\n\t\t\t\tarr.forEach(vars, function(v){\n\t\t\t\t\tif(!t.hasOwnProperty(v)){\n\t\t\t\t\t\targs.push(v);\n\t\t\t\t\t\tt[v] = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn {args: args, body: s};\t// Object\n\t};\n\n\tvar compose = function(/*Array*/ a){\n\t\treturn a.length ?\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tvar i = a.length - 1, x = df.lambda(a[i]).apply(this, arguments);\n\t\t\t\t\t\tfor(--i; i >= 0; --i){ x = df.lambda(a[i]).call(this, x); }\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t}\n\t\t\t\t:\n\t\t\t\t\t// identity\n\t\t\t\t\tfunction(x){ return x; };\n\t};\n\n\tlang.mixin(df, {\n\t\t// lambda\n\t\trawLambda: function(/*String*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\n\t\t\t//\t\treturns an object describing the function; functions are\n\t\t\t//\t\tpassed through unmodified.\n\t\t\t// description:\n\t\t\t//\t\tThis method is to normalize a functional representation (a\n\t\t\t//\t\ttext snippet) to an object that contains an array of\n\t\t\t//\t\targuments, and a body , which is used to calculate the\n\t\t\t//\t\treturning value.\n\t\t\treturn lambda(s);\t// Object\n\t\t},\n\t\tbuildLambda: function(/*String*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, returns a string, which\n\t\t\t//\t\trepresents the function.\n\t\t\t// description:\n\t\t\t//\t\tThis method returns a textual representation of a function\n\t\t\t//\t\tbuilt from the snippet. It is meant to be evaled in the\n\t\t\t//\t\tproper context, so local variables can be pulled from the\n\t\t\t//\t\tenvironment.\n\t\t\tvar l = lambda(s);\n\t\t\treturn \"function(\" + l.args.join(\",\") + \"){return (\" + l.body + \");}\";\t// String\n\t\t},\n\t\tlambda: function(/*Function|String|Array*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\n\t\t\t//\t\treturns a function object; functions are passed through\n\t\t\t//\t\tunmodified.\n\t\t\t// description:\n\t\t\t//\t\tThis method is used to normalize a functional\n\t\t\t//\t\trepresentation (a text snippet, an array, or a function) to\n\t\t\t//\t\ta function object.\n\t\t\tif(typeof s == \"function\"){ return s; }\n\t\t\tif(s instanceof Array){ return compose(s); }\n\t\t\tif(lcache.hasOwnProperty(s)){ return lcache[s]; }\n\t\t\tvar l = lambda(s);\n\t\t\treturn lcache[s] = new Function(l.args, \"return (\" + l.body + \");\");\t// Function\n\t\t},\n\t\tclearLambdaCache: function(){\n\t\t\t// summary:\n\t\t\t//\t\tclears internal cache of lambdas\n\t\t\tlcache = {};\n\t\t}\n\t});\n\t\n\treturn df;\n});\n","define([\"dojo/_base/array\", \"dojo/dom-construct\",\"dojo/_base/declare\", \"dojox/gfx\", \"dojox/gfx/shape\"],\n\tfunction(arr, domConstruct, declare, gfx, shape){\n\n\treturn declare(\"dojox.charting.Element\", null, {\n\t\t// summary:\n\t\t//\t\tA base class that is used to build other elements of a chart, such as\n\t\t//\t\ta series.\n\t\t// chart: dojox/charting/Chart\n\t\t//\t\tThe parent chart for this element.\n\t\t// group: dojox/gfx/shape.Group\n\t\t//\t\tThe visual GFX group representing this element.\n\t\t// htmlElement: Array\n\t\t//\t\tAny DOMNodes used as a part of this element (such as HTML-based labels).\n\t\t// dirty: Boolean\n\t\t//\t\tA flag indicating whether or not this element needs to be rendered.\n\n\t\tchart: null,\n\t\tgroup: null,\n\t\thtmlElements: null,\n\t\tdirty: true,\n\t\trenderingOptions: null,\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreates a new charting element.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart that this element belongs to.\n\t\t\tthis.chart = chart;\n\t\t\tthis.group = null;\n\t\t\tthis.htmlElements = [];\n\t\t\tthis.dirty = true;\n\t\t\tthis.trailingSymbol = \"...\";\n\t\t\tthis._events = [];\n\t\t\tif (kwArgs && kwArgs.renderingOptions) {\n\t\t\t\tthis.renderingOptions = kwArgs.renderingOptions;\n\t\t\t}\n\t\t},\n\t\tpurgeGroup: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear any elements out of our group, and destroy the group.\n\t\t\t// returns: dojox/charting/Element\n\t\t\t//\t\tA reference to this object for functional chaining.\n\t\t\tthis.destroyHtmlElements();\n\t\t\tif(this.group){\n\t\t\t\t// since 1.7.x we need dispose shape otherwise there is a memoryleak\n\t\t\t\tthis.getGroup().removeShape();\n\t\t\t\tvar children = this.getGroup().children;\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\t\tshape.dispose(children[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.getGroup().rawNode){\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\n\t\t\t\t}\n\t\t\t\tthis.getGroup().clear();\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tshape.dispose(this.getGroup(), true);\n\t\t\t\t}\n\t\t\t\tif(this.getGroup() != this.group){\n\t\t\t\t\t// we do have an intermediary clipping group (see CartesianBase)\n\t\t\t\t\tif(this.group.rawNode){\n\t\t\t\t\t\tdomConstruct.empty(this.group.rawNode);\n\t\t\t\t\t}\n\t\t\t\t\tthis.group.clear();\n\t\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\t\tif(shape.dispose){\n\t\t\t\t\t\tshape.dispose(this.group, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.group = null;\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\tif(this._events.length){\n\t\t\t\tarr.forEach(this._events, function(item){\n\t\t\t\t\titem.shape.disconnect(item.handle);\n\t\t\t\t});\n\t\t\t\tthis._events = [];\n\t\t\t}\n\t\t\treturn this;\t//\tdojox.charting.Element\n\t\t},\n\t\tcleanGroup: function(creator){\n\t\t\t// summary:\n\t\t\t//\t\tClean any elements (HTML or GFX-based) out of our group, and create a new one.\n\t\t\t// creator: dojox/gfx/shape.Surface?\n\t\t\t//\t\tAn optional surface to work with.\n\t\t\t// returns: dojox/charting/Element\n\t\t\t//\t\tA reference to this object for functional chaining.\n\t\t\tthis.destroyHtmlElements();\n\t\t\tif(!creator){ creator = this.chart.surface; }\n\t\t\tif(this.group){\n\t\t\t\tvar bgnode;\n\t\t\t\tvar children = this.getGroup().children;\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\t\tshape.dispose(children[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.getGroup().rawNode){\n\t\t\t\t\tbgnode = this.getGroup().bgNode;\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\n\t\t\t\t}\n\t\t\t\tthis.getGroup().clear();\n\t\t\t\tif(bgnode){\n\t\t\t\t\tthis.getGroup().rawNode.appendChild(bgnode);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.group = creator.createGroup();\n\t\t\t\t// in some cases we have a rawNode but this is not an actual DOM element (CanvasWithEvents) so check\n\t\t\t\t// the actual rawNode type.\n\t\t\t\tif (this.renderingOptions && this.group.rawNode &&\n\t\t\t\t\tthis.group.rawNode.namespaceURI == \"http://www.w3.org/2000/svg\") {\n\t\t\t\t\tfor (var key in this.renderingOptions) {\n\t\t\t\t\t\tthis.group.rawNode.setAttribute(key, this.renderingOptions[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox.charting.Element\n\t\t},\n\t\tgetGroup: function(){\n\t\t\treturn this.group;\n\t\t},\n\t\tdestroyHtmlElements: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDestroy any DOMNodes that may have been created as a part of this element.\n\t\t\tif(this.htmlElements.length){\n\t\t\t\tarr.forEach(this.htmlElements, domConstruct.destroy);\n\t\t\t\tthis.htmlElements = [];\n\t\t\t}\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tAPI addition to conform to the rest of the Dojo Toolkit's standard.\n\t\t\tthis.purgeGroup();\n\t\t},\n\t\toverrideShape: function(shape, params){\n\t\t\t// summary:\n\t\t\t//\t\tExtension point for overriding the charting shape\n\t\t},\n\t\t//text utilities\n\t\tgetTextWidth: function(s, font){\n\t\t\treturn gfx._base._getTextBox(s, {font: font}).w || 0;\n\t\t},\n\t\tgetTextWithLimitLength: function(s, font, limitWidth, truncated){\n\t\t\t// summary:\n\t\t\t//\t\tGet the truncated string based on the limited width in px(dichotomy algorithm)\n\t\t\t// s: String?\n\t\t\t//\t\tcandidate text.\n\t\t\t// font: String?\n\t\t\t//\t\ttext's font style.\n\t\t\t// limitWidth: Number?\n\t\t\t//\t\ttext limited width in px.\n\t\t\t// truncated: Boolean?\n\t\t\t//\t\twhether the input text(s) has already been truncated.\n\t\t\t// returns: Object\n\t\t\t// |\t{\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\n\t\t\t// |\t\ttruncated: whether text has been truncated\n\t\t\t// |\t}\n\t\t\tif(!s || s.length <= 0){\n\t\t\t\treturn {\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!limitWidth || limitWidth <= 0){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar delta = 2,\n\t\t\t\t//golden section for dichotomy algorithm\n\t\t\t\ttrucPercentage = 0.618,\n\t\t\t\tminStr = s.substring(0,1) + this.trailingSymbol,\n\t\t\t\tminWidth = this.getTextWidth(minStr, font);\n\t\t\tif(limitWidth <= minWidth){\n\t\t\t\treturn {\n\t\t\t\t\ttext: minStr,\n\t\t\t\t\ttruncated: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar width = this.getTextWidth(s, font);\n\t\t\tif(width <= limitWidth){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tvar begin = 0,\n\t\t\t\t\tend = s.length;\n\t\t\t\twhile(begin < end){\n\t\t\t\t\tif(end - begin <= delta ){\n\t\t\t\t\t\twhile (this.getTextWidth(s.substring(0, begin) + this.trailingSymbol, font) > limitWidth) {\n\t\t\t\t\t\t\tbegin -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: (s.substring(0,begin) + this.trailingSymbol),\n\t\t\t\t\t\t\ttruncated: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tvar index = begin + Math.round((end - begin) * trucPercentage),\n\t\t\t\t\t\twidthIntercepted = this.getTextWidth(s.substring(0, index), font);\n\t\t\t\t\tif(widthIntercepted < limitWidth){\n\t\t\t\t\t\tbegin = index;\n\t\t\t\t\t\tend = end;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbegin = begin;\n\t\t\t\t\t\tend = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTextWithLimitCharCount: function(s, font, wcLimit, truncated){\n\t\t\t// summary:\n\t\t\t//\t\tGet the truncated string based on the limited character count(dichotomy algorithm)\n\t\t\t// s: String?\n\t\t\t//\t\tcandidate text.\n\t\t\t// font: String?\n\t\t\t//\t\ttext's font style.\n\t\t\t// wcLimit: Number?\n\t\t\t//\t\ttext limited character count.\n\t\t\t// truncated: Boolean?\n\t\t\t//\t\twhether the input text(s) has already been truncated.\n\t\t\t// returns: Object\n\t\t\t// |\t{\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\n\t\t\t// |\t\ttruncated: whether text has been truncated\n\t\t\t// |\t}\n\t\t\tif (!s || s.length <= 0) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!wcLimit || wcLimit <= 0 || s.length <= wcLimit){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: s.substring(0, wcLimit) + this.trailingSymbol,\n\t\t\t\ttruncated: true\n\t\t\t};\n\t\t},\n\t\t// fill utilities\n\t\t_plotFill: function(fill, dim, offsets){\n\t\t\t// process a plot-wide fill\n\t\t\tif(!fill || !fill.type || !fill.space){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\tvar space = fill.space, span;\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\t\tfill.y1 = offsets.t + span * fill.y1 / 100;\n\t\t\t\t\t\t\tfill.y2 = offsets.t + span * fill.y2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\n\t\t\t\t\t\t\tfill.x1 = offsets.l + span * fill.x1 / 100;\n\t\t\t\t\t\t\tfill.x2 = offsets.l + span * fill.x2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tif(space === \"plot\"){\n\t\t\t\t\t\t// this one is used exclusively for scatter charts\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process both dimensions\n\t\t\t\t\t\tvar spanX = dim.width  - offsets.l - offsets.r,\n\t\t\t\t\t\t\tspanY = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\tfill.cx = offsets.l + spanX * fill.cx / 100;\n\t\t\t\t\t\tfill.cy = offsets.t + spanY * fill.cy / 100;\n\t\t\t\t\t\tfill.r  = fill.r * Math.sqrt(spanX * spanX + spanY * spanY) / 200;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pattern\":\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\t\tfill.y = offsets.t + span * fill.y / 100;\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\n\t\t\t\t\t\t\tfill.x = offsets.l + span * fill.x / 100;\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\t\t_shapeFill: function(fill, bbox){\n\t\t\t// process shape-specific fill\n\t\t\tif(!fill || !fill.space){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\tvar space = fill.space, span;\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = bbox.width;\n\t\t\t\t\t\t\tfill.x1 = bbox.x + span * fill.x1 / 100;\n\t\t\t\t\t\t\tfill.x2 = bbox.x + span * fill.x2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = bbox.height;\n\t\t\t\t\t\t\tfill.y1 = bbox.y + span * fill.y1 / 100;\n\t\t\t\t\t\t\tfill.y2 = bbox.y + span * fill.y2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tif(space === \"shape\"){\n\t\t\t\t\t\t// this one is used exclusively for bubble charts and pie charts\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process both dimensions\n\t\t\t\t\t\tfill.cx = bbox.x + bbox.width  / 2;\n\t\t\t\t\t\tfill.cy = bbox.y + bbox.height / 2;\n\t\t\t\t\t\tfill.r  = fill.r * bbox.width  / 200;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pattern\":\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = bbox.width;\n\t\t\t\t\t\t\tfill.x = bbox.x + span * fill.x / 100;\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = bbox.height;\n\t\t\t\t\t\t\tfill.y = bbox.y + span * fill.y / 100;\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\t\t_pseudoRadialFill: function(fill, center, radius, start, end){\n\t\t\t// process pseudo-radial fills\n\t\t\tif(!fill || fill.type !== \"radial\" || fill.space !== \"shape\"){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\t// clone and normalize fill\n\t\t\tvar space = fill.space;\n\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\tfill.space = space;\n\t\t\tif(arguments.length < 4){\n\t\t\t\t// process both dimensions\n\t\t\t\tfill.cx = center.x;\n\t\t\t\tfill.cy = center.y;\n\t\t\t\tfill.r  = fill.r * radius / 100;\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\t// convert to a linear gradient\n\t\t\tvar angle = arguments.length < 5 ? start : (end + start) / 2;\n\t\t\treturn {\n\t\t\t\ttype: \"linear\",\n\t\t\t\tx1: center.x,\n\t\t\t\ty1: center.y,\n\t\t\t\tx2: center.x + fill.r * radius * Math.cos(angle) / 100,\n\t\t\t\ty2: center.y + fill.r * radius * Math.sin(angle) / 100,\n\t\t\t\tcolors: fill.colors\n\t\t\t};\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/_base/lang\", \"dojox/gfx\",\n\t\t\"../Element\", \"./common\", \"../axis2d/common\", \"dojo/has\"],\n\tfunction(declare, arr, lang, gfx, Element, common, ac, has){\n/*=====\ndojox.charting.plot2d.__PlotCtorArgs = {\n\t// summary:\n\t//\t\tThe base keyword arguments object for plot constructors.\n\t//\t\tNote that the parameters for this may change based on the\n\t//\t\tspecific plot type (see the corresponding plot type for\n\t//\t\tdetails).\n\n\t// tooltipFunc: Function?\n\t//\t\tAn optional function used to compute tooltip text for this plot. It takes precedence over\n\t//\t\tthe default function when available.\n\t//\t|\t\tfunction tooltipFunc(o) { return \"text\"; }\n\t//\t\t`o`is the event object that triggered the tooltip.\n\ttooltipFunc: null\n};\n=====*/\n\tvar Base = declare(\"dojox.charting.plot2d.Base\", Element, {\n\t\t// summary:\n\t\t//\t\tBase class for all plot types.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a base plot for charting.\n\t\t\t// chart: dojox/chart/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define the plot.\n\t\n\t\t\t// TODO does not work in markup\n\t\t\tif(kwArgs && kwArgs.tooltipFunc){\n\t\t\t\tthis.tooltipFunc = kwArgs.tooltipFunc;\n\t\t\t}\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox.charting.plot2d.Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series = [];\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tSet an axis for this plot.\n\t\t\t// axis: dojox.charting.axis2d.Base\n\t\t\t//\t\tThe axis to set.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tassignAxes: function(axes){\n\t\t\t// summary:\n\t\t\t//\t\tFrom an array of axes pick the ones that correspond to this plot and\n\t\t\t//\t\tassign them to the plot using setAxis method.\n\t\t\t// axes: Array\n\t\t\t//\t\tAn array of dojox/charting/axis2d/Base\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\tarr.forEach(this.axes, function(axis){\n\t\t\t\tif(this[axis]){\n\t\t\t\t\tthis.setAxis(axes[this[axis]]);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to this plot.\n\t\t\t// run: dojox.charting.Series\n\t\t\t//\t\tThe series to be added.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series.push(run);\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn common.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t},\n\t\tcalculateAxes: function(dim){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for running the axis calculations (deprecated).\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.initializeScalers(dim, this.getSeriesStats());\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tinitializeScalers: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDoes nothing.\n\t\t\treturn this;\n\t\t},\n\t\tisDataDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns whether or not any of this plot's data series need to be rendered.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tFlag indicating if any of this plot's series are invalid and need rendering.\n\t\t\treturn arr.some(this.series, function(item){ return item.dirty; });\t//\tBoolean\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\trenderLabel: function(group, x, y, label, theme, block, align){\n\t\t\tvar elem = ac.createText[this.opt.htmlLabels && gfx.renderer != \"vml\" ? \"html\" : \"gfx\"]\n\t\t\t\t(this.chart, group, x, y, align?align:\"middle\", label, theme.series.font, theme.series.fontColor);\n\t\t\t// if the label is inside we need to avoid catching events on it this would prevent action on\n\t\t\t// chart elements\n\t\t\tif(block){\n\t\t\t\t// TODO this won't work in IE neither in VML nor in HTML\n\t\t\t\t// a solution would be to catch the event on the label and refire it to the element\n\t\t\t\t// possibly using elementFromPoint or having it already available\n\t\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\n\t\t\t\t\t// we have HTML labels, let's use pointEvents on the HTML node\n\t\t\t\t\telem.style.pointerEvents = \"none\";\n\t\t\t\t}else if(elem.rawNode){\n\t\t\t\t\t// we have SVG labels, let's use pointerEvents on the SVG or VML node\n\t\t\t\t\telem.rawNode.style.pointerEvents = \"none\";\n\t\t\t\t}\n\t\t\t\t// else we have Canvas, we need do nothing, as Canvas text won't catch events\n\t\t\t}\n\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\n\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t}\n\n\t\t\treturn elem;\n\t\t},\n\t\tgetRequiredColors: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet how many data series we have, so we know how many colors to use.\n\t\t\t// returns: Number\n\t\t\t//\t\tThe number of colors needed.\n\t\t\treturn this.series.length;\t//\tNumber\n\t\t},\n\t\t_getLabel: function(number){\n\t\t\treturn common.getLabel(number, this.opt.fixed, this.opt.precision);\n\t\t}\n\t});\n\tif(has(\"dojo-bidi\")){\n\t\tBase.extend({\n\t\t\t_checkOrientation: function(group, dim, offsets){\n\t\t\t\tthis.chart.applyMirroring(this.group, dim, offsets);\n\t\t\t}\t\t\n\t\t});\n\t}\n\treturn Base;\n});\n","define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"./Default\", \"./commonStacked\"], \n\tfunction(declare, lang, Default, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.Stacked\", Default, {\n\t\t// summary:\n\t\t//\t\tLike the default plot, Stacked sets up lines, areas and markers\n\t\t//\t\tin a stacked fashion (values on the y axis added to each other)\n\t\t//\t\tas opposed to a direct one.\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\treturn stats; // Object\n\t\t},\n\t\t\n\t\tbuildSegments: function(i, indexed){\n\t\t\tvar run = this.series[i],\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\n\t\t\t\tmax = indexed?Math.min(run.data.length-1, Math.ceil(this._hScaler.bounds.to)):run.data.length-1,\n\t\t\t\trseg = null, segments = [], isNullValue = lang.hitch(this, \"isNullValue\");\n\t\t\t// split the run data into dense segments (each containing no nulls)\n\t\t\t// except if interpolates is false in which case ignore null between valid data\n\t\t\tfor(var j = min; j <= max; j++){\n\t\t\t\tvar value = indexed ? commonStacked.getIndexValue(this.series, i, j, isNullValue) : commonStacked.getValue(this.series, i, run.data[j] ?run.data[j].x: null, isNullValue);\n\t\t\t\tif(!isNullValue(value[0]) && (indexed || value[0].y != null)){\n\t\t\t\t\tif(!rseg){\n\t\t\t\t\t\trseg = [];\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\n\t\t\t\t\t}\n\t\t\t\t\trseg.push(value[0]);\n\t\t\t\t}else{\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\n\t\t\t\t\t\trseg = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segments;\n\t\t}\n\t\t\n\t});\n});\n","define([\n\t\"dojo/_base/lang\",\n\t\"dojox/lang/functional\",\n\t\"./common\"\n], function(lang, df, common){\n\t\n\tvar commonStacked = lang.getObject(\"dojox.charting.plot2d.commonStacked\", true);\n\treturn lang.mixin(commonStacked, {\n\t\tcollectStats: function(series, isNullValue){\n\t\t\tvar stats = lang.delegate(common.defaultStats);\n\t\t\tfor(var i = 0; i < series.length; ++i){\n\t\t\t\tvar run = series[i];\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\n\t\t\t\t\tvar x, y;\n\t\t\t\t\tif(run.data[j] !== null){\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\" || !run.data[j].hasOwnProperty(\"x\")){\n\t\t\t\t\t\t\ty = commonStacked.getIndexValue(series, i, j, isNullValue)[0];\n\t\t\t\t\t\t\tx = j+1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tx = run.data[j].x;\n\t\t\t\t\t\t\tif(x !== null){\n\t\t\t\t\t\t\t\ty = commonStacked.getValue(series, i, x, isNullValue)[0];\n\t\t\t\t\t\t\t\ty = y != null && y.y ? y.y:null; \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\t\t\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// collect references to non-empty sets\n\t\t\tvar sets = df.filter(values, \"x\"), n = sets.length;\n\t\t\tif(!n){\n\t\t\t\t// nothing to do at all\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\t// stack values\n\t\t\tvar previousSet = {};\n\t\t\tfor(var i = 0; i < n; ++i){\n\t\t\t\tvar extractedSet = sets[i];\n\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\textractedSet[j] = (extractedSet[j] || 0) + (previousSet[j] || 0);\n\t\t\t\t}\n\t\t\t\tpreviousSet = extractedSet;\n\t\t\t}\n\n\t\t\t// transform to pixels\n\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\textractedSet = sets[i];\n\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\textractedSet[j] = this.isNullValue(extractedSet[j]) ? 0 :\n\t\t\t\t\t\ttransform(extractedSet[j]) - baseline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// correct the minimal width\n\t\t\tif(this.opt.minWidth){\n\t\t\t\tvar minWidth = this.opt.minWidth;\n\n\t\t\t\t// unstack\n\t\t\t\tfor(i = n - 1; i; --i){\n\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\tpreviousSet  = sets[i - 1];\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] - previousSet[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// now let's go over all values and correct them, if needed\n\t\t\t\tvar min = extractedSet.min, max = extractedSet.max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\n\t\t\t\t\t// find a total length of stack\n\t\t\t\t\tvar sum = 0, counter = 0;\n\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\tvar value = sets[i][j];\n\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t++counter;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(sum <= counter * minWidth){\n\t\t\t\t\t\t// the corner case: all values are very small\n\t\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\t\tvalue = sets[i][j];\n\t\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\t\tsets[i][j] = minWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\t// next stack\n\t\t\t\t\t}\n\n\t\t\t\t\t// distributing overflow up\n\t\t\t\t\tvar overflow = 0;\n\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\t\tvalue = extractedSet[j];\n\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\tif(value < minWidth){\n\t\t\t\t\t\t\t\toverflow += minWidth - value;\n\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t}else if(overflow > 0){\n\t\t\t\t\t\t\t\t// calculate available space\n\t\t\t\t\t\t\t\tvar available = extractedSet[j] - minWidth;\n\t\t\t\t\t\t\t\tif(available >= overflow){\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\n\t\t\t\t\t\t\t\t\toverflow = 0;\n\t\t\t\t\t\t\t\t}else if(available > 0){\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t\t\toverflow -= available;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// distributing overflow down, if any\n\t\t\t\t\tif(overflow > 0){\n\t\t\t\t\t\tfor(i = n - 1; i >= 0; --i){\n\t\t\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\t\t\tvalue = extractedSet[j];\n\t\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\t\t// calculate available space\n\t\t\t\t\t\t\t\tavailable = extractedSet[j] - minWidth;\n\t\t\t\t\t\t\t\tif(available >= overflow){\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(available > 0){\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t\t\toverflow -= available;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// stack\n\t\t\t\tfor(i = 1; i < n; ++i){\n\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\tpreviousSet  = sets[i - 1];\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] + previousSet[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn values;\n\t\t},\n\t\t\n\t\tgetIndexValue: function(series, i, index, isNullValue){\n\t\t\tvar value = 0, v, j, pvalue;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tif(series[j].hidden){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpvalue = value;\n\t\t\t\tv = series[j].data[index];\n\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\tif(isNaN(v)){ v = v.y || 0; }\n\t\t\t\t\tvalue += v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [value , pvalue];\n\t\t},\n\t\t\n\t\tgetValue: function(series, i, x, isNullValue){\n\t\t\tvar value = null, j, z, v, pvalue;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tif(series[j].hidden){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(z = 0; z < series[j].data.length; z++){\n\t\t\t\t\tpvalue = value;\n\t\t\t\t\tv = series[j].data[z];\n\t\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\t\tif(v.x == x){\n\t\t\t\t\t\t\tif(!value){\n\t\t\t\t\t\t\t\tvalue = {x: x};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(v.y != null){\n\t\t\t\t\t\t\t\tif(value.y == null){\n\t\t\t\t\t\t\t\t\tvalue.y = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue.y += v.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(v.x > x){break;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [value, pvalue];\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\tvar alwaysFalse = function(){ return false; };\n\n\treturn declare(\"dojox.charting.plot2d.Columns\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a column chart (vertical bars).\n\t\tdefaultParams: {\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\n\t\t\tanimate: null,  // animate bars into place\n\t\t\tenableCache: false\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal column width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal column width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:  null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a columns chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\tcreateRect: function(run, creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\n\t\t\t\trect = run._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Columns\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tbaseline = Math.max(this._vScaler.bounds.lower,\n\t\t\t\t\tthis._vAxis ? this._vAxis.naturalBaseline : 0),\n\t\t\t\tbaselineHeight = vt(baseline),\n\t\t\t\tevents = this.events(),\n\t\t\t\tbar = this.getBarProperties();\n\n\t\t\tvar z = this.series.length;\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){z--;}});\n\n\t\t\t// Collect and calculate  all values\n\t\t\tvar extractedValues = this.extractValues(this._hScaler);\n\t\t\textractedValues = this.rearrangeValues(extractedValues, vt, baselineHeight);\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\n\t\t\t\t\trun._rectUsePool = [];\n\t\t\t\t}\n\t\t\t\tvar theme = t.next(\"column\", [this.opt, run]),\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tz--;\n\n\t\t\t\ts = run.group;\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0;\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(value)){\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\n\t\t\t\t\t\t\tvv = vt(val.y),\n\t\t\t\t\t\t\th = extractedValues[i][j],\n\t\t\t\t\t\t\tfinalTheme,\n\t\t\t\t\t\t\tsshape;\n\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"column\", tMixin, true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"column\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(bar.width >= 1){\n\t\t\t\t\t\t\tvar rect = {\n\t\t\t\t\t\t\t\tx: offsets.l + ht(val.x + 0.5) + bar.gap + bar.thickness * z,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - baselineHeight - Math.max(h, 0),\n\t\t\t\t\t\t\t\twidth: bar.width,\n\t\t\t\t\t\t\t\theight: Math.abs(h)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\n\t\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\t\tthis._animateColumn(sshape, dim.height - offsets.b + baselineHeight, h);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tthis.overrideShape(shape, {index: j, value: val});\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"column\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\t\t\tshadow:  sshape,\n\t\t\t\t\t\t\t\t\tcx:      val.x + 0.5,\n\t\t\t\t\t\t\t\t\tcy:      val.y,\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if val.py is here, this means we are stacking and we need to subtract previous\n\t\t\t\t\t\t\t// value to get the high in which we will lay out the label\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\n\t\t\t\t\t\t\t\trect.height = h - vt(val.py);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateColumn(shape, dim.height - offsets.b - baselineHeight, h);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Columns\n\t\t},\n\t\tgetValue: function(value, j, seriesIndex, indexed){\n\t\t\tvar y,x;\n\t\t\tif(indexed){\n\t\t\t\tif(typeof value == \"number\"){\n\t\t\t\t\ty = value;\n\t\t\t\t}else{\n\t\t\t\t\ty = value.y;\n\t\t\t\t}\n\t\t\t\tx = j;\n\t\t\t}else{\n\t\t\t\ty = value.y;\n\t\t\t\tx = value.x - 1;\n\t\t\t}\n\t\t\treturn { x: x, y: y };\n\t\t},\n\t\textractValues: function(scaler){\n\t\t\tvar extracted = [];\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t\t}),\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\n\t\t\t\t\textractedSet = extracted[i] = [];\n\t\t\t\textractedSet.min = min;\n\t\t\t\textractedSet.max = max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn extracted;\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// transform to pixels\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\n\t\t\t\tvar extractedSet = values[i];\n\t\t\t\tif(extractedSet){\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\tvar value = extractedSet[j];\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn v(0.5) || h(value);\n\t\t\t}\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\n\t\t},\n\t\tgetBarProperties: function(){\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\treturn {gap: f.gap, width: f.size, thickness: 0};\n\t\t},\n\t\t_animateColumn: function(shape, voffset, vsize){\n\t\t\tif(vsize===0){\n\t\t\t\tvsize = 1;\n\t\t\t}\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\"dojox/gfx/fx\", \"dojox/lang/utils\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\"], \n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, fx, du, df, dfr){\n\t\t\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__BarCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\n\t\t// summary:\n\t\t//\t\tAdditional keyword arguments for bar charts.\n\t\n\t\t// minBarSize: Number?\n\t\t//\t\tThe minimum size for a bar in pixels.  Default is 1.\n\t\tminBarSize: 1,\n\t\n\t\t// maxBarSize: Number?\n\t\t//\t\tThe maximum size for a bar in pixels.  Default is 1.\n\t\tmaxBarSize: 1,\n\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any series on the plot.\n\t\tstroke:\t\t{},\n\n\t\t// outline: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\n\t\toutline:\t{},\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot.\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t \t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t \t//\t\tbe required for this to work.\n\t \tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// font: String?\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\n\t\tfont:\t\t\"\",\n\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\n\t\tfontColor:\t\"\",\n\t\t\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the bars rect are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false\n\t});\n\t=====*/\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\t\n\tvar alwaysFalse = function(){ return false; }\n\n\treturn declare(\"dojox.charting.plot2d.Bars\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a bar chart (horizontal bars).\n\t\tdefaultParams: {\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\n\t\t\tanimate: null,   // animate bars into place\n\t\t\tenableCache: false\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal bar width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal bar width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:\t    {},\n\t\t\tstyleFunc:  null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a bar chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\")), t;\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\n\t\t\treturn stats; // Object\n\t\t},\n\t\t\n\t\tcreateRect: function(run, creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\n\t\t\t\trect = run._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\n\t\tcreateLabel: function(group, value, bbox, theme){\n\t\t\tif(this.opt.labels && this.opt.labelStyle == \"outside\"){\n\t\t\t\tvar y = bbox.y + bbox.height / 2;\n\t\t\t\tvar x = bbox.x + bbox.width + this.opt.labelOffset;\n\t\t\t\tthis.renderLabel(group, x, y, this._getLabel(isNaN(value.y)?value:value.y), theme, \"start\");\n          \t}else{\n\t\t\t\tthis.inherited(arguments);\n\t\t\t}\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Bars\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets); // dojox/charting/plot2d/Bars\n\t\t\t}\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tthis.resetEvents();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tbaseline = Math.max(this._hScaler.bounds.lower,\n\t\t\t\t\tthis._hAxis ? this._hAxis.naturalBaseline : 0),\t\t\t\t\n\t\t\t\tbaselineWidth = ht(baseline),\n\t\t\t\tevents = this.events();\n\t\t\tvar bar = this.getBarProperties();\n\n\t\t\tvar actualLength = this.series.length;\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){actualLength--;}});\n\t\t\tvar z = actualLength;\n\t\t\t\n\t\t\t// Collect and calculate all values\n\t\t\tvar extractedValues = this.extractValues(this._vScaler);\n\t\t\textractedValues = this.rearrangeValues(extractedValues, ht, baselineWidth);\n\t\t\t\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\n\t\t\t\t\trun._rectUsePool = [];\n\t\t\t\t}\n\t\t\t\tvar theme = t.next(\"bar\", [this.opt, run]);\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tz--;\n\n\t\t\t\tvar\teventSeries = new Array(run.data.length);\n\t\t\t\ts = run.group;\t\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._vScaler.bounds.from - 1)):0;\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._vScaler.bounds.to)):run.data.length;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(value)){\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\n\t\t\t\t\t\t\tw = extractedValues[i][j], finalTheme, sshape;\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"bar\", tMixin, true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"bar\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(w && bar.height >= 1){\n\t\t\t\t\t\t\tvar rect = {\n\t\t\t\t\t\t\t\tx: offsets.l + baselineWidth + Math.min(w, 0),\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(val.x + 1.5) + bar.gap + bar.thickness * (actualLength - z - 1),\n\t\t\t\t\t\t\t\twidth: Math.abs(w),\n\t\t\t\t\t\t\t\theight: bar.height\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\n\t\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\t\tthis._animateBar(sshape, offsets.l + baselineWidth, -w);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"bar\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\t\t\tshadow:\t sshape,\n\t\t\t\t\t\t\t\t\tcx:      val.y,\n\t\t\t\t\t\t\t\t\tcy:      val.x + 1.5,\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\n\t\t\t\t\t\t\t\trect.x += ht(val.py);\n\t\t\t\t\t\t\t\trect.width -= ht(val.py);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBar(shape, offsets.l + baselineWidth, -Math.abs(w));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bars\n\t\t},\n\t\tgetValue: function(value, j, seriesIndex, indexed){\n\t\t\tvar y, x;\n\t\t\tif(indexed){\n\t\t\t\tif(typeof value == \"number\"){\n\t\t\t\t\ty = value;\n\t\t\t\t}else{\n\t\t\t\t\ty = value.y;\n\t\t\t\t}\n\t\t\t\tx = j;\n\t\t\t}else{\n\t\t\t\ty = value.y;\n\t\t\t\tx = value.x -1;\n\t\t\t}\n\t\t\treturn {y:y, x:x};\n\t\t},\n\t\textractValues: function(scaler){\n\t\t\tvar extracted = [];\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t\t}),\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\n\t\t\t\t\textractedSet = extracted[i] = [];\n\t\t\t\textractedSet.min = min;\n\t\t\t\textractedSet.max = max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn extracted;\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// transform to pixels\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\n\t\t\t\tvar extractedSet = values[i];\n\t\t\t\tif(extractedSet){\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\tvar value = extractedSet[j];\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn v(0.5) || h(value);\n\t\t\t}\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\n\t\t},\t\t\n\t\tgetBarProperties: function(){\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt);\n\t\t\treturn {gap: f.gap, height: f.size, thickness: 0};\n\t\t},\n\t\t_animateBar: function(shape, hoffset, hsize){\n\t\t\tif(hsize==0){\n\t\t\t\thsize = 1;\n\t\t\t}\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [hoffset - (hoffset/hsize), 0], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1/hsize, 1], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n","define([\"./_base\", \"dojo/_base/lang\",\"dojo/_base/declare\", \"./matrix\", \"./shape\"],\n\tfunction(g, lang, declare, matrix, shapeLib){\n\n\t// module:\n\t//\t\tdojox/gfx/path\n\n\tvar Path = declare(\"dojox.gfx.path.Path\", shapeLib.Shape, {\n\t\t// summary:\n\t\t//\t\ta generalized path shape\n\n\t\tconstructor: function(rawNode){\n\t\t\t// summary:\n\t\t\t//\t\ta path constructor\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM node to be used by this path object\n\t\t\tthis.shape = lang.clone(g.defaultPath);\n\t\t\tthis.segments = [];\n\t\t\tthis.tbbox = null;\n\t\t\tthis.absolute = true;\n\t\t\tthis.last = {};\n\t\t\tthis.rawNode = rawNode;\n\t\t\tthis.segmented = false;\n\t\t},\n\n\t\t// mode manipulations\n\t\tsetAbsoluteMode: function(mode){\n\t\t\t// summary:\n\t\t\t//\t\tsets an absolute or relative mode for path points\n\t\t\t// mode: Boolean\n\t\t\t//\t\ttrue/false or \"absolute\"/\"relative\" to specify the mode\n\t\t\tthis._confirmSegmented();\n\t\t\tthis.absolute = typeof mode == \"string\" ? (mode == \"absolute\") : mode;\n\t\t\treturn this; // self\n\t\t},\n\t\tgetAbsoluteMode: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a current value of the absolute mode\n\t\t\tthis._confirmSegmented();\n\t\t\treturn this.absolute; // Boolean\n\t\t},\n\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box {x, y, width, height} or null\n\t\t\tthis._confirmSegmented();\n\t\t\treturn (this.bbox && (\"l\" in this.bbox)) ? {x: this.bbox.l, y: this.bbox.t, width: this.bbox.r - this.bbox.l, height: this.bbox.b - this.bbox.t} : null; // dojox/gfx.Rectangle\n\t\t},\n\n\t\t_getRealBBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of four points or null\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\n\t\t\tthis._confirmSegmented();\n\t\t\tif(this.tbbox){\n\t\t\t\treturn this.tbbox;\t// Array\n\t\t\t}\n\t\t\tvar bbox = this.bbox, matrix = this._getRealMatrix();\n\t\t\tthis.bbox = null;\n\t\t\tfor(var i = 0, len = this.segments.length; i < len; ++i){\n\t\t\t\tthis._updateWithSegment(this.segments[i], matrix);\n\t\t\t}\n\t\t\tvar t = this.bbox;\n\t\t\tthis.bbox = bbox;\n\t\t\tthis.tbbox = t ? [\n\t\t\t\t{x: t.l, y: t.t},\n\t\t\t\t{x: t.r, y: t.t},\n\t\t\t\t{x: t.r, y: t.b},\n\t\t\t\t{x: t.l, y: t.b}\n\t\t\t] : null;\n\t\t\treturn this.tbbox;\t// Array\n\t\t},\n\n\t\tgetLastPosition: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the last point in the path, or null\n\t\t\tthis._confirmSegmented();\n\t\t\treturn \"x\" in this.last ? this.last : null; // Object\n\t\t},\n\n\t\t_applyTransform: function(){\n\t\t\tthis.tbbox = null;\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\n\t\t// segment interpretation\n\t\t_updateBBox: function(x, y, m){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the bounding box of path with new point\n\t\t\t// x: Number\n\t\t\t//\t\tan x coordinate\n\t\t\t// y: Number\n\t\t\t//\t\ta y coordinate\n\n\t\t\tif(m){\n\t\t\t\tvar t = matrix.multiplyPoint(m, x, y);\n\t\t\t\tx = t.x;\n\t\t\t\ty = t.y;\n\t\t\t}\n\n\t\t\t// we use {l, b, r, t} representation of a bbox\n\t\t\tif(this.bbox && (\"l\" in this.bbox)){\n\t\t\t\tif(this.bbox.l > x) this.bbox.l = x;\n\t\t\t\tif(this.bbox.r < x) this.bbox.r = x;\n\t\t\t\tif(this.bbox.t > y) this.bbox.t = y;\n\t\t\t\tif(this.bbox.b < y) this.bbox.b = y;\n\t\t\t}else{\n\t\t\t\tthis.bbox = {l: x, b: y, r: x, t: y};\n\t\t\t}\n\t\t},\n\t\t_updateWithSegment: function(segment, matrix){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the bounding box of path with new segment\n\t\t\t// segment: Object\n\t\t\t//\t\ta segment\n\t\t\tvar n = segment.args, l = n.length, i;\n\t\t\t// update internal variables: bbox, absolute, last\n\t\t\tswitch(segment.action){\n\t\t\t\tcase \"M\":\n\t\t\t\tcase \"L\":\n\t\t\t\tcase \"C\":\n\t\t\t\tcase \"S\":\n\t\t\t\tcase \"Q\":\n\t\t\t\tcase \"T\":\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(n[i], n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 2];\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"H\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(n[i], this.last.y, matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"V\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x, n[i], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tvar start = 0;\n\t\t\t\t\tif(!(\"x\" in this.last)){\n\t\t\t\t\t\tthis._updateBBox(this.last.x = n[0], this.last.y = n[1], matrix);\n\t\t\t\t\t\tstart = 2;\n\t\t\t\t\t}\n\t\t\t\t\tfor(i = start; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\tcase \"t\":\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y, matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x, this.last.y += n[i], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tfor(i = 0; i < l; i += 6){\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i + 2], this.last.y + n[i + 3], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 4], this.last.y += n[i + 5], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\tcase \"q\":\n\t\t\t\t\tfor(i = 0; i < l; i += 4){\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 2], this.last.y += n[i + 3], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"A\":\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\n\t\t\t\t\t\tthis._updateBBox(n[i + 5], n[i + 6], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 2];\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"a\":\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 5], this.last.y += n[i + 6], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// add an SVG path segment\n\t\t\tvar path = [segment.action];\n\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\tpath.push(g.formatNumber(n[i], true));\n\t\t\t}\n\t\t\tif(typeof this.shape.path == \"string\"){\n\t\t\t\tthis.shape.path += path.join(\"\");\n\t\t\t}else{\n\t\t\t\tfor(i = 0, l = path.length; i < l; ++i){\n\t\t\t\t\tthis.shape.path.push(path[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// a dictionary, which maps segment type codes to a number of their arguments\n\t\t_validSegments: {m: 2, l: 2, h: 1, v: 1, c: 6, s: 4, q: 4, t: 2, a: 7, z: 0},\n\n\t\t_pushSegment: function(action, args){\n\t\t\t// summary:\n\t\t\t//\t\tadds a segment\n\t\t\t// action: String\n\t\t\t//\t\tvalid SVG code for a segment's type\n\t\t\t// args: Array\n\t\t\t//\t\ta list of parameters for this segment\n\t\t\tthis.tbbox = null;\n\t\t\tvar group = this._validSegments[action.toLowerCase()], segment;\n\t\t\tif(typeof group == \"number\"){\n\t\t\t\tif(group){\n\t\t\t\t\tif(args.length >= group){\n\t\t\t\t\t\tsegment = {action: action, args: args.slice(0, args.length - args.length % group)};\n\t\t\t\t\t\tthis.segments.push(segment);\n\t\t\t\t\t\tthis._updateWithSegment(segment);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsegment = {action: action, args: []};\n\t\t\t\t\tthis.segments.push(segment);\n\t\t\t\t\tthis._updateWithSegment(segment);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_collectArgs: function(array, args){\n\t\t\t// summary:\n\t\t\t//\t\tconverts an array of arguments to plain numeric values\n\t\t\t// array: Array\n\t\t\t//\t\tan output argument (array of numbers)\n\t\t\t// args: Array\n\t\t\t//\t\tan input argument (can be values of Boolean, Number, dojox/gfx.Point, or an embedded array of them)\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tvar t = args[i];\n\t\t\t\tif(typeof t == \"boolean\"){\n\t\t\t\t\tarray.push(t ? 1 : 0);\n\t\t\t\t}else if(typeof t == \"number\"){\n\t\t\t\t\tarray.push(t);\n\t\t\t\t}else if(t instanceof Array){\n\t\t\t\t\tthis._collectArgs(array, t);\n\t\t\t\t}else if(\"x\" in t && \"y\" in t){\n\t\t\t\t\tarray.push(t.x, t.y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// segments\n\t\tmoveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a move segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"M\" : \"m\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tlineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"L\" : \"l\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\thLineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a horizontal line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"H\" : \"h\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tvLineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a vertical line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"V\" : \"v\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tcurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"C\" : \"c\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tsmoothCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a smooth curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"S\" : \"s\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tqCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a quadratic curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"Q\" : \"q\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tqSmoothCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a quadratic smooth curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"T\" : \"t\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tarcTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms an elliptic arc segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"A\" : \"a\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tclosePath: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcloses a path\n\t\t\tthis._confirmSegmented();\n\t\t\tthis._pushSegment(\"Z\", []);\n\t\t\treturn this; // self\n\t\t},\n\n\t\t_confirmSegmented: function() {\n\t\t\tif (!this.segmented) {\n\t\t\t\tvar path = this.shape.path;\n\t\t\t\t// switch to non-updating version of path building\n\t\t\t\tthis.shape.path = [];\n\t\t\t\tthis._setPath(path);\n\t\t\t\t// switch back to the string path\n\t\t\t\tthis.shape.path = this.shape.path.join(\"\");\n\t\t\t\t// become segmented\n\t\t\t\tthis.segmented = true;\n\t\t\t}\n\t\t},\n\n\t\t// setShape\n\t\t_setPath: function(path){\n\t\t\t// summary:\n\t\t\t//\t\tforms a path using an SVG path string\n\t\t\t// path: String\n\t\t\t//\t\tan SVG path string\n\t\t\tvar p = lang.isArray(path) ? path : path.match(g.pathSvgRegExp);\n\t\t\tthis.segments = [];\n\t\t\tthis.absolute = true;\n\t\t\tthis.bbox = {};\n\t\t\tthis.last = {};\n\t\t\tif(!p) return;\n\t\t\t// create segments\n\t\t\tvar action = \"\",\t// current action\n\t\t\t\targs = [],\t\t// current arguments\n\t\t\t\tl = p.length;\n\t\t\tfor(var i = 0; i < l; ++i){\n\t\t\t\tvar t = p[i], x = parseFloat(t);\n\t\t\t\tif(isNaN(x)){\n\t\t\t\t\tif(action){\n\t\t\t\t\t\tthis._pushSegment(action, args);\n\t\t\t\t\t}\n\t\t\t\t\targs = [];\n\t\t\t\t\taction = t;\n\t\t\t\t}else{\n\t\t\t\t\targs.push(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._pushSegment(action, args);\n\t\t},\n\t\tsetShape: function(newShape){\n\t\t\t// summary:\n\t\t\t//\t\tforms a path using a shape\n\t\t\t// newShape: Object\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\n\t\t\tthis.inherited(arguments, [typeof newShape == \"string\" ? {path: newShape} : newShape]);\n\n\t\t\tthis.segmented = false;\n\t\t\tthis.segments = [];\n\t\t\tif(!g.lazyPathSegmentation){\n\t\t\t\tthis._confirmSegmented();\n\t\t\t}\n\t\t\treturn this; // self\n\t\t},\n\n\t\t// useful constant for descendants\n\t\t_2PI: Math.PI * 2\n\t});\n\n\tvar TextPath = declare(\"dojox.gfx.path.TextPath\", Path, {\n\t\t// summary:\n\t\t//\t\ta generalized TextPath shape\n\n\t\tconstructor: function(rawNode){\n\t\t\t// summary:\n\t\t\t//\t\ta TextPath shape constructor\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM node to be used by this TextPath object\n\t\t\tif(!(\"text\" in this)){\n\t\t\t\tthis.text = lang.clone(g.defaultTextPath);\n\t\t\t}\n\t\t\tif(!(\"fontStyle\" in this)){\n\t\t\t\tthis.fontStyle = lang.clone(g.defaultFont);\n\t\t\t}\n\t\t},\n\t\tgetText: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current text object or null\n\t\t\treturn this.text;\t// Object\n\t\t},\n\t\tsetText: function(newText){\n\t\t\t// summary:\n\t\t\t//\t\tsets a text to be drawn along the path\n\t\t\tthis.text = g.makeParameters(this.text,\n\t\t\t\ttypeof newText == \"string\" ? {text: newText} : newText);\n\t\t\tthis._setText();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetFont: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current font object or null\n\t\t\treturn this.fontStyle;\t// Object\n\t\t},\n\t\tsetFont: function(newFont){\n\t\t\t// summary:\n\t\t\t//\t\tsets a font for text\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ?\n\t\t\t\tg.splitFontString(newFont) :\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\n\t\t\tthis._setFont();\n\t\t\treturn this;\t// self\n\t\t}\n\t});\n\n\t/*=====\n\tg.Path = Path;\n\tg.TextPath = TextPath;\n\t=====*/\n\n\treturn g.path = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Path API.\n\t\t//\t\tPath command format follows the W3C SVG 1.0 Path api.\n\n\t\tPath: Path,\n\t\tTextPath: TextPath\n\t};\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/_base/declare\",\"dojo/_base/Color\", \"dojox/lang/utils\", \"dojox/gfx/gradutils\"],\n\tfunction(lang, arr, declare, Color, dlu, dgg){\n\t\n\tvar SimpleTheme = declare(\"dojox.charting.SimpleTheme\", null, {\n\t// summary:\n\t//\t\tA SimpleTheme or Theme is a pre-defined object, primarily JSON-based, that makes up the definitions to\n\t//\t\tstyle a chart.\n\t//\n\t// description:\n\t//\t\tWhile you can set up style definitions on a chart directly (usually through the various add methods\n\t//\t\ton a dojox.charting.Chart object), a Theme simplifies this manual setup by allowing you to\n\t//\t\tpre-define all of the various visual parameters of each element in a chart.\n\t//\n\t//\t\tMost of the properties of a Theme are straight-forward; if something is line-based (such as\n\t//\t\tan axis or the ticks on an axis), they will be defined using basic stroke parameters.  Likewise,\n\t//\t\tif an element is primarily block-based (such as the background of a chart), it will be primarily\n\t//\t\tfill-based.\n\t//\n\t//\t\tIn addition (for convenience), a Theme definition does not have to contain the entire JSON-based\n\t//\t\tstructure.  Each theme is built on top of a default theme (which serves as the basis for the theme\n\t//\t\t\"GreySkies\"), and is mixed into the default theme object.  This allows you to create a theme based,\n\t//\t\tsay, solely on colors for data series.\n\t//\n\t//\t\tDefining a new theme is relatively easy; see any of the themes in dojox.charting.themes for examples\n\t//\t\ton how to define your own.\n\t//\n\t//\t\tWhen you set a theme on a chart, the theme itself is deep-cloned.  This means that you cannot alter\n\t//\t\tthe theme itself after setting the theme value on a chart, and expect it to change your chart.  If you\n\t//\t\tare looking to make alterations to a theme for a chart, the suggestion would be to create your own\n\t//\t\ttheme, based on the one you want to use, that makes those alterations before it is applied to a chart.\n\t//\n\t//\t\tFinally, a Theme contains a number of functions to facilitate rendering operations on a chart--the main\n\t//\t\thelper of which is the ~next~ method, in which a chart asks for the information for the next data series\n\t//\t\tto be rendered.\n\t//\n\t//\t\tA note on colors:\n\t//\t\tA theme palette is usually comprised of 5 different color definitions, and\n\t//\t\tno more.  If you have a need to render a chart with more than 5 data elements, you can simply \"push\"\n\t//\t\tnew color definitions into the theme's .color array.  Make sure that you do that with the actual\n\t//\t\ttheme object from a Chart, and not in the theme itself (i.e. either do that before using .setTheme\n\t//\t\ton a chart).\n\t//\n\t// example:\n\t//\t\tThe default theme (and structure) looks like so:\n\t//\t|\t// all objects are structs used directly in dojox.gfx\n\t//\t|\tchart:{\n\t//\t|\t\tmargins: {l: 10, t: 10, r: 10, b: 10},\n\t//\t|\t\tstroke: null,\n\t//\t|\t\tfill: \"white\",\n\t//\t|\t\tpageStyle: null // suggested page style as an object suitable for dojo.style()\n\t//\t|\t},\n\t//\t|\tplotarea:{\n\t//\t|\t\tstroke: null,\n\t//\t|\t\tfill: \"white\"\n\t//\t|\t},\n\t//\t|\taxis:{\n\t//\t|\t\tstroke:\t{ // the axis itself\n\t//\t|\t\t\tcolor: \"#333\",\n\t//\t|\t\t\twidth: 1\n\t//\t|\t\t},\n\t//\t|\t\ttick: {\t// used as a foundation for all ticks\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\tposition:  \"center\",\n\t//\t|\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\n\t//\t|\t\t\tfontColor: \"#333\"\t\t\t\t\t\t\t\t// color of labels\n\t//\t|\t\t},\n\t//\t|\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\n\t//\t|\t\t\twidth:  1,\n\t//\t|\t\t\tlength: 6\n\t//\t|\t\t},\n\t//\t|\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t//\t|\t\t\twidth:  0.8,\n\t//\t|\t\t\tlength: 3\n\t//\t|\t\t},\n\t//\t|\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t//\t|\t\t\twidth:  0.5,\n\t//\t|\t\t\tlength: 1\n\t//\t|\t\t},\n\t//\t|\t\ttitle: {\n\t//\t|\t\t\tgap:  15,\n\t//\t|\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\n\t//\t|\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\n\t//\t|\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\n\t//\t|\t\t}\n\t//\t|\t},\n\t//\t|\tseries: {\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t//\t|\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t//\t|\t\t//filter:  dojox/gfx/filters.createFilter(),\n\t//\t|\t\tfilter: null,\t\t\t\t\t\t\t\t// no filter, to use a filter you must use gfx SVG render and require dojox/gfx/svgext\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t// color of labels\n\t//\t|\t\tlabelWiring: {width: 1, color: \"#ccc\"},\t\t// connect marker and target data item(slice, column, bar...)\n\t//\t|\t},\n\t//\t|\tmarker: {\t// any markers on a series\n\t//\t|\t\tsymbol:  \"m-3,3 l3,-6 3,6 z\",\t\t\t\t// symbol\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\n\t//\t|\t\tfontColor: \"#000\"\n\t//\t|\t},\n\t//\t|\tgrid: {\t// grid, when not present axis tick strokes are used instead\n\t//\t|\t\tmajorLine: {\t// major grid line\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\twidth:  1,\n\t//\t|\t\t\tlength: 6\n\t//\t|\t\t},\n\t//\t|\t\tminorLine: {\t// minor grid line\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\twidth:  0.8,\n\t//\t|\t\t\tlength: 3\n\t//\t|\t\t},\n\t//\t|\t\tfill: \"grey\",  // every other stripe\n\t//\t|\t\talternateFill: \"grey\" // alternate stripe\n\t//\t|\t},\n\t//\t|\tindicator: {\n\t//\t|\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t//\t|\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t// line outline\n\t//\t|\t\tlineShadow: null,\t\t\t\t\t\t\t\t// no line shadow\n\t//\t|\t\tlineFill: null,\t\t\t\t\t\t\t\t\t// fill between lines for dual indicators\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\t// label background stroke\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\t// label background outline\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t\t// no label background shadow\n\t//\t|\t\tfill:  \"#ccc\",\t\t\t\t\t\t\t\t\t// label background fill\n\t//\t|\t\tradius: 3,\t\t\t\t\t\t\t\t\t\t// radius of the label background\n\t//\t|\t\tfont:    \"normal normal normal 10pt Tahoma\",\t// label font\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t\t// label color\n\t//\t|\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t// marker fill\n\t//\t|\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t// marker symbol\n\t//\t|\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t// marker stroke\n\t//\t|\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t// marker outline\n\t//\t|\t\tmarkerShadow: null\t\t\t\t\t\t\t\t// no marker shadow\n\t//\t|\t},\n\t//\t|\tpieInnerRadius: 33\n\t//\n\t// example:\n\t//\t\tDefining a new theme is pretty simple:\n\t//\t|\tvar Grasslands = new SimpleTheme({\n\t//\t|\t\tcolors: [ \"#70803a\", \"#dde574\", \"#788062\", \"#b1cc5d\", \"#eff2c2\" ],\n\t//\t|\t\tpieInnerRadius: 15\n\t//\t|\t});\n\t//\t|\n\t//\t|\tmyChart.setTheme(Grasslands);\n\n\tshapeSpaces: {shape: 1, shapeX: 1, shapeY: 1},\n\n\tconstructor: function(kwArgs){\n\t\t// summary:\n\t\t//\t\tInitialize a theme using the keyword arguments.  Note that the arguments\n\t\t//\t\tlook like the example (above), and may include a few more parameters.\n\t\tkwArgs = kwArgs || {};\n\n\t\t// populate theme with defaults updating them if needed\n\t\tvar def = SimpleTheme.defaultTheme;\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\n\t\t\tthis[name] = lang.delegate(def[name], kwArgs[name]);\n\t\t}, this);\n\n\t\t// personalize theme\n\t\tif(kwArgs.seriesThemes && kwArgs.seriesThemes.length){\n\t\t\tthis.colors  = null;\n\t\t\tthis.seriesThemes = kwArgs.seriesThemes.slice(0);\n\t\t}else{\n\t\t\tthis.seriesThemes = null;\n\t\t\tthis.colors = (kwArgs.colors || SimpleTheme.defaultColors).slice(0);\n\t\t}\n\t\tthis.markerThemes = null;\n\t\tif(kwArgs.markerThemes && kwArgs.markerThemes.length){\n\t\t\tthis.markerThemes = kwArgs.markerThemes.slice(0);\n\t\t}\n\t\tthis.markers = kwArgs.markers ? lang.clone(kwArgs.markers) : lang.delegate(SimpleTheme.defaultMarkers);\n\n\t\t// set flags\n\t\tthis.noGradConv = kwArgs.noGradConv;\n\t\tthis.noRadialConv = kwArgs.noRadialConv;\n\t\tif(kwArgs.reverseFills){\n\t\t\tthis.reverseFills();\n\t\t}\n\n\t\t//\tprivate housekeeping\n\t\tthis._current = 0;\n\t\tthis._buildMarkerArray();\n\t},\n\n\tclone: function(){\n\t\t// summary:\n\t\t//\t\tClone the current theme.\n\t\t// returns: dojox.charting.SimpleTheme\n\t\t//\t\tThe cloned theme; any alterations made will not affect the original.\n\t\tvar theme = new this.constructor({\n\t\t\t// theme components\n\t\t\tchart: this.chart,\n\t\t\tplotarea: this.plotarea,\n\t\t\taxis: this.axis,\n\t\t\tgrid: this.grid,\n\t\t\tseries: this.series,\n\t\t\tmarker: this.marker,\n\t\t\t// individual arrays\n\t\t\tcolors: this.colors,\n\t\t\tmarkers: this.markers,\n\t\t\tindicator: this.indicator,\n\t\t\tseriesThemes: this.seriesThemes,\n\t\t\tmarkerThemes: this.markerThemes,\n\t\t\t// flags\n\t\t\tnoGradConv: this.noGradConv,\n\t\t\tnoRadialConv: this.noRadialConv,\n\t\t\tpieInnerRadius: this.pieInnerRadius\n\t\t});\n\t\t// copy custom methods\n\t\tarr.forEach(\n\t\t\t[\"clone\", \"clear\", \"next\", \"skip\", \"addMixin\", \"post\", \"getTick\"],\n\t\t\tfunction(name){\n\t\t\t\tif(this.hasOwnProperty(name)){\n\t\t\t\t\ttheme[name] = this[name];\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t\treturn theme;\t//\tdojox.charting.SimpleTheme\n\t},\n\n\tclear: function(){\n\t\t// summary:\n\t\t//\t\tClear and reset the internal pointer to start fresh.\n\t\tthis._current = 0;\n\t},\n\n\tnext: function(elementType, mixin, doPost){\n\t\t// summary:\n\t\t//\t\tGet the next color or series theme.\n\t\t// elementType: String?\n\t\t//\t\tAn optional element type (for use with series themes)\n\t\t// mixin: Object?\n\t\t//\t\tAn optional object to mix into the theme.\n\t\t// doPost: Boolean?\n\t\t//\t\tA flag to post-process the results.\n\t\t// returns: Object\n\t\t//\t\tAn object of the structure { series, marker, symbol }\n\t\tvar merge = dlu.merge, series, marker;\n\t\tif(this.colors){\n\t\t\tseries = lang.delegate(this.series);\n\t\t\tmarker = lang.delegate(this.marker);\n\t\t\tvar color = new Color(this.colors[this._current % this.colors.length]), old;\n\t\t\t// modify the stroke\n\t\t\tif(series.stroke && series.stroke.color){\n\t\t\t\tseries.stroke = lang.delegate(series.stroke);\n\t\t\t\told = new Color(series.stroke.color);\n\t\t\t\tseries.stroke.color = new Color(color);\n\t\t\t\tseries.stroke.color.a = old.a;\n\t\t\t}else{\n\t\t\t\tseries.stroke = {color: color};\n\t\t\t}\n\t\t\tif(marker.stroke && marker.stroke.color){\n\t\t\t\tmarker.stroke = lang.delegate(marker.stroke);\n\t\t\t\told = new Color(marker.stroke.color);\n\t\t\t\tmarker.stroke.color = new Color(color);\n\t\t\t\tmarker.stroke.color.a = old.a;\n\t\t\t}else{\n\t\t\t\tmarker.stroke = {color: color};\n\t\t\t}\n\t\t\t// modify the fill\n\t\t\tif(!series.fill || series.fill.type){\n\t\t\t\tseries.fill = color;\n\t\t\t}else{\n\t\t\t\told = new Color(series.fill);\n\t\t\t\tseries.fill = new Color(color);\n\t\t\t\tseries.fill.a = old.a;\n\t\t\t}\n\t\t\tif(!marker.fill || marker.fill.type){\n\t\t\t\tmarker.fill = color;\n\t\t\t}else{\n\t\t\t\told = new Color(marker.fill);\n\t\t\t\tmarker.fill = new Color(color);\n\t\t\t\tmarker.fill.a = old.a;\n\t\t\t}\n\t\t}else{\n\t\t\tseries = this.seriesThemes ?\n\t\t\t\tmerge(this.series, this.seriesThemes[this._current % this.seriesThemes.length]) :\n\t\t\t\tthis.series;\n\t\t\tmarker = this.markerThemes ?\n\t\t\t\tmerge(this.marker, this.markerThemes[this._current % this.markerThemes.length]) :\n\t\t\t\tseries;\n\t\t}\n\n\t\tvar symbol = marker && marker.symbol || this._markers[this._current % this._markers.length];\n\n\t\tvar theme = {series: series, marker: marker, symbol: symbol};\n\t\t\n\t\t// advance the counter\n\t\t++this._current;\n\n\t\tif(mixin){\n\t\t\ttheme = this.addMixin(theme, elementType, mixin);\n\t\t}\n\t\tif(doPost){\n\t\t\ttheme = this.post(theme, elementType);\n\t\t}\n\n\t\treturn theme;\t//\tObject\n\t},\n\n\tskip: function(){\n\t\t// summary:\n\t\t//\t\tSkip the next internal color.\n\t\t++this._current;\n\t},\n\n\taddMixin: function(theme, elementType, mixin, doPost){\n\t\t// summary:\n\t\t//\t\tAdd a mixin object to the passed theme and process.\n\t\t// theme: dojox/charting/SimpleTheme\n\t\t//\t\tThe theme to mixin to.\n\t\t// elementType: String\n\t\t//\t\tThe type of element in question. Can be \"line\", \"bar\" or \"circle\"\n\t\t// mixin: Object|Array\n\t\t//\t\tThe object or objects to mix into the theme.\n\t\t// doPost: Boolean\n\t\t//\t\tIf true, run the new theme through the post-processor.\n\t\t// returns: dojox/charting/SimpleTheme\n\t\t//\t\tThe new theme.\n\t\tif(lang.isArray(mixin)){\n\t\t\tarr.forEach(mixin, function(m){\n\t\t\t\ttheme = this.addMixin(theme, elementType, m);\n\t\t\t}, this);\n\t\t}else{\n\t\t\tvar t = {};\n\t\t\tif(\"color\" in mixin){\n\t\t\t\tif(elementType == \"line\" || elementType == \"area\"){\n\t\t\t\t\tlang.setObject(\"series.stroke.color\", mixin.color, t);\n\t\t\t\t\tlang.setObject(\"marker.stroke.color\", mixin.color, t);\n\t\t\t\t}else{\n\t\t\t\t\tlang.setObject(\"series.fill\", mixin.color, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.forEach([\"stroke\", \"outline\", \"shadow\", \"fill\", \"filter\", \"font\", \"fontColor\", \"labelWiring\"], function(name){\n\t\t\t\tvar markerName = \"marker\" + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\t\tb = markerName in mixin;\n\t\t\t\tif(name in mixin){\n\t\t\t\t\tlang.setObject(\"series.\" + name, mixin[name], t);\n\t\t\t\t\tif(!b){\n\t\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[name], t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(b){\n\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[markerName], t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(\"marker\" in mixin){\n\t\t\t\tt.symbol = mixin.marker;\n\t\t\t\tt.symbol = mixin.marker;\n\t\t\t}\n\t\t\ttheme = dlu.merge(theme, t);\n\t\t}\n\t\tif(doPost){\n\t\t\ttheme = this.post(theme, elementType);\n\t\t}\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\n\t},\n\n\tpost: function(theme, elementType){\n\t\t// summary:\n\t\t//\t\tProcess any post-shape fills.\n\t\t// theme: dojox/charting/SimpleTheme\n\t\t//\t\tThe theme to post process with.\n\t\t// elementType: String\n\t\t//\t\tThe type of element being filled.  Can be \"bar\" or \"circle\".\n\t\t// returns: dojox/charting/SimpleTheme\n\t\t//\t\tThe post-processed theme.\n\t\tvar fill = theme.series.fill, t;\n\t\tif(!this.noGradConv && this.shapeSpaces[fill.space] && fill.type == \"linear\"){\n\t\t\tif(elementType == \"bar\"){\n\t\t\t\t// transpose start and end points\n\t\t\t\tt = {\n\t\t\t\t\tx1: fill.y1,\n\t\t\t\t\ty1: fill.x1,\n\t\t\t\t\tx2: fill.y2,\n\t\t\t\t\ty2: fill.x2\n\t\t\t\t};\n\t\t\t}else if(!this.noRadialConv && fill.space == \"shape\" && (elementType == \"slice\" || elementType == \"circle\")){\n\t\t\t\t// switch to radial\n\t\t\t\tt = {\n\t\t\t\t\ttype: \"radial\",\n\t\t\t\t\tcx: 0,\n\t\t\t\t\tcy: 0,\n\t\t\t\t\tr:  100\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(t){\n\t\t\t\treturn dlu.merge(theme, {series: {fill: t}});\n\t\t\t}\n\t\t}\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\n\t},\n\n\tgetTick: function(name, mixin){\n\t\t// summary:\n\t\t//\t\tCalculates and merges tick parameters.\n\t\t// name: String\n\t\t//\t\tTick name, can be \"major\", \"minor\", or \"micro\".\n\t\t// mixin: Object?\n\t\t//\t\tOptional object to mix in to the tick.\n\t\tvar tick = this.axis.tick, tickName = name + \"Tick\",\n\t\t\tmerge = dlu.merge;\n\t\tif(tick){\n\t\t\tif(this.axis[tickName]){\n\t\t\t\ttick = merge(tick, this.axis[tickName]);\n\t\t\t}\n\t\t}else{\n\t\t\ttick = this.axis[tickName];\n\t\t}\n\t\tif(mixin){\n\t\t\tif(tick){\n\t\t\t\tif(mixin[tickName]){\n\t\t\t\t\ttick = merge(tick, mixin[tickName]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ttick = mixin[tickName];\n\t\t\t}\n\t\t}\n\t\treturn tick;\t//\tObject\n\t},\n\n\tinspectObjects: function(f){\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\n\t\t\tf(this[name]);\n\t\t}, this);\n\t\tif(this.seriesThemes){\n\t\t\tarr.forEach(this.seriesThemes, f);\n\t\t}\n\t\tif(this.markerThemes){\n\t\t\tarr.forEach(this.markerThemes, f);\n\t\t}\n\t},\n\n\treverseFills: function(){\n\t\tthis.inspectObjects(function(o){\n\t\t\tif(o && o.fill){\n\t\t\t\to.fill = dgg.reverse(o.fill);\n\t\t\t}\n\t\t});\n\t},\n\n\taddMarker:function(/*String*/ name, /*String*/ segment){\n\t\t// summary:\n\t\t//\t\tAdd a custom marker to this theme.\n\t\t// example:\n\t\t//\t|\tmyTheme.addMarker(\"Ellipse\", foo);\n\t\tthis.markers[name] = segment;\n\t\tthis._buildMarkerArray();\n\t},\n\n\tsetMarkers:function(/*Object*/ obj){\n\t\t// summary:\n\t\t//\t\tSet all the markers of this theme at once.  obj should be a\n\t\t//\t\tdictionary of keys and path segments.\n\t\t//\n\t\t// example:\n\t\t//\t|\tmyTheme.setMarkers({ \"CIRCLE\": foo });\n\t\tthis.markers = obj;\n\t\tthis._buildMarkerArray();\n\t},\n\n\t_buildMarkerArray: function(){\n\t\tthis._markers = [];\n\t\tfor(var p in this.markers){\n\t\t\tthis._markers.push(this.markers[p]);\n\t\t}\n\t}\n});\n\nlang.mixin(SimpleTheme, {\n\tdefaultMarkers: {\n\t\tCIRCLE:   \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\n\t\tSQUARE:   \"m-3,-3 l0,6 6,0 0,-6 z\",\n\t\tDIAMOND:  \"m0,-3 l3,3 -3,3 -3,-3 z\",\n\t\tCROSS:    \"m0,-3 l0,6 m-3,-3 l6,0\",\n\t\tX:        \"m-3,-3 l6,6 m0,-6 l-6,6\",\n\t\tTRIANGLE: \"m-3,3 l3,-6 3,6 z\",\n\t\tTRIANGLE_INVERTED: \"m-3,-3 l3,6 3,-6 z\"\n\t},\n\n\tdefaultColors:[\n\t\t// gray skies\n\t\t\"#54544c\", \"#858e94\", \"#6e767a\", \"#948585\", \"#474747\"\n\t],\n\n\tdefaultTheme: {\n\t\t// all objects are structs used directly in dojox.gfx\n\t\tchart:{\n\t\t\tstroke: null,\n\t\t\tfill: \"white\",\n\t\t\tpageStyle: null,\n\t\t\ttitleGap:\t\t20,\n\t\t\ttitlePos:\t\t\"top\",\n\t\t\ttitleFont:      \"normal normal bold 14pt Tahoma\",\t// chart title\n\t\t\ttitleFontColor: \"#333\",\n\t\t\ttitleAlign: \"middle\"\n\t\t},\n\t\tplotarea:{\n\t\t\tstroke: null,\n\t\t\tfill: \"white\"\n\t\t},\n\t\t// TODO: label rotation on axis\n\t\taxis:{\n\t\t\tstroke:\t{ // the axis itself\n\t\t\t\tcolor: \"#333\",\n\t\t\t\twidth: 1\n\t\t\t},\n\t\t\ttick: {\t// used as a foundation for all ticks\n\t\t\t\tcolor:     \"#666\",\n\t\t\t\tposition:  \"center\",\n\t\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t\t// color of labels\n\t\t\t\tlabelGap:  4                                    // gap between a tick and its label in pixels\n\t\t\t},\n\t\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\n\t\t\t\twidth:  1,\n\t\t\t\tlength: 6\n\t\t\t},\n\t\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t\t\t\twidth:  0.8,\n\t\t\t\tlength: 3\n\t\t\t},\n\t\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t\t\t\twidth:  0.5,\n\t\t\t\tlength: 1\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tgap:  15,\n\t\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\n\t\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\n\t\t\t}\n\t\t},\n\t\tseries: {\n\t\t\t// used as a \"main\" theme for series, sThemes augment it\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t// color of labels\n\t\t\tlabelWiring: {width: 1, color: \"#ccc\"}\t\t// connect marker and target data item(slice, column, bar...)\n\t\t},\n\t\tmarker: {\t// any markers on a series\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\n\t\t\tfontColor: \"#000\"\n\t\t},\n\t\tindicator: {\n\t\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tlineShadow: null,\n\t\t\tlineFill: null,\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t\n\t\t\tfill : \"#ccc\",\n\t\t\tradius: 3,\n\t\t\tfont:    \"normal normal normal 10pt Tahoma\",\t\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t\n\t\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t\n\t\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t\t\t\n\t\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tmarkerShadow: null\t\t\t\t\t\t\t\t\n\t\t}\n\t}\n});\n\nreturn SimpleTheme;\n});\n","// Various generic utilities to deal with a linear gradient\n\ndefine([\"./_base\", \"dojo/_base/lang\", \"./matrix\", \"dojo/_base/Color\"], \n  function(g, lang, m, Color){\n  \n\tvar gradutils = g.gradutils = {};\n\n\tfunction findColor(o, c){\n\t\tif(o <= 0){\n\t\t\treturn c[0].color;\n\t\t}\n\t\tvar len = c.length;\n\t\tif(o >= 1){\n\t\t\treturn c[len - 1].color;\n\t\t}\n\t\t//TODO: use binary search\n\t\tfor(var i = 0; i < len; ++i){\n\t\t\tvar stop = c[i];\n\t\t\tif(stop.offset >= o){\n\t\t\t\tif(i){\n\t\t\t\t\tvar prev = c[i - 1];\n\t\t\t\t\treturn Color.blendColors(new Color(prev.color), new Color(stop.color),\n\t\t\t\t\t\t(o - prev.offset) / (stop.offset - prev.offset));\n\t\t\t\t}\n\t\t\t\treturn stop.color;\n\t\t\t}\n\t\t}\n\t\treturn c[len - 1].color;\n\t}\n\n\tgradutils.getColor = function(fill, pt){\n\t\t// summary:\n\t\t//\t\tsample a color from a gradient using a point\n\t\t// fill: Object\n\t\t//\t\tfill object\n\t\t// pt: dojox/gfx.Point\n\t\t//\t\tpoint where to sample a color\n\t\tvar o;\n\t\tif(fill){\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tvar angle = Math.atan2(fill.y2 - fill.y1, fill.x2 - fill.x1),\n\t\t\t\t\t\trotation = m.rotate(-angle),\n\t\t\t\t\t\tprojection = m.project(fill.x2 - fill.x1, fill.y2 - fill.y1),\n\t\t\t\t\t\tp = m.multiplyPoint(projection, pt),\n\t\t\t\t\t\tpf1 = m.multiplyPoint(projection, fill.x1, fill.y1),\n\t\t\t\t\t\tpf2 = m.multiplyPoint(projection, fill.x2, fill.y2),\n\t\t\t\t\t\tscale = m.multiplyPoint(rotation, pf2.x - pf1.x, pf2.y - pf1.y).x;\n\t\t\t\t\to = m.multiplyPoint(rotation, p.x - pf1.x, p.y - pf1.y).x / scale;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tvar dx = pt.x - fill.cx, dy = pt.y - fill.cy;\n\t\t\t\t\to = Math.sqrt(dx * dx + dy * dy) / fill.r;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn findColor(o, fill.colors);\t// dojo/_base/Color\n\t\t}\n\t\t// simple color\n\t\treturn new Color(fill || [0, 0, 0, 0]);\t// dojo/_base/Color\n\t};\n\n\tgradutils.reverse = function(fill){\n\t\t// summary:\n\t\t//\t\treverses a gradient\n\t\t// fill: Object\n\t\t//\t\tfill object\n\t\tif(fill){\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tfill = lang.delegate(fill);\n\t\t\t\t\tif(fill.colors){\n\t\t\t\t\t\tvar c = fill.colors, l = c.length, i = 0, stop,\n\t\t\t\t\t\t\tn = fill.colors = new Array(c.length);\n\t\t\t\t\t\tfor(; i < l; ++i){\n\t\t\t\t\t\t\tstop = c[i];\n\t\t\t\t\t\t\tn[i] = {\n\t\t\t\t\t\t\t\toffset: 1 - stop.offset,\n\t\t\t\t\t\t\t\tcolor:  stop.color\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn.sort(function(a, b){ return a.offset - b.offset; });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn fill;\t// Object\n\t};\n\n\treturn gradutils;\n});\n","define([\"./kernel\", \"../dom\", \"../dom-style\", \"../dom-attr\", \"../dom-prop\", \"../dom-class\", \"../dom-construct\", \"../dom-geometry\"], function(dojo, dom, style, attr, prop, cls, ctr, geom){\n\t// module:\n\t//\t\tdojo/dom\n\n\t/*=====\n\treturn {\n\t\t// summary:\n\t\t//\t\tThis module is a stub for the core dojo DOM API.\n\t};\n\t=====*/\n\n\t// mix-in dom\n\tdojo.byId = dom.byId;\n\tdojo.isDescendant = dom.isDescendant;\n\tdojo.setSelectable = dom.setSelectable;\n\n\t// mix-in dom-attr\n\tdojo.getAttr = attr.get;\n\tdojo.setAttr = attr.set;\n\tdojo.hasAttr = attr.has;\n\tdojo.removeAttr = attr.remove;\n\tdojo.getNodeProp = attr.getNodeProp;\n\n\tdojo.attr = function(node, name, value){\n\t\t// summary:\n\t\t//\t\tGets or sets an attribute on an HTML element.\n\t\t// description:\n\t\t//\t\tHandles normalized getting and setting of attributes on DOM\n\t\t//\t\tNodes. If 2 arguments are passed, and a the second argument is a\n\t\t//\t\tstring, acts as a getter.\n\t\t//\n\t\t//\t\tIf a third argument is passed, or if the second argument is a\n\t\t//\t\tmap of attributes, acts as a setter.\n\t\t//\n\t\t//\t\tWhen passing functions as values, note that they will not be\n\t\t//\t\tdirectly assigned to slots on the node, but rather the default\n\t\t//\t\tbehavior will be removed and the new behavior will be added\n\t\t//\t\tusing `dojo.connect()`, meaning that event handler properties\n\t\t//\t\twill be normalized and that some caveats with regards to\n\t\t//\t\tnon-standard behaviors for onsubmit apply. Namely that you\n\t\t//\t\tshould cancel form submission using `dojo.stopEvent()` on the\n\t\t//\t\tpassed event object instead of returning a boolean value from\n\t\t//\t\tthe handler itself.\n\t\t// node: DOMNode|String\n\t\t//\t\tid or reference to the element to get or set the attribute on\n\t\t// name: String|Object\n\t\t//\t\tthe name of the attribute to get or set.\n\t\t// value: String?\n\t\t//\t\tThe value to set for the attribute\n\t\t// returns:\n\t\t//\t\twhen used as a getter, the value of the requested attribute\n\t\t//\t\tor null if that attribute does not have a specified or\n\t\t//\t\tdefault value;\n\t\t//\n\t\t//\t\twhen used as a setter, the DOM node\n\t\t//\n\t\t// example:\n\t\t//\t|\t// get the current value of the \"foo\" attribute on a node\n\t\t//\t|\tdojo.attr(dojo.byId(\"nodeId\"), \"foo\");\n\t\t//\t|\t// or we can just pass the id:\n\t\t//\t|\tdojo.attr(\"nodeId\", \"foo\");\n\t\t//\n\t\t// example:\n\t\t//\t|\t// use attr() to set the tab index\n\t\t//\t|\tdojo.attr(\"nodeId\", \"tabIndex\", 3);\n\t\t//\t|\n\t\t//\n\t\t// example:\n\t\t//\tSet multiple values at once, including event handlers:\n\t\t//\t|\tdojo.attr(\"formId\", {\n\t\t//\t|\t\t\"foo\": \"bar\",\n\t\t//\t|\t\t\"tabIndex\": -1,\n\t\t//\t|\t\t\"method\": \"POST\",\n\t\t//\t|\t\t\"onsubmit\": function(e){\n\t\t//\t|\t\t\t// stop submitting the form. Note that the IE behavior\n\t\t//\t|\t\t\t// of returning true or false will have no effect here\n\t\t//\t|\t\t\t// since our handler is connect()ed to the built-in\n\t\t//\t|\t\t\t// onsubmit behavior and so we need to use\n\t\t//\t|\t\t\t// dojo.stopEvent() to ensure that the submission\n\t\t//\t|\t\t\t// doesn't proceed.\n\t\t//\t|\t\t\tdojo.stopEvent(e);\n\t\t//\t|\n\t\t//\t|\t\t\t// submit the form with Ajax\n\t\t//\t|\t\t\tdojo.xhrPost({ form: \"formId\" });\n\t\t//\t|\t\t}\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\tStyle is s special case: Only set with an object hash of styles\n\t\t//\t|\tdojo.attr(\"someNode\",{\n\t\t//\t|\t\tid:\"bar\",\n\t\t//\t|\t\tstyle:{\n\t\t//\t|\t\t\twidth:\"200px\", height:\"100px\", color:\"#000\"\n\t\t//\t|\t\t}\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\tAgain, only set style as an object hash of styles:\n\t\t//\t|\tvar obj = { color:\"#fff\", backgroundColor:\"#000\" };\n\t\t//\t|\tdojo.attr(\"someNode\", \"style\", obj);\n\t\t//\t|\n\t\t//\t|\t// though shorter to use `dojo.style()` in this case:\n\t\t//\t|\tdojo.style(\"someNode\", obj);\n\n\t\tif(arguments.length == 2){\n\t\t\treturn attr[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\n\t\t}\n\t\treturn attr.set(node, name, value);\n\t};\n\n\t// mix-in dom-class\n\tdojo.hasClass = cls.contains;\n\tdojo.addClass = cls.add;\n\tdojo.removeClass = cls.remove;\n\tdojo.toggleClass = cls.toggle;\n\tdojo.replaceClass = cls.replace;\n\n\t// mix-in dom-construct\n\tdojo._toDom = dojo.toDom = ctr.toDom;\n\tdojo.place = ctr.place;\n\tdojo.create = ctr.create;\n\tdojo.empty = function(node){ ctr.empty(node); };\n\tdojo._destroyElement = dojo.destroy = function(node){ ctr.destroy(node); };\n\n\t// mix-in dom-geometry\n\tdojo._getPadExtents = dojo.getPadExtents = geom.getPadExtents;\n\tdojo._getBorderExtents = dojo.getBorderExtents = geom.getBorderExtents;\n\tdojo._getPadBorderExtents = dojo.getPadBorderExtents = geom.getPadBorderExtents;\n\tdojo._getMarginExtents = dojo.getMarginExtents = geom.getMarginExtents;\n\tdojo._getMarginSize = dojo.getMarginSize = geom.getMarginSize;\n\tdojo._getMarginBox = dojo.getMarginBox = geom.getMarginBox;\n\tdojo.setMarginBox = geom.setMarginBox;\n\tdojo._getContentBox = dojo.getContentBox = geom.getContentBox;\n\tdojo.setContentSize = geom.setContentSize;\n\tdojo._isBodyLtr = dojo.isBodyLtr = geom.isBodyLtr;\n\tdojo._docScroll = dojo.docScroll = geom.docScroll;\n\tdojo._getIeDocumentElementOffset = dojo.getIeDocumentElementOffset = geom.getIeDocumentElementOffset;\n\tdojo._fixIeBiDiScrollLeft = dojo.fixIeBiDiScrollLeft = geom.fixIeBiDiScrollLeft;\n\tdojo.position = geom.position;\n\n\tdojo.marginBox = function marginBox(/*DomNode|String*/node, /*Object?*/box){\n\t\t// summary:\n\t\t//\t\tGetter/setter for the margin-box of node.\n\t\t// description:\n\t\t//\t\tGetter/setter for the margin-box of node.\n\t\t//\t\tReturns an object in the expected format of box (regardless\n\t\t//\t\tif box is passed). The object might look like:\n\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\n\t\t//\t\tfor a node offset from its parent 50px to the left, 200px from\n\t\t//\t\tthe top with a margin width of 300px and a margin-height of\n\t\t//\t\t150px.\n\t\t// node:\n\t\t//\t\tid or reference to DOM Node to get/set box for\n\t\t// box:\n\t\t//\t\tIf passed, denotes that dojo.marginBox() should\n\t\t//\t\tupdate/set the margin box for node. Box is an object in the\n\t\t//\t\tabove format. All properties are optional if passed.\n\t\t// example:\n\t\t//\t\tRetrieve the margin box of a passed node\n\t\t//\t|\tvar box = dojo.marginBox(\"someNodeId\");\n\t\t//\t|\tconsole.dir(box);\n\t\t//\n\t\t// example:\n\t\t//\t\tSet a node's margin box to the size of another node\n\t\t//\t|\tvar box = dojo.marginBox(\"someNodeId\");\n\t\t//\t|\tdojo.marginBox(\"someOtherNode\", box);\n\t\treturn box ? geom.setMarginBox(node, box) : geom.getMarginBox(node); // Object\n\t};\n\n\tdojo.contentBox = function contentBox(/*DomNode|String*/node, /*Object?*/box){\n\t\t// summary:\n\t\t//\t\tGetter/setter for the content-box of node.\n\t\t// description:\n\t\t//\t\tReturns an object in the expected format of box (regardless if box is passed).\n\t\t//\t\tThe object might look like:\n\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\n\t\t//\t\tfor a node offset from its parent 50px to the left, 200px from\n\t\t//\t\tthe top with a content width of 300px and a content-height of\n\t\t//\t\t150px. Note that the content box may have a much larger border\n\t\t//\t\tor margin box, depending on the box model currently in use and\n\t\t//\t\tCSS values set/inherited for node.\n\t\t//\t\tWhile the getter will return top and left values, the\n\t\t//\t\tsetter only accepts setting the width and height.\n\t\t// node:\n\t\t//\t\tid or reference to DOM Node to get/set box for\n\t\t// box:\n\t\t//\t\tIf passed, denotes that dojo.contentBox() should\n\t\t//\t\tupdate/set the content box for node. Box is an object in the\n\t\t//\t\tabove format, but only w (width) and h (height) are supported.\n\t\t//\t\tAll properties are optional if passed.\n\t\treturn box ? geom.setContentSize(node, box) : geom.getContentBox(node); // Object\n\t};\n\n\tdojo.coords = function(/*DomNode|String*/node, /*Boolean?*/includeScroll){\n\t\t// summary:\n\t\t//\t\tDeprecated: Use position() for border-box x/y/w/h\n\t\t//\t\tor marginBox() for margin-box w/h/l/t.\n\t\t//\n\t\t//\t\tReturns an object that measures margin-box (w)idth/(h)eight\n\t\t//\t\tand absolute position x/y of the border-box. Also returned\n\t\t//\t\tis computed (l)eft and (t)op values in pixels from the\n\t\t//\t\tnode's offsetParent as returned from marginBox().\n\t\t//\t\tReturn value will be in the form:\n\t\t//|\t\t\t{ l: 50, t: 200, w: 300: h: 150, x: 100, y: 300 }\n\t\t//\t\tDoes not act as a setter. If includeScroll is passed, the x and\n\t\t//\t\ty params are affected as one would expect in dojo.position().\n\t\tdojo.deprecated(\"dojo.coords()\", \"Use dojo.position() or dojo.marginBox().\");\n\t\tnode = dom.byId(node);\n\t\tvar s = style.getComputedStyle(node), mb = geom.getMarginBox(node, s);\n\t\tvar abs = geom.position(node, includeScroll);\n\t\tmb.x = abs.x;\n\t\tmb.y = abs.y;\n\t\treturn mb;\t// Object\n\t};\n\n\t// mix-in dom-prop\n\tdojo.getProp = prop.get;\n\tdojo.setProp = prop.set;\n\n\tdojo.prop = function(/*DomNode|String*/node, /*String|Object*/name, /*String?*/value){\n\t\t// summary:\n\t\t//\t\tGets or sets a property on an HTML element.\n\t\t// description:\n\t\t//\t\tHandles normalized getting and setting of properties on DOM\n\t\t//\t\tNodes. If 2 arguments are passed, and a the second argument is a\n\t\t//\t\tstring, acts as a getter.\n\t\t//\n\t\t//\t\tIf a third argument is passed, or if the second argument is a\n\t\t//\t\tmap of attributes, acts as a setter.\n\t\t//\n\t\t//\t\tWhen passing functions as values, note that they will not be\n\t\t//\t\tdirectly assigned to slots on the node, but rather the default\n\t\t//\t\tbehavior will be removed and the new behavior will be added\n\t\t//\t\tusing `dojo.connect()`, meaning that event handler properties\n\t\t//\t\twill be normalized and that some caveats with regards to\n\t\t//\t\tnon-standard behaviors for onsubmit apply. Namely that you\n\t\t//\t\tshould cancel form submission using `dojo.stopEvent()` on the\n\t\t//\t\tpassed event object instead of returning a boolean value from\n\t\t//\t\tthe handler itself.\n\t\t// node:\n\t\t//\t\tid or reference to the element to get or set the property on\n\t\t// name:\n\t\t//\t\tthe name of the property to get or set.\n\t\t// value:\n\t\t//\t\tThe value to set for the property\n\t\t// returns:\n\t\t//\t\twhen used as a getter, the value of the requested property\n\t\t//\t\tor null if that attribute does not have a specified or\n\t\t//\t\tdefault value;\n\t\t//\n\t\t//\t\twhen used as a setter, the DOM node\n\t\t//\n\t\t// example:\n\t\t//\t|\t// get the current value of the \"foo\" property on a node\n\t\t//\t|\tdojo.prop(dojo.byId(\"nodeId\"), \"foo\");\n\t\t//\t|\t// or we can just pass the id:\n\t\t//\t|\tdojo.prop(\"nodeId\", \"foo\");\n\t\t//\n\t\t// example:\n\t\t//\t|\t// use prop() to set the tab index\n\t\t//\t|\tdojo.prop(\"nodeId\", \"tabIndex\", 3);\n\t\t//\t|\n\t\t//\n\t\t// example:\n\t\t//\tSet multiple values at once, including event handlers:\n\t\t//\t|\tdojo.prop(\"formId\", {\n\t\t//\t|\t\t\"foo\": \"bar\",\n\t\t//\t|\t\t\"tabIndex\": -1,\n\t\t//\t|\t\t\"method\": \"POST\",\n\t\t//\t|\t\t\"onsubmit\": function(e){\n\t\t//\t|\t\t\t// stop submitting the form. Note that the IE behavior\n\t\t//\t|\t\t\t// of returning true or false will have no effect here\n\t\t//\t|\t\t\t// since our handler is connect()ed to the built-in\n\t\t//\t|\t\t\t// onsubmit behavior and so we need to use\n\t\t//\t|\t\t\t// dojo.stopEvent() to ensure that the submission\n\t\t//\t|\t\t\t// doesn't proceed.\n\t\t//\t|\t\t\tdojo.stopEvent(e);\n\t\t//\t|\n\t\t//\t|\t\t\t// submit the form with Ajax\n\t\t//\t|\t\t\tdojo.xhrPost({ form: \"formId\" });\n\t\t//\t|\t\t}\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tStyle is s special case: Only set with an object hash of styles\n\t\t//\t|\tdojo.prop(\"someNode\",{\n\t\t//\t|\t\tid:\"bar\",\n\t\t//\t|\t\tstyle:{\n\t\t//\t|\t\t\twidth:\"200px\", height:\"100px\", color:\"#000\"\n\t\t//\t|\t\t}\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tAgain, only set style as an object hash of styles:\n\t\t//\t|\tvar obj = { color:\"#fff\", backgroundColor:\"#000\" };\n\t\t//\t|\tdojo.prop(\"someNode\", \"style\", obj);\n\t\t//\t|\n\t\t//\t|\t// though shorter to use `dojo.style()` in this case:\n\t\t//\t|\tdojo.style(\"someNode\", obj);\n\n\t\tif(arguments.length == 2){\n\t\t\treturn prop[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\n\t\t}\n\t\t// setter\n\t\treturn prop.set(node, name, value);\n\t};\n\n\t// mix-in dom-style\n\tdojo.getStyle = style.get;\n\tdojo.setStyle = style.set;\n\tdojo.getComputedStyle = style.getComputedStyle;\n\tdojo.__toPixelValue = dojo.toPixelValue = style.toPixelValue;\n\n\tdojo.style = function(node, name, value){\n\t\t// summary:\n\t\t//\t\tAccesses styles on a node. If 2 arguments are\n\t\t//\t\tpassed, acts as a getter. If 3 arguments are passed, acts\n\t\t//\t\tas a setter.\n\t\t// description:\n\t\t//\t\tGetting the style value uses the computed style for the node, so the value\n\t\t//\t\twill be a calculated value, not just the immediate node.style value.\n\t\t//\t\tAlso when getting values, use specific style names,\n\t\t//\t\tlike \"borderBottomWidth\" instead of \"border\" since compound values like\n\t\t//\t\t\"border\" are not necessarily reflected as expected.\n\t\t//\t\tIf you want to get node dimensions, use `dojo.marginBox()`,\n\t\t//\t\t`dojo.contentBox()` or `dojo.position()`.\n\t\t// node: DOMNode|String\n\t\t//\t\tid or reference to node to get/set style for\n\t\t// name: String|Object?\n\t\t//\t\tthe style property to set in DOM-accessor format\n\t\t//\t\t(\"borderWidth\", not \"border-width\") or an object with key/value\n\t\t//\t\tpairs suitable for setting each property.\n\t\t// value: String?\n\t\t//\t\tIf passed, sets value on the node for style, handling\n\t\t//\t\tcross-browser concerns.  When setting a pixel value,\n\t\t//\t\tbe sure to include \"px\" in the value. For instance, top: \"200px\".\n\t\t//\t\tOtherwise, in some cases, some browsers will not apply the style.\n\t\t// returns:\n\t\t//\t\twhen used as a getter, return the computed style of the node if passing in an ID or node,\n\t\t//\t\tor return the normalized, computed value for the property when passing in a node and a style property\n\t\t// example:\n\t\t//\t\tPassing only an ID or node returns the computed style object of\n\t\t//\t\tthe node:\n\t\t//\t|\tdojo.style(\"thinger\");\n\t\t// example:\n\t\t//\t\tPassing a node and a style property returns the current\n\t\t//\t\tnormalized, computed value for that property:\n\t\t//\t|\tdojo.style(\"thinger\", \"opacity\"); // 1 by default\n\t\t//\n\t\t// example:\n\t\t//\t\tPassing a node, a style property, and a value changes the\n\t\t//\t\tcurrent display of the node and returns the new computed value\n\t\t//\t|\tdojo.style(\"thinger\", \"opacity\", 0.5); // == 0.5\n\t\t//\n\t\t// example:\n\t\t//\t\tPassing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node:\n\t\t//\t|\tdojo.style(\"thinger\", {\n\t\t//\t|\t\t\"opacity\": 0.5,\n\t\t//\t|\t\t\"border\": \"3px solid black\",\n\t\t//\t|\t\t\"height\": \"300px\"\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tWhen the CSS style property is hyphenated, the JavaScript property is camelCased.\n\t\t//\t\tfont-size becomes fontSize, and so on.\n\t\t//\t|\tdojo.style(\"thinger\",{\n\t\t//\t|\t\tfontSize:\"14pt\",\n\t\t//\t|\t\tletterSpacing:\"1.2em\"\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tdojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling\n\t\t//\t\tdojo.style() on every element of the list. See: `dojo/query` and `dojo/NodeList`\n\t\t//\t|\tdojo.query(\".someClassName\").style(\"visibility\",\"hidden\");\n\t\t//\t|\t// or\n\t\t//\t|\tdojo.query(\"#baz > div\").style({\n\t\t//\t|\t\topacity:0.75,\n\t\t//\t|\t\tfontSize:\"13pt\"\n\t\t//\t|\t});\n\n\t\tswitch(arguments.length){\n\t\t\tcase 1:\n\t\t\t\treturn style.get(node);\n\t\t\tcase 2:\n\t\t\t\treturn style[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\n\t\t}\n\t\t// setter\n\t\treturn style.set(node, name, value);\n\t};\n\n\treturn dojo;\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/Stateful\"],\n  function(lang,declare,Stateful) {\n\tlang.getObject(\"string\", true, dojox);\n\n\tvar BidiEngine = declare(\"dojox.string.BidiEngine\", Stateful, {\n\t\t// summary:\n\t\t//\t\tThis class provides a bidi transformation engine, i.e.\n\t\t//\t\tfunctions for reordering and shaping bidi text.\n\t\t// description:\n\t\t//\t\tBidi stands for support for languages with a bidirectional script.\n\t\t//\n\t\t//\t\tUsually Unicode Bidi Algorithm used by OS platform (and web browsers) is capable of properly\n\t\t//\t\ttransforming Bidi text and as a result it is adequately displayed on the screen.\n\t\t//\t\tHowever, in some situations, Unicode Bidi Algorithm is not invoked or is not properly applied.\n\t\t//\t\tThis may occur in situation in which software responsible for rendering the text is not leveraging\n\t\t//\t\tUnicode Bidi Algorithm implemented by OS (e.g. GFX renderers).\n\t\t//\n\t\t//\t\tBidi engine provided in this class implements Unicode Bidi Algorithm as specified at\n\t\t//\t\thttp://www.unicode.org/reports/tr9/.\n\t\t//\n\t\t//\t\tFor more information on basic Bidi concepts please read\n\t\t//\t\t\"Bidirectional script support - A primer\" available from\n\t\t//\t\thttp://www.ibm.com/developerworks/websphere/library/techarticles/bidi/bidigen.html.\n\t\t//\n\t\t//\t\tAs of February 2011, Bidi engine has following limitations:\n\t\t//\n\t\t//\t\t1. No support for following numeric shaping options:\n\t\t//\t\t\t- H - Hindi,\n\t\t//\t\t\t- C - Contextual,\n\t\t//\t\t\t- N - Nominal.\n\t\t//\t\t2. No support for following shaping options:\n\t\t//\t\t\t- I - Initial shaping,\n\t\t//\t\t\t- M - Middle shaping,\n\t\t//\t\t\t- F - Final shaping,\n\t\t//\t\t\t- B - Isolated shaping.\n\t\t//\t\t3. No support for LRE/RLE/LRO/RLO/PDF (they are handled like neutrals).\n\t\t//\t\t4. No support for Windows compatibility.\n\t\t//\t\t5. No support for  insert/remove marks.\n\t\t//\t\t6. No support for code pages.\n\t\t//\n\n\t\t// Input Bidi layout in which inputText is passed to the function.\n\t\tinputFormat: \"ILYNN\",\n\n\t\t// Output Bidi layout to which inputText should be transformed.\n\t\toutputFormat: \"VLNNN\",\n\n\t\t// Array, containing positions of each character from the source text in the resulting text.\n\t\tsourceToTarget: [],\n\n\t\t// Array, containing positions of each character from the resulting text in the source text.\n\t\ttargetToSource: [],\n\n\t\t// Array, containing bidi level of each character from the source text\n\t\tlevels: [],\n\n\t\tbidiTransform: function (/*String*/text, /*String*/formatIn, /*String*/formatOut) {\n\t\t\t// summary:\n\t\t\t//\t\tCentral public API for Bidi engine. Transforms the text according to formatIn, formatOut\n\t\t\t//\t\tparameters. If formatIn or formatOut parametrs are not valid throws an exception.\n\t\t\t// inputText:\n\t\t\t//\t\tInput text subject to application of Bidi transformation.\n\t\t\t// formatIn:\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\n\t\t\t// formatOut:\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\n\t\t\t// description:\n\t\t\t//\t\tBoth formatIn and formatOut parameters are 5 letters long strings.\n\t\t\t//\t\tFor example - \"ILYNN\". Each letter is associated with specific attribute of Bidi layout.\n\t\t\t//\t\tPossible and default values for each one of the letters are provided below:\n\t\t\t//\n\t\t\t//\t\tFirst letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t1\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tOrdering Schema.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- I - Implicit (Logical).\n\t\t\t//\t\t\t- V - Visual.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tI\n\t\t\t//\n\t\t\t//\t\tSecond letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t2\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tOrientation.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- L - Left To Right.\n\t\t\t//\t\t\t- R - Right To Left.\n\t\t\t//\t\t\t- C - Contextual Left to Right.\n\t\t\t//\t\t\t- D - Contextual Right to Left.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tL\n\t\t\t//\n\t\t\t//\t\tThird letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t3\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tSymmetric Swapping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- Y - Symmetric swapping is on.\n\t\t\t//\t\t\t- N - Symmetric swapping is off.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tY\n\t\t\t//\n\t\t\t//\t\tFourth letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t4\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tShaping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- S - Text is shaped.\n\t\t\t//\t\t\t- N - Text is not shaped.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tN\n\t\t\t//\n\t\t\t//\t\tFifth letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t5\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tNumeric Shaping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- N - Nominal.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tN\n\t\t\t//\n\t\t\t//\t\tThe output of this function is original text (passed via first argument) transformed from\n\t\t\t//\t\tinput Bidi layout (second argument) to output Bidi layout (last argument).\n\t\t\t//\n\t\t\t//\t\tSample call:\n\t\t\t//\t|\tmytext = bidiTransform(\"HELLO WORLD\", \"ILYNN\", \"VLYNN\");\n\t\t\t//\t\tIn this case, \"HELLO WORLD\" text is transformed from Logical - LTR to Visual - LTR Bidi layout\n\t\t\t//\t\twith default values for symmetric swapping (Yes), shaping (Not shaped) and numeric shaping\n\t\t\t//\t\t(Nominal).\n\t\t\t// returns: String\n\t\t\t//\t\tOriginal text transformed from input Bidi layout (second argument)\n\t\t\t//\t\tto output Bidi layout (last argument).\n\t\t\t//\t\tThrows an exception if the bidi layout strings are not valid.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\n\t\t\tthis.sourceToTarget = [];\n\t\t\tthis.targetToSource = [];\n\t\t\tif (!text) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tinitMaps(this.sourceToTarget, this.targetToSource, text.length);\n\t\t\tif (!this.checkParameters(formatIn, formatOut)) {\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\tformatIn = this.inputFormat;\n\t\t\tformatOut = this.outputFormat;\n\t\t\tvar result = text;\n\t\t\tvar bdx = BDX;\n\t\t\tvar orientIn = getOrientation(formatIn.charAt(1)),\n\t\t\t\torientOut = getOrientation(formatOut.charAt(1)),\n\t\t\t\tosIn = (formatIn.charAt(0) === \"I\") ? \"L\" : formatIn.charAt(0),\n\t\t\t\tosOut = (formatOut.charAt(0) === \"I\") ? \"L\" : formatOut.charAt(0),\n\t\t\t\tinFormat = osIn + orientIn,\n\t\t\t\toutFormat = osOut + orientOut,\n\t\t\t\tswap = formatIn.charAt(2) + formatOut.charAt(2);\n\n\t\t\tbdx.defInFormat = inFormat;\n\t\t\tbdx.defOutFormat = outFormat;\n\t\t\tbdx.defSwap = swap;\n\n\t\t\tvar stage1Text = doBidiReorder(text, inFormat, outFormat, swap, bdx),\n\t\t\t\tisRtl = false;\n\n\t\t\tif (formatOut.charAt(1) === \"R\") {\n\t\t\t\tisRtl = true;\n\t\t\t} else if (formatOut.charAt(1) === \"C\" || formatOut.charAt(1) === \"D\") {\n\t\t\t\tisRtl = this.checkContextual(stage1Text);\n\t\t\t}\n\n\t\t\tthis.sourceToTarget = stMap;\n\t\t\tthis.targetToSource = reverseMap(this.sourceToTarget);\n\t\t\ttsMap = this.targetToSource;\n\n\t\t\tif (formatIn.charAt(3) === formatOut.charAt(3)) {\n\t\t\t\tresult = stage1Text;\n\t\t\t} else if (formatOut.charAt(3) === \"S\") {\n\t\t\t\tresult = shape(isRtl, stage1Text, true);\n\t\t\t} else {  //formatOut.charAt(3) === \"N\"\n\t\t\t\tresult = deshape(stage1Text, isRtl, true);\n\t\t\t}\n\t\t\tthis.sourceToTarget = stMap;\n\t\t\tthis.targetToSource = tsMap;\n\t\t\tthis.levels = lvMap;\n\t\t\treturn result;\n\t\t},\n\n\t\t_inputFormatSetter: function (format) {\n\t\t\tif (!validFormat.test(format)) {\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\n\t\t\t}\n\t\t\tthis.inputFormat = format;\n\t\t},\n\n\t\t_outputFormatSetter: function (format) {\n\t\t\tif (!validFormat.test(format)) {\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\n\t\t\t}\n\t\t\tthis.outputFormat = format;\n\t\t},\n\n\t\tcheckParameters: function (/*String*/formatIn, /*String*/formatOut) {\n\t\t\t// summary:\n\t\t\t//\t\tChecks layout parameters.\n\t\t\t// formatIn:\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\n\t\t\t// formatOut:\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\n\t\t\t// description:\n\t\t\t//\t\tChecks, that layout parameters are different and contain allowed values.\n\t\t\t//\t\tAllowed values for format string are:\n\t\t\t//\t\t\t- 1st letter: I, V\n\t\t\t//\t\t\t- 2nd letter: L, R, C, D\n\t\t\t//\t\t\t- 3rd letter: Y, N\n\t\t\t//\t\t\t- 4th letter: S, N\n\t\t\t//\t\t\t- 5th letter: N\n\t\t\t// returns: /*Boolean*/\n\t\t\t//\t\ttrue - if layout parameters are valid.\n\t\t\t//\t\tfalse - otherwise.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\tif (!formatIn) {\n\t\t\t\tformatIn = this.inputFormat;\n\t\t\t} else {\n\t\t\t\tthis.set(\"inputFormat\", formatIn);\n\t\t\t}\n\t\t\tif (!formatOut) {\n\t\t\t\tformatOut = this.outputFormat;\n\t\t\t} else {\n\t\t\t\tthis.set(\"outputFormat\", formatOut);\n\t\t\t}\n\t\t\tif (formatIn === formatOut) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\tcheckContextual: function (/*String*/text) {\n\t\t\t// summary:\n\t\t\t//\t\tDetermine the base direction of a bidi text according\n\t\t\t//\t\tto its first strong directional character.\n\t\t\t// text:\n\t\t\t//\t\tThe text to check.\n\t\t\t// returns: /*String*/\n\t\t\t//\t\t\"ltr\" or \"rtl\" according to the first strong character.\n\t\t\t//\t\tIf there is no strong character, returns the value of the\n\t\t\t//\t\tdocument dir property.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\t\t\tvar dir = firstStrongDir(text);\n\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\n\t\t\t\ttry {\n\t\t\t\t\tdir = document.dir.toLowerCase();\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\n\t\t\t\t\tdir = \"ltr\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dir;\n\t\t},\n\n\t\thasBidiChar: function (/*String*/text) {\n\t\t\t// summary:\n\t\t\t//\t\tReturn true if text contains RTL directed character.\n\t\t\t// text:\n\t\t\t//\t\tThe source string.\n\t\t\t// description:\n\t\t\t//\t\tSearches for RTL directed character.\n\t\t\t//\t\tReturns true if found, else returns false.\n\t\t\t// returns: /*Boolean*/\n\t\t\t//\t\ttrue - if text has a RTL directed character.\n\t\t\t//\t\tfalse - otherwise.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\n\t\t    return bidiChars.test(text);\n\t\t}\n\t});\n\n\tfunction doBidiReorder(/*String*/text, /*String*/inFormat,\n\t\t\t\t/*String*/outFormat, /*String*/swap, /*Object*/bdx) {\n\t\t// summary:\n\t\t//\t\tReorder the source text according to the bidi attributes\n\t\t//\t\tof source and result.\n\t\t// text:\n\t\t//\t\tThe text to reorder.\n\t\t// inFormat:\n\t\t//\t\tOrdering scheme and base direction of the source text.\n\t\t//\t\tCan be \"LLTR\", \"LRTL\", \"LCLR\", \"LCRL\", \"VLTR\", \"VRTL\",\n\t\t//\t\t\"VCLR\", \"VCRL\".\n\t\t//\t\tThe first letter is \"L\" for logical ordering scheme,\n\t\t//\t\t\"V\" for visual ordering scheme.\n\t\t//\t\tThe other letters specify the base direction.\n\t\t//\t\t\"CLR\" means contextual direction defaulting to LTR if\n\t\t//\t\tthere is no strong letter.\n\t\t//\t\t\"CRL\" means contextual direction defaulting to RTL if\n\t\t//\t\tthere is no strong letter.\n\t\t//\t\tThe initial value is \"LLTR\", if none, the initial value is used.\n\t\t// outFormat:\n\t\t//\t\tRequired ordering scheme and base direction of the\n\t\t//\t\tresult. Has the same format as inFormat.\n\t\t//\t\tIf none, the initial value \"VLTR\" is used.\n\t\t// swap:\n\t\t//\t\tSymmetric swapping attributes of source and result.\n\t\t//\t\tThe allowed values can be \"YN\", \"NY\", \"YY\" and \"NN\".\n\t\t//\t\tThe first letter reflects the symmetric swapping attribute\n\t\t//\t\tof the source, the second letter that of the result.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// returns:\n\t\t//\t\tText reordered according to source and result attributes.\n\n\t\tvar params = prepareReorderingParameters(text, {inFormat: inFormat, outFormat: outFormat, swap: swap}, bdx);\n\t\tif (params.inFormat === params.outFormat) {\n\t\t\treturn text;\n\t\t}\n\t\tinFormat = params.inFormat;\n\t\toutFormat = params.outFormat;\n\t\tswap = params.swap;\n\t\tvar inOrdering = inFormat.substring(0, 1),\n\t\tinOrientation = inFormat.substring(1, 4),\n\t\toutOrdering = outFormat.substring(0, 1),\n\t\toutOrientation = outFormat.substring(1, 4);\n\t\tbdx.inFormat = inFormat;\n\t\tbdx.outFormat = outFormat;\n\t\tbdx.swap = swap;\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VLTR\")) { //core cases\n\t\t\t//cases: LLTR->VLTR, LRTL->VLTR\n\t\t\tif (inOrientation === \"LTR\") {\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\treturn doReorder(text, bdx);\n\t\t\t}\n\t\t\tif (inOrientation === \"RTL\") {\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\treturn doReorder(text, bdx);\n\t\t\t}\n\t\t}\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"V\")) {\n\t\t\t//inOrientation != outOrientation\n\t\t\t//cases: VRTL->VLTR, VLTR->VRTL\n\t\t\tbdx.dir = inOrientation === \"RTL\"? RTL : LTR;\n\t\t\treturn invertStr(text, bdx);\n\t\t}\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VRTL\")) {\n\t\t\t//cases: LLTR->VRTL, LRTL->VRTL\n\t\t\tif (inOrientation === \"LTR\") {\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t} else {\n\t\t\t\t//inOrientation == RTL\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t}\n\t\t\treturn invertStr(text);\n\t\t}\n\t\tif ((inFormat === \"VLTR\") && (outFormat === \"LLTR\")) {\n\t\t\t//case: VLTR->LLTR\n\t\t\tbdx.dir = LTR;\n\t\t\treturn doReorder(text, bdx);\n\t\t}\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"L\") && (inOrientation !== outOrientation)) {\n\t\t\t//cases: VLTR->LRTL, VRTL->LLTR\n\t\t\ttext = invertStr(text);\n\t\t\treturn (inOrientation === \"RTL\") ? doBidiReorder(text, \"LLTR\", \"VLTR\", swap, bdx) :\n\t\t\t\t\t\t\t\t\t\t\t\tdoBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\n\t\t}\n\t\tif ((inFormat === \"VRTL\") && (outFormat === \"LRTL\")) {\n\t\t\t//case VRTL->LRTL\n\t\t\treturn doBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\n\t\t}\n\t\tif ((inOrdering === \"L\") && (outOrdering === \"L\")) {\n\t\t\t//inOrientation != outOrientation\n\t\t\t//cases: LRTL->LLTR, LLTR->LRTL\n\t\t\tvar saveSwap = bdx.swap;\n\t\t\tbdx.swap = saveSwap.substr(0, 1) + \"N\";\n\t\t\tif (inOrientation === \"RTL\") {\n\t\t\t\t//LRTL->LLTR\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t} else { //LLTR->LRTL\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\n\t\t\t\ttext = doBidiReorder(text, \"VLTR\", \"LRTL\", bdx.swap, bdx);\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\t}\n\n\tfunction prepareReorderingParameters(/*String*/text, /*Object*/params, /*Object*/bdx) {\n\t\t// summary:\n\t\t//\t\tPrepare reordering parameters\n\t\t// text:\n\t\t//\t\tThe text to reorder.\n\t\t// params:\n\t\t//      Object, containing reordering parameters:\n\t\t//         - inFormat: Ordering scheme and base direction of the source text.\n\t\t//         - outFormat: Required ordering scheme and base direction of the result.\n\t\t//         - swap: Symmetric swapping attributes of source and result.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// tags:\n\t\t//\t\tprivate\n\n\t\tif (params.inFormat === undefined) {\n\t\t\tparams.inFormat = bdx.defInFormat;\n\t\t}\n\t\tif (params.outFormat === undefined) {\n\t\t\tparams.outFormat = bdx.defOutFormat;\n\t\t}\n\t\tif (params.swap === undefined) {\n\t\t\tparams.swap = bdx.defSwap;\n\t\t}\n\t\tif (params.inFormat === params.outFormat) {\n\t\t\treturn params;\n\t\t}\n\t\tvar dir, inOrdering = params.inFormat.substring(0, 1),\n\t\tinOrientation = params.inFormat.substring(1, 4),\n\t\toutOrdering = params.outFormat.substring(0, 1),\n\t\toutOrientation = params.outFormat.substring(1, 4);\n\t\tif (inOrientation.charAt(0) === \"C\") {\n\t\t\tdir = firstStrongDir(text);\n\t\t\tif (dir === \"ltr\" || dir === \"rtl\") {\n\t\t\t\tinOrientation = dir.toUpperCase();\n\t\t\t} else {\n\t\t\t\tinOrientation = params.inFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\n\t\t\t}\n\t\t\tparams.inFormat = inOrdering + inOrientation;\n\t\t}\n\t\tif (outOrientation.charAt(0) === \"C\") {\n\t\t\tdir = firstStrongDir(text);\n\t\t\tif (dir === \"rtl\") {\n\t\t\t\toutOrientation = \"RTL\";\n\t\t\t} else if (dir === \"ltr\") {\n\t\t\t\tdir = lastStrongDir(text);\n\t\t\t\toutOrientation = dir.toUpperCase();\n\t\t\t} else {\n\t\t\t\toutOrientation = params.outFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\n\t\t\t}\n\t\t\tparams.outFormat = outOrdering + outOrientation;\n\t\t}\n\t\treturn params;\n\t}\n\n\tfunction shape(/*boolean*/rtl, /*String*/text, /*boolean*/compress) {\n\t\t// summary:\n\t\t//\t\tShape the source text.\n\t\t// rtl:\n\t\t//\t\tFlag indicating if the text is in RTL direction (logical\n\t\t//\t\tdirection for Arabic words).\n\t\t// text:\n\t\t//\t\tThe text to shape.\n\t\t// compress:\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\n\t\t//\t\tto decrease the buffer size. This option can be:\n\t\t//\n\t\t//\t\t- true (default) to not insert extra space after compressing Lam+Alef into one character Lamalef\n\t\t//\t\t- false to insert an extra space after compressed Lamalef to preserve the buffer size\n\t\t// returns:\n\t\t//\t\ttext shaped.\n\t\t// tags:\n\t\t//\t\tprivate.\n\n\t\tif (text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (rtl === undefined) {\n\t\t\trtl = true;\n\t\t}\n\t\tif (compress === undefined) {\n\t\t\tcompress = true;\n\t\t}\n\t\ttext = String(text);\n\n\t\tvar str06 = text.split(\"\"),\n\t\t\tIx = 0,\n\t\t\tstep = +1,\n\t\t\tnIEnd = str06.length;\n\t\tif (!rtl) {\n\t\t\tIx = str06.length - 1;\n\t\t\tstep = -1;\n\t\t\tnIEnd = 1;\n\t\t}\n\t\tvar compressArray = doShape(str06, Ix, step, nIEnd, compress);\n\t\tvar outBuf = \"\";\n\t\tfor (var idx = 0; idx < str06.length; idx++) {\n\t\t\tif (!(compress && indexOf(compressArray, compressArray.length, idx) > -1)) {\n\t\t\t\toutBuf += str06[idx];\n\t\t\t} else {\n\t\t\t\tupdateMap(tsMap, idx, !rtl, -1);\n\t\t\t\tstMap.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t\treturn outBuf;\n\t}\n\n\tfunction doShape(str06, Ix, step, nIEnd, compress) {\n\t\t// summary:\n\t\t//\t\tShape the source text.\n\t\t// str06:\n\t\t//\t\tArray containing source text\n\t\t// Ix:\n\t\t//\t\tIndex of the first handled element\n\t\t// step:\n\t\t//\t\tdirection of the process\n\t\t// nIEnd:\n\t\t//\t\tIndex of the last handled element\n\t\t// compress:\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\n\t\t//\t\tto decrease the buffer size.\n\t\t// returns:\n\t\t//\t\tArray, contained shaped text.\n\t\t// tags:\n\t\t//\t\tprivate.\n\n\t\tvar previousCursive = 0, compressArray = [], compressArrayIndx = 0;\n\t\tfor (var index = Ix; index * step < nIEnd; index = index + step) {\n\t\t\tif (isArabicAlefbet(str06[index]) || isArabicDiacritics(str06[index])) {\n\t\t\t\t// Arabic letter Lam\n\t\t\t\tif (str06[index] === \"\\u0644\" && isNextAlef(str06, (index + step), step, nIEnd)) {\n\t\t\t\t\tstr06[index] = (previousCursive === 0) ?\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefInialTableFE) :\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefMedialTableFE);\n\t\t\t\t\tindex += step;\n\t\t\t\t\tsetAlefToSpace(str06, index, step, nIEnd);\n\t\t\t\t\tif (compress) {\n\t\t\t\t\t\tcompressArray[compressArrayIndx] = index;\n\t\t\t\t\t\tcompressArrayIndx++;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousCursive = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar currentChr = str06[index];\n\t\t\t\tif (previousCursive === 1) {\n\t\t\t\t\t// if next is Arabic\n\t\t\t\t\t// Character is in medial form\n\t\t\t\t\t// else character is in final form\n\t\t\t\t\tstr06[index] = (isNextArabic(str06, (index + step), step, nIEnd)) ?\n\t\t\t\t\t\tgetMedialFormCharacterFE(str06[index]) : getFormCharacterFE(str06[index], FinalForm);\n\t\t\t\t} else {\n\t\t\t\t\tif (isNextArabic(str06, (index + step), step, nIEnd) === true) {\n\t\t\t\t\t\t//character is in Initial form\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], InitialForm);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], IsolatedForm);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//exam if the current character is cursive\n\t\t\t\tif (!isArabicDiacritics(currentChr)) {\n\t\t\t\t\tpreviousCursive = 1;\n\t\t\t\t}\n\t\t\t\tif (isStandAlonCharacter(currentChr) === true) {\n\t\t\t\t\tpreviousCursive = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpreviousCursive = 0;\n\t\t\t}\n\t\t}\n\t\treturn compressArray;\n\t}\n\n\tfunction firstStrongDir(/*String*/text) {\n\t\t// summary:\n\t\t//\t\tReturn the first strong character direction\n\t\t// text:\n\t\t//\t\tThe source string.\n\t\t// description:\n\t\t//\t\tSearches for first \"strong\" character.\n\t\t//\t\tReturns if strong character was found with the direction defined by this\n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\n\t\t// returns: String\n\t\t//\t\t\"ltr\" - if the first strong character is Latin.\n\t\t//\t\t\"rtl\" - if the first strong character is RTL directed character.\n\t\t//\t\t\"\" - if the strong character wasn't found.\n\t\t// tags:\n\t\t//\t\tprivate\n\n\t\tvar fdc = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(text);\n\t\t// if found return the direction that defined by the character\n\t\treturn fdc ? (fdc[0] <= \"z\" ? \"ltr\" : \"rtl\") : \"\";\n\t}\n\n\tfunction lastStrongDir(text) {\n\t\t// summary:\n\t\t//\t\tReturn the last strong character direction\n\t\t// text:\n\t\t//\t\tThe source string.\n\t\t// description:\n\t\t//\t\tSearches for first (from the end) \"strong\" character.\n\t\t//\t\tReturns if strong character was found with the direction defined by this\n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tvar chars = text.split(\"\");\n\t\tchars.reverse();\n\t\treturn firstStrongDir(chars.join(\"\"));\n\t}\n\n\tfunction deshape(/*String*/text, /*boolean*/rtl, /*boolean*/consumeNextSpace) {\n\t\t// summary:\n\t\t//\t\tdeshape the source text.\n\t\t// text:\n\t\t//\t\tthe text to be deshape.\n\t\t// rtl:\n\t\t//\t\tflag indicating if the text is in RTL direction (logical\n\t\t//\t\tdirection for Arabic words).\n\t\t// consumeNextSpace:\n\t\t//\t\tflag indicating whether to consume the space next to the\n\t\t//\t\tthe lam alef if there is a space followed the Lamalef character to preserve the buffer size.\n\t\t//\t\tIn case there is no space next to the lam alef the buffer size will be increased due to the\n\t\t//\t\texpansion of the lam alef one character into lam+alef two characters\n\t\t// returns:\n\t\t//\t\ttext deshaped.\n\t\tif (text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (consumeNextSpace === undefined) {\n\t\t\tconsumeNextSpace = true;\n\t\t}\n\t\tif (rtl === undefined) {\n\t\t\trtl = true;\n\t\t}\n\t\ttext = String(text);\n\n\t\tvar outBuf = \"\", strFE = [];\n\t\tstrFE = text.split(\"\");\n\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\tvar increase = false;\n\t\t\tif (strFE[i] >= \"\\uFE70\" && strFE[i] < \"\\uFEFF\") {\n\t\t\t\tvar chNum = text.charCodeAt(i);\n\t\t\t\tif (strFE[i] >= \"\\uFEF5\" && strFE[i] <= \"\\uFEFC\") {\n\t\t\t\t\t//expand the LamAlef\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t//Lam + Alef\n\t\t\t\t\t\tif (i > 0 && consumeNextSpace && strFE[i - 1] === \" \") {\n\t\t\t\t\t\t\toutBuf = outBuf.substring(0, outBuf.length - 1) + \"\\u0644\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutBuf += \"\\u0644\";\n\t\t\t\t\t\t\tincrease = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\n\t\t\t\t\t\toutBuf += \"\\u0644\";\n\t\t\t\t\t\tif (i + 1 < text.length && consumeNextSpace && strFE[i + 1] === \" \") {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tincrease = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (increase) {\n\t\t\t\t\t\tupdateMap(tsMap, i, true, 1);\n\t\t\t\t\t\tstMap.splice(i, 0, stMap[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutBuf += FETo06Table[chNum - 65136];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutBuf += strFE[i];\n\t\t\t}\n\t\t}\n\t\treturn outBuf;\n\t}\n\n\tfunction doReorder(str, bdx) {\n\t\t// summary:\n\t\t//\t\tHelper to the doBidiReorder. Manages the UBA.\n\t\t// str:\n\t\t//\t\tthe string to reorder.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// returns:\n\t\t//\t\ttext reordered according to source and result attributes.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tvar chars = str.split(\"\"), levels = [];\n\n\t\tcomputeLevels(chars, levels, bdx);\n\t\tswapChars(chars, levels, bdx);\n\t\tinvertLevel(2, chars, levels, bdx);\n\t\tinvertLevel(1, chars, levels, bdx);\n\t\tlvMap = levels;\n\t\treturn chars.join(\"\");\n\t}\n\n\tfunction computeLevels(chars, levels, bdx) {\n\t\tvar len = chars.length,\n\t\t\timpTab = bdx.dir ? impTabRtl : impTabLtr,\n\t\t\tprevState = null, newClass = null, newLevel = null, newState = 0,\n\t\t\taction = null, cond = null, condPos = -1, i = null, ix = null,\n\t\t\ttypes = [],\n\t\t\tclasses = [];\n\t\tbdx.hiLevel = bdx.dir;\n\t\tbdx.lastArabic = false;\n\t\tbdx.hasUbatAl = false;\n\t\tbdx.hasUbatB = false;\n\t\tbdx.hasUbatS = false;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\ttypes[i] = getCharacterType(chars[i]);\n\t\t}\n\t\tfor (ix = 0; ix < len; ix++) {\n\t\t\tprevState = newState;\n\t\t\tclasses[ix] = newClass = getCharClass(chars, types, classes, ix, bdx);\n\t\t\tnewState = impTab[prevState][newClass];\n\t\t\taction = newState & 0xF0;\n\t\t\tnewState &= 0x0F;\n\t\t\tlevels[ix] = newLevel = impTab[newState][ITIL];\n\t\t\tif (action > 0) {\n\t\t\t\tif (action === 0x10) {\t// set conditional run to level 1\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\n\t\t\t\t\t\tlevels[i] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t} else {\t// 0x20 confirm the conditional run\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcond = impTab[newState][ITCOND];\n\t\t\tif (cond) {\n\t\t\t\tif (condPos === -1) {\n\t\t\t\t\tcondPos = ix;\n\t\t\t\t}\n\t\t\t} else {\t// unconditional level\n\t\t\t\tif (condPos > -1) {\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\n\t\t\t\t\t\tlevels[i] = newLevel;\n\t\t\t\t\t}\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (types[ix] === UBAT_B) {\n\t\t\t\tlevels[ix] = 0;\n\t\t\t}\n\t\t\tbdx.hiLevel |= newLevel;\n\t\t}\n\t\tif (bdx.hasUbatS) {\n\t\t\thandleUbatS(types, levels, len, bdx);\n\t\t}\n\t}\n\n\tfunction handleUbatS(types, levels, len, bdx) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (types[i] === UBAT_S) {\n\t\t\t\tlevels[i] = bdx.dir;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (types[j] === UBAT_WS) {\n\t\t\t\t\t\tlevels[j] = bdx.dir;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction swapChars(chars, levels, bdx) {\n\t\t// summary:\n\t\t//\t\tSwap characters with symmetrical mirroring as all kinds of parenthesis.\n\t\t//\t\t(When needed).\n\t\t// chars:\n\t\t//\t\tThe source string as Array of characters.\n\t\t// levels:\n\t\t//\t\tAn array (like hash) of flags for each character in the source string,\n\t\t//\t\tthat defines if swapping should be applied on the following character.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// tags:\n\t\t//\t\tprivate\n\n\t\tif (bdx.hiLevel === 0 || bdx.swap.substr(0, 1) === bdx.swap.substr(1, 2)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (var i = 0; i < chars.length; i++) {\n\t\t\tif (levels[i] === 1) {\n\t\t\t\tchars[i] = getMirror(chars[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getCharacterType(ch) {\n\t\t// summary:\n\t\t//\t\tReturn the type of the character.\n\t\t// ch:\n\t\t//\t\tThe character to be checked.\n\n\t\t// description:\n\t\t//\t\tCheck the type of the character according to MasterTable,\n\t\t//\t\ttype = LTR, RTL, neutral,Arabic-Indic digit etc.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tvar uc = ch.charCodeAt(0),\n\t\t\thi = MasterTable[uc >> 8];\n\t\treturn (hi < TBBASE) ? hi : UnicodeTable[hi - TBBASE][uc & 0xFF];\n\t}\n\n\tfunction invertStr(str, bdx) {\n\t\t// summary:\n\t\t//\t\tReturn the reversed string.\n\t\t// str:\n\t\t//\t\tThe string to be reversed.\n\t\t// description:\n\t\t//\t\tReverse the string str.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tvar chars = str.split(\"\");\n\t\tif (bdx) {\n\t\t\tvar levels = [];\n\t\t\tcomputeLevels(chars, levels, bdx);\n\t\t\tlvMap = levels;\n\t\t}\n\t\tchars.reverse();\n\t\tstMap.reverse();\n\t\treturn chars.join(\"\");\n\t}\n\n\tfunction indexOf(cArray, cLength, idx) {\n\t\tfor (var i = 0; i < cLength; i++) {\n\t\t\tif (cArray[i] === idx) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tfunction isArabicAlefbet(c) {\n\t\tfor (var i = 0; i < ArabicAlefBetIntervalsBegine.length; i++) {\n\t\t\tif (c >= ArabicAlefBetIntervalsBegine[i] && c <= ArabicAlefBetIntervalsEnd[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction isNextArabic(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tif (((index) * step) < nIEnd && isArabicAlefbet(str06[index])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction isNextAlef(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tvar c = \" \";\n\t\tif (((index) * step) < nIEnd) {\n\t\t\tc = str06[index];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\n\t\t\tif (AlefTable[i] === c) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction invertLevel(lev, chars, levels, bdx) {\n\t\tif (bdx.hiLevel < lev) {\n\t\t\treturn;\n\t\t}\n\t\tif (lev === 1 && bdx.dir === RTL && !bdx.hasUbatB) {\n\t\t\tchars.reverse();\n\t\t\tstMap.reverse();\n\t\t\treturn;\n\t\t}\n\t\tvar len = chars.length, start = 0, end, lo, hi, tmp;\n\t\twhile (start < len) {\n\t\t\tif (levels[start] >= lev) {\n\t\t\t\tend = start + 1;\n\t\t\t\twhile (end < len && levels[end] >= lev) {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t\tfor (lo = start, hi = end - 1 ; lo < hi; lo++, hi--) {\n\t\t\t\t\ttmp = chars[lo];\n\t\t\t\t\tchars[lo] = chars[hi];\n\t\t\t\t\tchars[hi] = tmp;\n\t\t\t\t\ttmp = stMap[lo];\n\t\t\t\t\tstMap[lo] = stMap[hi];\n\t\t\t\t\tstMap[hi] = tmp;\n\t\t\t\t}\n\t\t\t\tstart = end;\n\t\t\t}\n\t\t\tstart++;\n\t\t}\n\t}\n\n\tfunction getCharClass(chars, types, classes, ix, bdx) {\n\t\t// summary:\n\t\t//\t\tReturn the class if ix character in chars.\n\t\t// chars:\n\t\t//\t\tThe source string as Array of characters.\n\t\t// types:\n\t\t//\t\tArray of types, for each character in chars.\n\t\t// classes:\n\t\t//\t\tArray of classes that already been solved.\n\t\t// ix:\n\t\t//\t\tthe index of checked character.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tvar cType = types[ix],\n\t\t\tresults = {\n\t\t\t\tUBAT_L : function () { bdx.lastArabic = false; return UBAT_L; },\n\t\t\t\tUBAT_R : function () { bdx.lastArabic = false; return UBAT_R; },\n\t\t\t\tUBAT_ON : function () { return UBAT_ON; },\n\t\t\t\tUBAT_AN : function () { return UBAT_AN; },\n\t\t\t\tUBAT_EN : function () { return bdx.lastArabic ? UBAT_AN : UBAT_EN; },\n\t\t\t\tUBAT_AL : function () { bdx.lastArabic = true; bdx.hasUbatAl = true; return UBAT_R; },\n\t\t\t\tUBAT_WS : function () { return UBAT_ON; },\n\t\t\t\tUBAT_CS : function () {\n\t\t\t\t\t\t\t\t\t\tvar wType, nType;\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || (ix + 1) >= types.length ||\n\t\t\t\t\t\t\t\t\t\t\t((wType = classes[ix - 1]) !== UBAT_EN && wType !== UBAT_AN) ||\n\t\t\t\t\t\t\t\t\t\t\t((nType = types[ix + 1]) !== UBAT_EN && nType !== UBAT_AN)) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\n\t\t\t\t\t\t\t\t\t\t\tnType = UBAT_AN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn nType === wType ? nType : UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_ES : function () {\n\t\t\t\t\t\t\t\t\t\tvar wType = ix > 0 ? classes[ix - 1] : UBAT_B;\n\t\t\t\t\t\t\t\t\t\tif (wType === UBAT_EN && (ix + 1) < types.length && types[ix + 1] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_ET : function () {\n\t\t\t\t\t\t\t\t\t\tif (ix > 0 && classes[ix - 1] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar i = ix + 1,\n\t\t\t\t\t\t\t\t\t\t\tlen = types.length;\n\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_ET) {\n\t\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (i < len && types[i] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_NSM : function () {\n\t\t\t\t\t\t\t\t\t\tif (bdx.inFormat === \"VLTR\") {\t// visual to implicit transformation\n\t\t\t\t\t\t\t\t\t\t\tvar len = types.length,\n\t\t\t\t\t\t\t\t\t\t\t\ti = ix + 1;\n\t\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_NSM) {\n\t\t\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (i < len) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar c = chars[ix],\n\t\t\t\t\t\t\t\t\t\t\t\t\trtlCandidate = (c >= 0x0591 && c <= 0x08FF) || c === 0xFB1E,\n\t\t\t\t\t\t\t\t\t\t\t\t\twType = types[i];\n\t\t\t\t\t\t\t\t\t\t\t\tif (rtlCandidate && (wType === UBAT_R || wType === UBAT_AL)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn UBAT_R;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || types[ix - 1] === UBAT_B) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn classes[ix - 1];\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_B : function () { bdx.lastArabic = true; bdx.hasUbatB = true; return bdx.dir; },\n\t\t\t\tUBAT_S : function () { bdx.hasUbatS = true; return UBAT_ON; },\n\t\t\t\tUBAT_LRE : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_RLE : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_LRO : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_RLO : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_PDF : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_BN : function () { return UBAT_ON; }\n\t\t\t};\n\t\treturn results[TYPES_NAMES[cType]]();\n\t}\n\n\tfunction getMirror(c) {\n\t\t// summary:\n\t\t//\t\tCalculates the mirrored character of c\n\t\t// c:\n\t\t//\t\tThe character to be mirrored.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tvar mid, low = 0, high = SwapTable.length - 1;\n\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor((low + high) / 2);\n\t\t\tif (c < SwapTable[mid][0]) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (c > SwapTable[mid][0]) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\treturn SwapTable[mid][1];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\n\tfunction isStandAlonCharacter(c) {\n\t\tfor (var i = 0; i < StandAlonForm.length; i++) {\n\t\t\tif (StandAlonForm[i] === c) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction getMedialFormCharacterFE(c) {\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\n\t\t\tif (c === BaseForm[i]) {\n\t\t\t\treturn MedialForm[i];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\n\tfunction getFormCharacterFE(/*char*/ c, /*char[]*/formArr) {\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\n\t\t\tif (c === BaseForm[i]) {\n\t\t\t\treturn formArr[i];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\n\tfunction isArabicDiacritics(c) {\n\t\treturn\t(c >= \"\\u064b\" && c <= \"\\u0655\") ? true : false;\n\t}\n\n\tfunction getOrientation(/*Char*/ oc) {\n\t\tif (oc === \"L\") {\n\t\t\treturn \"LTR\";\n\t\t}\n\t\tif (oc === \"R\") {\n\t\t\treturn \"RTL\";\n\t\t}\n\t\tif (oc === \"C\") {\n\t\t\treturn \"CLR\";\n\t\t}\n\t\tif (oc === \"D\") {\n\t\t\treturn \"CRL\";\n\t\t}\n\t}\n\n\tfunction setAlefToSpace(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tif (((index) * step) < nIEnd) {\n\t\t\tstr06[index] = \" \";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction getLamAlefFE(alef06, LamAlefForm) {\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\n\t\t\tif (alef06 === AlefTable[i]) {\n\t\t\t\treturn LamAlefForm[i];\n\t\t\t}\n\t\t}\n\t\treturn alef06;\n\t}\n\n\tfunction initMaps(map1, map2, length) {\n\t\tstMap = [];\n\t\tlvMap = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tmap1[i] = i;\n\t\t\tmap2[i] = i;\n\t\t\tstMap[i] = i;\n\t\t}\n\t}\n\n\tfunction reverseMap(sourceMap) {\n\t\tvar map = new Array(sourceMap.length);\n\t\tfor (var i = 0; i < sourceMap.length; i++) {\n\t\t\tmap[sourceMap[i]] = i;\n\t\t}\n\t\treturn map;\n\t}\n\n\tfunction updateMap(map, value, isGreater, update) {\n\t\tfor (var i = 0; i < map.length; i++) {\n\t\t\tif (map[i] > value || (!isGreater && map[i] === value)) {\n\t\t\t\tmap[i] += update;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar stMap = [];\n\tvar tsMap = [];\n\tvar lvMap = [];\n\n\tvar\tBDX = {\n\t\t\tdir: 0,\n\t\t\tdefInFormat: \"LLTR\",\n\t\t\tdefoutFormat: \"VLTR\",\n\t\t\tdefSwap: \"YN\",\n\t\t\tinFormat: \"LLTR\",\n\t\t\toutFormat: \"VLTR\",\n\t\t\tswap: \"YN\",\n\t\t\thiLevel: 0,\n\t\t\tlastArabic: false,\n\t\t\thasUbatAl: false,\n\t\t\thasBlockSep: false,\n\t\t\thasSegSep: false\n\t\t};\n\n\tvar ITIL = 5;\n\n\tvar ITCOND = 6;\n\n\tvar LTR = 0;\n\n\tvar RTL = 1;\n\n\tvar validFormat = /^[(I|V)][(L|R|C|D)][(Y|N)][(S|N)][N]$/;\n\n\tvar bidiChars = /[\\u0591-\\u06ff\\ufb1d-\\ufefc]/;\n\n\t/****************************************************************************/\n\t/* Array in which directional characters are replaced by their symmetric.\t*/\n\t/****************************************************************************/\n\tvar SwapTable = [\n\t\t[ \"\\u0028\", \"\\u0029\" ],\t/* Round brackets\t\t\t\t\t*/\n\t\t[ \"\\u0029\", \"\\u0028\" ],\n\t\t[ \"\\u003C\", \"\\u003E\" ],\t/* Less than/greater than\t\t\t*/\n\t\t[ \"\\u003E\", \"\\u003C\" ],\n\t\t[ \"\\u005B\", \"\\u005D\" ],\t/* Square brackets\t\t\t\t\t*/\n\t\t[ \"\\u005D\", \"\\u005B\" ],\n\t\t[ \"\\u007B\", \"\\u007D\" ],\t/* Curly brackets\t\t\t\t\t*/\n\t\t[ \"\\u007D\", \"\\u007B\" ],\n\t\t[ \"\\u00AB\", \"\\u00BB\" ],\t/* Double angle quotation marks\t\t*/\n\t\t[ \"\\u00BB\", \"\\u00AB\" ],\n\t\t[ \"\\u2039\", \"\\u203A\" ],\t/* single angle quotation mark\t\t*/\n\t\t[ \"\\u203A\", \"\\u2039\" ],\n\t\t[ \"\\u207D\", \"\\u207E\" ],\t/* Superscript parentheses\t\t\t*/\n\t\t[ \"\\u207E\", \"\\u207D\" ],\n\t\t[ \"\\u208D\", \"\\u208E\" ],\t/* Subscript parentheses\t\t\t*/\n\t\t[ \"\\u208E\", \"\\u208D\" ],\n\t\t[ \"\\u2264\", \"\\u2265\" ],\t/* Less/greater than or equal\t\t*/\n\t\t[ \"\\u2265\", \"\\u2264\" ],\n\t\t[ \"\\u2329\", \"\\u232A\" ],\t/* Angle brackets\t\t\t\t\t*/\n\t\t[ \"\\u232A\", \"\\u2329\" ],\n\t\t[ \"\\uFE59\", \"\\uFE5A\" ],\t/* Small round brackets\t\t\t\t*/\n\t\t[ \"\\uFE5A\", \"\\uFE59\" ],\n\t\t[ \"\\uFE5B\", \"\\uFE5C\" ],\t/* Small curly brackets\t\t\t\t*/\n\t\t[ \"\\uFE5C\", \"\\uFE5B\" ],\n\t\t[ \"\\uFE5D\", \"\\uFE5E\" ],\t/* Small tortoise shell brackets\t*/\n\t\t[ \"\\uFE5E\", \"\\uFE5D\" ],\n\t\t[ \"\\uFE64\", \"\\uFE65\" ],\t/* Small less than/greater than\t\t*/\n\t\t[ \"\\uFE65\", \"\\uFE64\" ]\n\t];\n\tvar AlefTable = [\"\\u0622\", \"\\u0623\", \"\\u0625\", \"\\u0627\"];\n\n\tvar LamAlefInialTableFE = [\"\\ufef5\", \"\\ufef7\", \"\\ufef9\", \"\\ufefb\"];\n\n\tvar LamAlefMedialTableFE = [\"\\ufef6\", \"\\ufef8\", \"\\ufefa\", \"\\ufefc\"];\n\t/**\n\t * Arabic Characters in the base form\n\t */\n\tvar BaseForm = [\"\\u0627\", \"\\u0628\", \"\\u062A\", \"\\u062B\", \"\\u062C\", \"\\u062D\", \"\\u062E\", \"\\u062F\", \"\\u0630\", \"\\u0631\",\n                    \"\\u0632\", \"\\u0633\", \"\\u0634\", \"\\u0635\", \"\\u0636\", \"\\u0637\", \"\\u0638\", \"\\u0639\", \"\\u063A\", \"\\u0641\",\n                    \"\\u0642\", \"\\u0643\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\", \"\\u0623\",\n                    \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\",\n                    \"\\u0623\", \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u06CC\", \"\\u0626\", \"\\u0624\"];\n\n\t/**\n\t * Arabic shaped characters in Isolated form\n\t */\n\tvar IsolatedForm = [\"\\uFE8D\", \"\\uFE8F\", \"\\uFE95\", \"\\uFE99\", \"\\uFE9D\", \"\\uFEA1\", \"\\uFEA5\", \"\\uFEA9\", \"\\uFEAB\",\n                        \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB1\", \"\\uFEB5\", \"\\uFEB9\", \"\\uFEBD\", \"\\uFEC1\", \"\\uFEC5\", \"\\uFEC9\",\n                        \"\\uFECD\", \"\\uFED1\", \"\\uFED5\", \"\\uFED9\", \"\\uFEDD\", \"\\uFEE1\", \"\\uFEE5\", \"\\uFEE9\", \"\\uFEED\",\n                        \"\\uFEF1\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFC\", \"\\uFE89\", \"\\uFE85\",\n                        \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\",\n                        \"\\uFE89\", \"\\uFE85\"];\n\n\t/**\n\t * Arabic shaped characters in Final form\n\t */\n\tvar FinalForm = [\"\\uFE8E\", \"\\uFE90\", \"\\uFE96\", \"\\uFE9A\", \"\\uFE9E\", \"\\uFEA2\", \"\\uFEA6\", \"\\uFEAA\", \"\\uFEAC\", \"\\uFEAE\",\n                     \"\\uFEB0\", \"\\uFEB2\", \"\\uFEB6\", \"\\uFEBA\", \"\\uFEBE\", \"\\uFEC2\", \"\\uFEC6\", \"\\uFECA\", \"\\uFECE\", \"\\uFED2\",\n                     \"\\uFED6\", \"\\uFEDA\", \"\\uFEDE\", \"\\uFEE2\", \"\\uFEE6\", \"\\uFEEA\", \"\\uFEEE\", \"\\uFEF2\", \"\\uFE88\", \"\\uFE84\",\n                     \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFD\", \"\\uFE8A\", \"\\uFE86\", \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\",\n                     \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\", \"\\uFE8A\", \"\\uFE86\"];\n\n\t/**\n\t * Arabic shaped characters in Media form\n\t */\n\tvar MedialForm = [\"\\uFE8E\", \"\\uFE92\", \"\\uFE98\", \"\\uFE9C\", \"\\uFEA0\", \"\\uFEA4\", \"\\uFEA8\", \"\\uFEAA\", \"\\uFEAC\",\n                      \"\\uFEAE\", \"\\uFEB0\", \"\\uFEB4\", \"\\uFEB8\", \"\\uFEBC\", \"\\uFEC0\", \"\\uFEC4\", \"\\uFEC8\", \"\\uFECC\",\n                      \"\\uFED0\", \"\\uFED4\", \"\\uFED8\", \"\\uFEDC\", \"\\uFEE0\", \"\\uFEE4\", \"\\uFEE8\", \"\\uFEEC\", \"\\uFEEE\",\n                      \"\\uFEF4\", \"\\uFE88\", \"\\uFE84\", \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFF\", \"\\uFE8C\", \"\\uFE86\",\n                      \"\\uFE71\", \"\\uFE72\", \"\\uFE74\", \"\\uFE77\", \"\\uFE79\", \"\\uFE7B\", \"\\uFE7D\", \"\\uFE7F\", \"\\uFE80\",\n                      \"\\uFE8C\", \"\\uFE86\"];\n\n\t/**\n\t * Arabic shaped characters in Initial form\n\t */\n\tvar InitialForm = [\"\\uFE8D\", \"\\uFE91\", \"\\uFE97\", \"\\uFE9B\", \"\\uFE9F\", \"\\uFEA3\", \"\\uFEA7\", \"\\uFEA9\", \"\\uFEAB\",\n                       \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB3\", \"\\uFEB7\", \"\\uFEBB\", \"\\uFEBF\", \"\\uFEC3\", \"\\uFEC7\", \"\\uFECB\",\n                       \"\\uFECF\", \"\\uFED3\", \"\\uFED7\", \"\\uFEDB\", \"\\uFEDF\", \"\\uFEE3\", \"\\uFEE7\", \"\\uFEEB\", \"\\uFEED\",\n                       \"\\uFEF3\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFE\", \"\\uFE8B\", \"\\uFE85\",\n                       \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\",\n                       \"\\uFE8B\", \"\\uFE85\"];\n\n\t/**\n\t * Arabic characters that couldn't join to the next character\n\t */\n\tvar StandAlonForm = [\"\\u0621\", \"\\u0622\", \"\\u0623\", \"\\u0624\", \"\\u0625\", \"\\u0627\", \"\\u0629\", \"\\u062F\", \"\\u0630\",\n                         \"\\u0631\", \"\\u0632\", \"\\u0648\", \"\\u0649\"];\n\n\tvar FETo06Table = [\"\\u064B\", \"\\u064B\", \"\\u064C\", \"\\u061F\", \"\\u064D\", \"\\u061F\", \"\\u064E\", \"\\u064E\", \"\\u064F\",\n                       \"\\u064F\", \"\\u0650\", \"\\u0650\", \"\\u0651\", \"\\u0651\", \"\\u0652\", \"\\u0652\", \"\\u0621\", \"\\u0622\",\n                       \"\\u0622\", \"\\u0623\", \"\\u0623\", \"\\u0624\", \"\\u0624\", \"\\u0625\", \"\\u0625\", \"\\u0626\", \"\\u0626\",\n                       \"\\u0626\", \"\\u0626\", \"\\u0627\", \"\\u0627\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0629\",\n                       \"\\u0629\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062B\", \"\\u062B\", \"\\u062B\", \"\\u062B\",\n                       \"\\u062C\", \"\\u062C\", \"\\u062C\", \"\\u062c\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062E\",\n                       \"\\u062E\", \"\\u062E\", \"\\u062E\", \"\\u062F\", \"\\u062F\", \"\\u0630\", \"\\u0630\", \"\\u0631\", \"\\u0631\",\n                       \"\\u0632\", \"\\u0632\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0634\", \"\\u0634\", \"\\u0634\",\n                       \"\\u0634\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0636\", \"\\u0636\", \"\\u0636\", \"\\u0636\",\n                       \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0639\",\n                       \"\\u0639\", \"\\u0639\", \"\\u0639\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u0641\", \"\\u0641\",\n                       \"\\u0641\", \"\\u0641\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0643\", \"\\u0643\", \"\\u0643\",\n                       \"\\u0643\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0645\", \"\\u0645\", \"\\u0645\", \"\\u0645\",\n                       \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0648\",\n                       \"\\u0648\", \"\\u0649\", \"\\u0649\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\uFEF5\", \"\\uFEF6\",\n                       \"\\uFEF7\", \"\\uFEF8\", \"\\uFEF9\", \"\\uFEFA\", \"\\uFEFB\", \"\\uFEFC\", \"\\u061F\", \"\\u061F\", \"\\u061F\"];\n\n\tvar ArabicAlefBetIntervalsBegine = [\"\\u0621\", \"\\u0641\"];\n\n\tvar ArabicAlefBetIntervalsEnd = [\"\\u063A\", \"\\u064a\"];\n\n\tvar\timpTabLtr = [\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t0,\t\t0,\t\t0\t], /* 0 LTR text\t*/\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t2,\t\t2,\t\t0\t], /* 1 LTR+AN\t\t*/\n\t\t[\t0,\t\t3,\t\t0,\t\t0x11,\t2,\t\t0,\t\t1\t], /* 2 LTR+AN+N\t*/\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t1,\t\t0\t], /* 3 RTL text\t*/\n\t\t[\t0,\t\t3,\t\t0x15,\t0x15,\t4,\t\t0,\t\t1\t], /* 4 RTL cont\t*/\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t2,\t\t0\t]  /* 5 RTL+EN/AN\t*/\n\t];\n\tvar impTabRtl = [\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t1,\t\t0\t], /* 0 RTL text\t*/\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t2,\t\t0\t], /* 1 RTL+EN/AN\t*/\n\t\t[\t2,\t\t0,\t\t2,\t\t1,\t\t3,\t\t2,\t\t0\t], /* 2 LTR text\t*/\n\t\t[\t2,\t\t0,\t\t2,\t\t0x21,\t3,\t\t1,\t\t1\t]  /* 3 LTR+cont\t*/\n\t];\n\n\tvar UBAT_L\t= 0; /* left to right\t\t\t\t*/\n\tvar UBAT_R\t= 1; /* right to left\t\t\t\t*/\n\tvar UBAT_EN = 2; /* European digit\t\t\t\t*/\n\tvar UBAT_AN = 3; /* Arabic-Indic digit\t\t\t*/\n\tvar UBAT_ON = 4; /* neutral\t\t\t\t\t\t*/\n\tvar UBAT_B\t= 5; /* block separator\t\t\t\t*/\n\tvar UBAT_S\t= 6; /* segment separator\t\t\t*/\n\tvar UBAT_AL = 7; /* Arabic Letter\t\t\t\t*/\n\tvar UBAT_WS = 8; /* white space\t\t\t\t\t*/\n\tvar UBAT_CS = 9; /* common digit separator\t\t*/\n\tvar UBAT_ES = 10; /* European digit separator\t*/\n\tvar UBAT_ET = 11; /* European digit terminator\t*/\n\tvar UBAT_NSM = 12; /* Non Spacing Mark\t\t\t*/\n\tvar UBAT_LRE = 13; /* LRE\t\t\t\t\t\t*/\n\tvar UBAT_RLE = 14; /* RLE\t\t\t\t\t\t*/\n\tvar UBAT_PDF = 15; /* PDF\t\t\t\t\t\t*/\n\tvar UBAT_LRO = 16; /* LRO\t\t\t\t\t\t*/\n\tvar UBAT_RLO = 17; /* RLO\t\t\t\t\t\t*/\n\tvar UBAT_BN\t= 18; /* Boundary Neutral\t\t\t*/\n\n\tvar TYPES_NAMES = [ \"UBAT_L\", \"UBAT_R\", \"UBAT_EN\", \"UBAT_AN\", \"UBAT_ON\", \"UBAT_B\", \"UBAT_S\", \"UBAT_AL\", \"UBAT_WS\",\n\t\t\t\t\t\t\"UBAT_CS\", \"UBAT_ES\", \"UBAT_ET\", \"UBAT_NSM\", \"UBAT_LRE\", \"UBAT_RLE\", \"UBAT_PDF\", \"UBAT_LRO\",\n\t\t\t\t\t\t\"UBAT_RLO\", \"UBAT_BN\" ];\n\tvar TBBASE = 100;\n\n\tvar TB00 = TBBASE + 0;\n\tvar TB05 = TBBASE + 1;\n\tvar TB06 = TBBASE + 2;\n\tvar TB07 = TBBASE + 3;\n\tvar TB20 = TBBASE + 4;\n\tvar TBFB = TBBASE + 5;\n\tvar TBFE = TBBASE + 6;\n\tvar TBFF = TBBASE + 7;\n\n\tvar L\t= UBAT_L;\n\tvar R\t= UBAT_R;\n\tvar EN\t= UBAT_EN;\n\tvar AN\t= UBAT_AN;\n\tvar ON\t= UBAT_ON;\n\tvar B\t= UBAT_B;\n\tvar S\t= UBAT_S;\n\tvar AL\t= UBAT_AL;\n\tvar WS\t= UBAT_WS;\n\tvar CS\t= UBAT_CS;\n\tvar ES\t= UBAT_ES;\n\tvar ET\t= UBAT_ET;\n\tvar NSM\t= UBAT_NSM;\n\tvar LRE\t= UBAT_LRE;\n\tvar RLE\t= UBAT_RLE;\n\tvar PDF\t= UBAT_PDF;\n\tvar LRO\t= UBAT_LRO;\n\tvar RLO\t= UBAT_RLO;\n\tvar BN\t= UBAT_BN;\n\n\tvar MasterTable = [\n /*******************************************************************************************************/\n /*     0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F     */\n /*******************************************************************************************************/\n /*0-*/ TB00, L,    L,    L,    L,    TB05, TB06, TB07, R,    L,    L,    L,    L,    L,    L,    L,\n /*1-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,\n /*2-*/ TB20, ON,   ON,   ON,   L,    ON,   L,    ON,   L,    ON,   ON,   ON,   L,    L,    ON,   ON,\n /*3-*/ L,    L,    L,    L,    L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*4-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,\n /*5-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*6-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*7-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*8-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*9-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,\n /*A-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    ON,   ON,   ON,\n /*B-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*C-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*D-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,   ON,   L,    L,    ON,   ON,   L,\n /*E-*/ L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*F-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    L,    TBFB, AL,   AL,   TBFE, TBFF\n\t];\n\n\tvar UnicodeTable = [\n        [ /*\tTable 00: Unicode 00xx */\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  S,   B,   S,   WS,  B,   BN,  BN,\n    /*1-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  B,   B,   B,   S,\n    /*2-*/  WS,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\n    /*3-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  BN,\n    /*8-*/  BN,  BN,  BN,  BN,  BN,  B,   BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*9-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*A-*/  CS,  ON,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  L,   ON,  ON,  BN,  ON,  ON,\n    /*B-*/  ET,  ET,  EN,  EN,  ON,  L,   ON,  ON,  ON,  EN,  L,   ON,  ON,  ON,  ON,  ON,\n    /*C-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*D-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L,\n    /*E-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*F-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L\n\t\t],\n\t\t[ /*\tTable 01: Unicode 05xx */\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*1-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*2-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*3-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*4-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,   L,\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  L,   ON,  ON,  ON,  ON,  ON,  ON,\n    /*9-*/  ON,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*A-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*B-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, R,   NSM,\n    /*C-*/  R,   NSM, NSM, R,   NSM, NSM, R,   NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,\n    /*F-*/  R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[ /*\tTable 02: Unicode 06xx */\n    /****************************************************************************************/\n\t/*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n\t/****************************************************************************************/\n    /*0-*/  AN,  AN,  AN,  AN,  ON,  ON,  ON,  ON,  AL,  ET,  ET,  AL,  CS,  AL,  ON,  ON,\n    /*1-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, AL,  ON,  ON,  AL,  AL,\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*3-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*4-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM,\n    /*5-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*6-*/  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  ET,  AN,  AN,  AL,  AL,  AL,\n    /*7-*/  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, AN,  ON,  NSM,\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, AL,  AL,  NSM, NSM, ON,  NSM, NSM, NSM, NSM, AL,  AL,\n    /*F-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  AL,  AL,  AL,  AL,  AL,  AL\n\t\t],\n\t\t[\t/*\tTable\t03:\tUnicode\t07xx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  AL,\n    /*1-*/  AL,  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*3-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*4-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  AL,  AL,  AL,\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*B-*/  NSM, AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*C-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   NSM, NSM, NSM, NSM, NSM,\n    /*F-*/  NSM, NSM, NSM, NSM, R,   R,   ON,  ON,  ON,  ON,  R,   ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[\t/*\tTable\t04:\tUnicode\t20xx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  BN,  BN,  BN,  L,   R,\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,  B,   LRE, RLE, PDF, LRO, RLO, CS,\n    /*3-*/  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  ON,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*5-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,\n    /*6-*/  BN,  BN,  BN,  BN,  BN,  ON,  ON,  ON,  ON,  ON,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*7-*/  EN,  L,   ON,  ON,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  L,\n    /*8-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  ON,\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,\n    /*A-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,\n    /*B-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*C-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*F-*/  NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[\t/*\tTable\t05:\tUnicode\tFBxx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*1-*/  ON,  ON,  ON,  L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  R,   NSM, R,\n    /*2-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   ES,  R,   R,   R,   R,   R,   R,\n    /*3-*/  R,   R,   R,   R,   R,   R,   R,   ON,  R,   R,   R,   R,   R,   ON,  R,   ON,\n    /*4-*/  R,   R,   ON,  R,   R,   ON,  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  ON,  ON,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL\n\t\t],\n\t\t[\t/*\tTable\t06:\tUnicode\tFExx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*3-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*5-*/  CS,  ON,  CS,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ET,\n    /*6-*/  ON,  ON,  ES,  ES,  ON,  ON,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  ON,  BN\n\t\t],\n\t\t[\t/*\tTable\t07:\tUnicode\tFFxx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  ON,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\n    /*1-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*3-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*6-*/  ON,  ON,  ON,  ON,  ON,  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*A-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*B-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,\n    /*C-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,\n    /*D-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   ON,  ON,  ON,\n    /*E-*/  ET,  ET,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*F-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t]\n\t];\n\n\treturn BidiEngine;\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"./Base\", \"../scaler/linear\",\n\t\"dojox/lang/utils\"],\n\tfunction(lang, declare, Base, lin, du){\n\n/*=====\n\tvar __InvisibleAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// fixUpper: String?\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// fixLower: String?\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// natural: Boolean?\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\n\t\t// leftBottom: Boolean?\n\t\t//\t\tThe position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\n\t\t// includeZero: Boolean?\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\n\t\t// fixed: Boolean?\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t\t// from: Number?\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\n\t\t// to: Number?\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\n\t\t// majorTickStep: Number?\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// minorTickStep: Number?\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// microTickStep: Number?\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\n\t};\n=====*/\n\n\treturn declare(\"dojox.charting.axis2d.Invisible\", Base, {\n\t\t// summary:\n\t\t//\t\tA axis object used in dojox.charting.  You can use that axis if you want the axis to be invisible.\n\t\t//\t\tSee dojox.charting.Chart.addAxis for details.\n\t\t//\n\t\t// defaultParams: Object\n\t\t//\t\tThe default parameters used to define any axis.\n\t\t// optionalParams: Object\n\t\t//\t\tAny optional parameters needed to define an axis.\n\n\t\t/*\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\n\n\t\t// opt: Object\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\n\t\t// scaler: Object\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\n\t\t// ticks: Object\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\n\t\t// dirty: Boolean\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\n\t\t// scale: Number\n\t\t//\t\tThe current scale of the axis.\n\t\t// offset: Number\n\t\t//\t\tThe current offset of the axis.\n\n\t\topt: null,\n\t\tscaler: null,\n\t\tticks: null,\n\t\tdirty: true,\n\t\tscale: 1,\n\t\toffset: 0,\n\t\t*/\n\t\tdefaultParams: {\n\t\t\tvertical:    false,\t\t// true for vertical axis\n\t\t\tfixUpper:    \"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tfixLower:    \"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tnatural:     false,\t\t// all tick marks should be made on natural numbers\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\"\n\t\t\tincludeZero: false,\t\t// 0 should be included\n\t\t\tfixed:       true\t\t// all labels are fixed numbers\n\t\t},\n\t\toptionalParams: {\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\n\t\t\tfrom:\t\t\t0,\t// visible from this value\n\t\t\tto:\t\t\t\t1,\t// visible to this value\n\t\t\tmajorTickStep:\t4,\t// major tick step\n\t\t\tminorTickStep:\t2,\t// minor tick step\n\t\t\tmicroTickStep:\t1\t// micro tick step\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an invisible axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart the axis belongs to.\n\t\t\t// kwArgs: __InvisibleAxisCtorArgs?\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n            du.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t},\n\t\tdependOnData: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFind out whether or not the axis options depend on the data in the axis.\n\t\t\treturn !(\"min\" in this.opt) || !(\"max\" in this.opt);\t//\tBoolean\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all calculated properties on this axis;\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tdelete this.scaler;\n\t\t\tdelete this.ticks;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tinitialized: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFinds out if this axis has been initialized or not.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tWhether a scaler has been calculated and if the axis is not dirty.\n\t\t\treturn \"scaler\" in this && !(this.dirty && this.dependOnData());\n\t\t},\n\t\tsetWindow: function(scale, offset){\n\t\t\t// summary:\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe new scale for the axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tThe new offset for the axis.\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tthis.scale  = scale;\n\t\t\tthis.offset = offset;\n\t\t\treturn this.clear();\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tgetWindowScale: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the current windowing scale of the axis.\n\t\t\treturn \"scale\" in this ? this.scale : 1;\t//\tNumber\n\t\t},\n\t\tgetWindowOffset: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the current windowing offset for the axis.\n\t\t\treturn \"offset\" in this ? this.offset : 0;\t//\tNumber\n\t\t},\n\t\tcalculate: function(min, max, span, scalerType){\n\t\t\t// summary:\n\t\t\t//\t\tPerform all calculations needed to render this axis.\n\t\t\t// min: Number\n\t\t\t//\t\tThe smallest value represented on this axis.\n\t\t\t// max: Number\n\t\t\t//\t\tThe largest value represented on this axis.\n\t\t\t// span: Number\n\t\t\t//\t\tThe span in pixels over which axis calculations are made.\n\t\t\t// scalerType: Object\n\t\t\t//\t\tAn optional scaler type object.\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tif(this.initialized()){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tvar o = this.opt;\n\t\t\t// we used to have a 4th function parameter to reach labels but\n\t\t\t// nobody was calling it with 4 parameters.\n\t\t\tthis.labels = o.labels;\n\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\n\t\t\t// store the absolute major tick start, this will be useful when dropping a label every n labels\n\t\t\t// TODO: if o.lower then it does not work\n\t\t\tvar tsb = this.scaler.bounds;\n\t\t\tif(\"scale\" in this){\n\t\t\t\t// calculate new range\n\t\t\t\to.from = tsb.lower + this.offset;\n\t\t\t\to.to   = (tsb.upper - tsb.lower) / this.scale + o.from;\n\t\t\t\t// make sure that bounds are correct\n\t\t\t\tif( !isFinite(o.from) ||\n\t\t\t\t\tisNaN(o.from) ||\n\t\t\t\t\t!isFinite(o.to) ||\n\t\t\t\t\tisNaN(o.to) ||\n\t\t\t\t\to.to - o.from >= tsb.upper - tsb.lower\n\t\t\t\t){\n\t\t\t\t\t// any error --- remove from/to bounds\n\t\t\t\t\tdelete o.from;\n\t\t\t\t\tdelete o.to;\n\t\t\t\t\tdelete this.scale;\n\t\t\t\t\tdelete this.offset;\n\t\t\t\t}else{\n\t\t\t\t\t// shift the window, if we are out of bounds\n\t\t\t\t\tif(o.from < tsb.lower){\n\t\t\t\t\t\to.to += tsb.lower - o.from;\n\t\t\t\t\t\to.from = tsb.lower;\n\t\t\t\t\t}else if(o.to > tsb.upper){\n\t\t\t\t\t\to.from += tsb.upper - o.to;\n\t\t\t\t\t\to.to = tsb.upper;\n\t\t\t\t\t}\n\t\t\t\t\t// update the offset\n\t\t\t\t\tthis.offset = o.from - tsb.lower;\n\t\t\t\t}\n\t\t\t\t// re-calculate the scaler\n\t\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\n\t\t\t\ttsb = this.scaler.bounds;\n\t\t\t\t// cleanup\n\t\t\t\tif(this.scale == 1 && this.offset == 0){\n\t\t\t\t\tdelete this.scale;\n\t\t\t\t\tdelete this.offset;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tgetScaler: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the pre-calculated scaler object.\n\t\t\treturn this.scaler;\t//\tObject\n\t\t},\n\t\tgetTicks: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the pre-calculated ticks object.\n\t\t\treturn this.ticks;\t//\tObject\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"./common\"], \n\tfunction(lang, common){\n\tvar linear = lang.getObject(\"dojox.charting.scaler.linear\", true);\n\t\n\tvar deltaLimit = 3,\t// pixels\n\t\tgetLabel = common.getNumericLabel;\n\n\t\tfunction findString(/*String*/ val, /*Array*/ text){\n\t\t\tval = val.toLowerCase();\n\t\t\tfor(var i = text.length - 1; i >= 0; --i){\n\t\t\t\tif(val === text[i]){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\tvar calcTicks = function(min, max, kwArgs, majorTick, minorTick, microTick, span){\n\t\tkwArgs = lang.delegate(kwArgs);\n\t\tif(!majorTick){\n\t\t\tif(kwArgs.fixUpper == \"major\"){ kwArgs.fixUpper = \"minor\"; }\n\t\t\tif(kwArgs.fixLower == \"major\"){ kwArgs.fixLower = \"minor\"; }\n\t\t}\n\t\tif(!minorTick){\n\t\t\tif(kwArgs.fixUpper == \"minor\"){ kwArgs.fixUpper = \"micro\"; }\n\t\t\tif(kwArgs.fixLower == \"minor\"){ kwArgs.fixLower = \"micro\"; }\n\t\t}\n\t\tif(!microTick){\n\t\t\tif(kwArgs.fixUpper == \"micro\"){ kwArgs.fixUpper = \"none\"; }\n\t\t\tif(kwArgs.fixLower == \"micro\"){ kwArgs.fixLower = \"none\"; }\n\t\t}\n\t\tvar lowerBound = findString(kwArgs.fixLower, [\"major\"]) ?\n\t\t\t\tMath.floor(kwArgs.min / majorTick) * majorTick :\n\t\t\t\t\tfindString(kwArgs.fixLower, [\"minor\"]) ?\n\t\t\t\t\t\tMath.floor(kwArgs.min / minorTick) * minorTick :\n\t\t\t\t\t\t\tfindString(kwArgs.fixLower, [\"micro\"]) ?\n\t\t\t\t\t\t\t\tMath.floor(kwArgs.min / microTick) * microTick : kwArgs.min,\n\t\t\tupperBound = findString(kwArgs.fixUpper, [\"major\"]) ?\n\t\t\t\tMath.ceil(kwArgs.max / majorTick) * majorTick :\n\t\t\t\t\tfindString(kwArgs.fixUpper, [\"minor\"]) ?\n\t\t\t\t\t\tMath.ceil(kwArgs.max / minorTick) * minorTick :\n\t\t\t\t\t\t\tfindString(kwArgs.fixUpper, [\"micro\"]) ?\n\t\t\t\t\t\t\t\tMath.ceil(kwArgs.max / microTick) * microTick : kwArgs.max;\n\t\t\t\t\t\t\t\t\n\t\tif(kwArgs.useMin){ min = lowerBound; }\n\t\tif(kwArgs.useMax){ max = upperBound; }\n\t\t\n\t\tvar majorStart = (!majorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\"])) ?\n\t\t\t\tmin : Math.ceil(min / majorTick) * majorTick,\n\t\t\tminorStart = (!minorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\"])) ?\n\t\t\t\tmin : Math.ceil(min / minorTick) * minorTick,\n\t\t\tmicroStart = (! microTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\", \"micro\"])) ?\n\t\t\t\tmin : Math.ceil(min / microTick) * microTick,\n\t\t\tmajorCount = !majorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\"]) ?\n\t\t\t\tMath.round((max - majorStart) / majorTick) :\n\t\t\t\tMath.floor((max - majorStart) / majorTick)) + 1,\n\t\t\tminorCount = !minorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\"]) ?\n\t\t\t\tMath.round((max - minorStart) / minorTick) :\n\t\t\t\tMath.floor((max - minorStart) / minorTick)) + 1,\n\t\t\tmicroCount = !microTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\", \"micro\"]) ?\n\t\t\t\tMath.round((max - microStart) / microTick) :\n\t\t\t\tMath.floor((max - microStart) / microTick)) + 1,\n\t\t\tminorPerMajor  = minorTick ? Math.round(majorTick / minorTick) : 0,\n\t\t\tmicroPerMinor  = microTick ? Math.round(minorTick / microTick) : 0,\n\t\t\tmajorPrecision = majorTick ? Math.floor(Math.log(majorTick) / Math.LN10) : 0,\n\t\t\tminorPrecision = minorTick ? Math.floor(Math.log(minorTick) / Math.LN10) : 0,\n\t\t\tscale = span / (max - min);\n\t\tif(!isFinite(scale)){ scale = 1; }\n\t\t\n\t\treturn {\n\t\t\tbounds: {\n\t\t\t\tlower:\tlowerBound,\n\t\t\t\tupper:\tupperBound,\n\t\t\t\tfrom:\tmin,\n\t\t\t\tto:\t\tmax,\n\t\t\t\tscale:\tscale,\n\t\t\t\tspan:\tspan\n\t\t\t},\n\t\t\tmajor: {\n\t\t\t\ttick:\tmajorTick,\n\t\t\t\tstart:\tmajorStart,\n\t\t\t\tcount:\tmajorCount,\n\t\t\t\tprec:\tmajorPrecision\n\t\t\t},\n\t\t\tminor: {\n\t\t\t\ttick:\tminorTick,\n\t\t\t\tstart:\tminorStart,\n\t\t\t\tcount:\tminorCount,\n\t\t\t\tprec:\tminorPrecision\n\t\t\t},\n\t\t\tmicro: {\n\t\t\t\ttick:\tmicroTick,\n\t\t\t\tstart:\tmicroStart,\n\t\t\t\tcount:\tmicroCount,\n\t\t\t\tprec:\t0\n\t\t\t},\n\t\t\tminorPerMajor:\tminorPerMajor,\n\t\t\tmicroPerMinor:\tmicroPerMinor,\n\t\t\tscaler:\t\t\tlinear\n\t\t};\n\t};\n\t\n\treturn lang.mixin(linear, {\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs, /*Number?*/ delta, /*Number?*/ minorDelta){\n\t\t\tvar h = {fixUpper: \"none\", fixLower: \"none\", natural: false};\n\t\t\tif(kwArgs){\n\t\t\t\tif(\"fixUpper\" in kwArgs){ h.fixUpper = String(kwArgs.fixUpper); }\n\t\t\t\tif(\"fixLower\" in kwArgs){ h.fixLower = String(kwArgs.fixLower); }\n\t\t\t\tif(\"natural\"  in kwArgs){ h.natural  = Boolean(kwArgs.natural); }\n\t\t\t}\n\t\t\tminorDelta = !minorDelta || minorDelta < deltaLimit ? deltaLimit : minorDelta;\n\t\t\t\n\t\t\t// update bounds\n\t\t\tif(\"min\" in kwArgs){ min = kwArgs.min; }\n\t\t\tif(\"max\" in kwArgs){ max = kwArgs.max; }\n\t\t\tif(kwArgs.includeZero){\n\t\t\t\tif(min > 0){ min = 0; }\n\t\t\t\tif(max < 0){ max = 0; }\n\t\t\t}\n\t\t\th.min = min;\n\t\t\th.useMin = true;\n\t\t\th.max = max;\n\t\t\th.useMax = true;\n\t\t\t\n\t\t\tif(\"from\" in kwArgs){\n\t\t\t\tmin = kwArgs.from;\n\t\t\t\th.useMin = false;\n\t\t\t}\n\t\t\tif(\"to\" in kwArgs){\n\t\t\t\tmax = kwArgs.to;\n\t\t\t\th.useMax = false;\n\t\t\t}\n\t\t\t\n\t\t\t// check for erroneous condition\n\t\t\tif(max <= min){\n\t\t\t\treturn calcTicks(min, max, h, 0, 0, 0, span);\t// Object\n\t\t\t}\n\t\t\tif(!delta){\n\t\t\t\tdelta = max - min;\n\t\t\t}\n\t\t\tvar mag = Math.floor(Math.log(delta) / Math.LN10),\n\t\t\t\tmajor = kwArgs && (\"majorTickStep\" in kwArgs) ? kwArgs.majorTickStep : Math.pow(10, mag),\n\t\t\t\tminor = 0, micro = 0, ticks;\n\t\t\t\t\n\t\t\t// calculate minor ticks\n\t\t\tif(kwArgs && (\"minorTickStep\" in kwArgs)){\n\t\t\t\tminor = kwArgs.minorTickStep;\n\t\t\t}else{\n\t\t\t\tdo{\n\t\t\t\t\tminor = major / 10;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tminor = major / 5;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tminor = major / 2;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\treturn calcTicks(min, max, h, major, 0, 0, span);\t// Object\n\t\t\t\t}while(false);\n\t\t\t}\n\t\n\t\t\t// calculate micro ticks\n\t\t\tif(kwArgs && (\"microTickStep\" in kwArgs)){\n\t\t\t\tmicro = kwArgs.microTickStep;\n\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t}else{\n\t\t\t\tdo{\n\t\t\t\t\tmicro = minor / 10;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = minor / 5;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = minor / 2;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = 0;\n\t\t\t\t}while(false);\n\t\t\t}\n\t\n\t\t\treturn micro ? ticks : calcTicks(min, max, h, major, minor, 0, span);\t// Object\n\t\t},\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\n\t\t\tvar step, next, tick,\n\t\t\t\tnextMajor = scaler.major.start,\n\t\t\t\tnextMinor = scaler.minor.start,\n\t\t\t\tnextMicro = scaler.micro.start;\n\t\t\tif(kwArgs.microTicks && scaler.micro.tick){\n\t\t\t\tstep = scaler.micro.tick, next = nextMicro;\n\t\t\t}else if(kwArgs.minorTicks && scaler.minor.tick){\n\t\t\t\tstep = scaler.minor.tick, next = nextMinor;\n\t\t\t}else if(scaler.major.tick){\n\t\t\t\tstep = scaler.major.tick, next = nextMajor;\n\t\t\t}else{\n\t\t\t\t// no ticks\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// make sure that we have finite bounds\n\t\t\tvar revScale = 1 / scaler.bounds.scale;\n\t\t\tif(scaler.bounds.to <= scaler.bounds.from || isNaN(revScale) || !isFinite(revScale) ||\n\t\t\t\t\tstep <= 0 || isNaN(step) || !isFinite(step)){\n\t\t\t\t// no ticks\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// loop over all ticks\n\t\t\tvar majorTicks = [], minorTicks = [], microTicks = [];\n\t\t\twhile(next <= scaler.bounds.to + revScale){\n\t\t\t\tif(Math.abs(nextMajor - next) < step / 2){\n\t\t\t\t\t// major tick\n\t\t\t\t\ttick = {value: nextMajor};\n\t\t\t\t\tif(kwArgs.majorLabels){\n\t\t\t\t\t\ttick.label = getLabel(nextMajor, scaler.major.prec, kwArgs);\n\t\t\t\t\t}\n\t\t\t\t\tmajorTicks.push(tick);\n\t\t\t\t\tnextMajor += scaler.major.tick;\n\t\t\t\t\tnextMinor += scaler.minor.tick;\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}else if(Math.abs(nextMinor - next) < step / 2){\n\t\t\t\t\t// minor tick\n\t\t\t\t\tif(kwArgs.minorTicks){\n\t\t\t\t\t\ttick = {value: nextMinor};\n\t\t\t\t\t\tif(kwArgs.minorLabels && (scaler.minMinorStep <= scaler.minor.tick * scaler.bounds.scale)){\n\t\t\t\t\t\t\ttick.label = getLabel(nextMinor, scaler.minor.prec, kwArgs);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorTicks.push(tick);\n\t\t\t\t\t}\n\t\t\t\t\tnextMinor += scaler.minor.tick;\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}else{\n\t\t\t\t\t// micro tick\n\t\t\t\t\tif(kwArgs.microTicks){\n\t\t\t\t\t\tmicroTicks.push({value: nextMicro});\n\t\t\t\t\t}\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}\n\t\t\t\tnext += step;\n\t\t\t}\n\t\t\treturn {major: majorTicks, minor: minorTicks, micro: microTicks};\t// Object\n\t\t},\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\n\t\t},\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\"], function(lang){\n\n\tvar eq = function(/*Number*/ a, /*Number*/ b){\n\t\t// summary:\n\t\t//\t\tcompare two FP numbers for equality\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\n\t};\n\n\tvar common = lang.getObject(\"dojox.charting.scaler.common\", true);\n\n\tvar testedModules = {};\n\n\treturn lang.mixin(common, {\n\t\tdoIfLoaded: function(moduleName, ifloaded, ifnotloaded){\n\t\t\tif(testedModules[moduleName] === undefined){\n\t\t\t\ttry{\n\t\t\t\t\ttestedModules[moduleName] = require(moduleName);\n\t\t\t\t}catch(e){\n\t\t\t\t\ttestedModules[moduleName] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(testedModules[moduleName]){\n\t\t\t\treturn ifloaded(testedModules[moduleName]);\n\t\t\t}else{\n\t\t\t\treturn ifnotloaded();\n\t\t\t}\n\t\t},\n\t\tgetNumericLabel: function(/*Number*/ number, /*Number*/ precision, /*Object*/ kwArgs){\n\t\t\tvar def = \"\";\n\t\t\tcommon.doIfLoaded(\"dojo/number\", function(numberLib){\n\t\t\t\tdef = (kwArgs.fixed ? numberLib.format(number, {places : precision < 0 ? -precision : 0}) :\n\t\t\t\t\tnumberLib.format(number)) || \"\";\n\t\t\t}, function(){\n\t\t\t\tdef = kwArgs.fixed ? number.toFixed(precision < 0 ? -precision : 0) : number.toString();\n\t\t\t});\n\t\t\tif(kwArgs.labelFunc){\n\t\t\t\tvar r = kwArgs.labelFunc(def, number, precision);\n\t\t\t\tif(r){ return r; }\n\t\t\t\t// else fall through to the regular labels search\n\t\t\t}\n\t\t\tif(kwArgs.labels){\n\t\t\t\t// classic binary search\n\t\t\t\t// TODO: working only if the array is sorted per value should be better documented or sorted automatically\n\t\t\t\tvar l = kwArgs.labels, lo = 0, hi = l.length;\n\t\t\t\twhile(lo < hi){\n\t\t\t\t\tvar mid = Math.floor((lo + hi) / 2), val = l[mid].value;\n\t\t\t\t\tif(val < number){\n\t\t\t\t\t\tlo = mid + 1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\thi = mid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// lets take into account FP errors\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\t--lo;\n\t\t\t\tif(lo >= 0 && lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\tlo += 2;\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\t// otherwise we will produce a number\n\t\t\t}\n\t\t\treturn def;\n\t\t}\n\t});\n});\n","define([\"../main\", \"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/_base/declare\", \"dojo/dom-style\",\n\t\"dojo/dom\", \"dojo/dom-geometry\", \"dojo/dom-construct\",\"dojo/_base/Color\", \"dojo/sniff\",\n\t\"./Element\", \"./SimpleTheme\", \"./Series\", \"./axis2d/common\", \"dojox/gfx/shape\",\n\t\"dojox/gfx\", \"dojo/has!dojo-bidi?./bidi/Chart\", \"dojox/lang/functional\", \"dojox/lang/functional/fold\", \"dojox/lang/functional/reversed\"],\n\tfunction(dojox, lang, arr, declare, domStyle,\n\t \t\t dom, domGeom, domConstruct, Color, has,\n\t \t\t Element, SimpleTheme, Series, common, shape,\n\t \t\t g, BidiChart, func){\n\t/*=====\n\tvar __ChartCtorArgs = {\n\t\t// summary:\n\t\t//\t\tThe keyword arguments that can be passed in a Chart constructor.\n\t\t// margins: Object?\n\t\t//\t\tOptional margins for the chart, in the form of { l, t, r, b}.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional outline/stroke for the chart.\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAn optional fill for the chart.\n\t\t// delayInMs: Number\n\t\t//\t\tDelay in ms for delayedRender(). Default: 200.\n\t};\n\t=====*/\n\n\t/*=====\n\tvar __SeriesCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\n\t\t// plot: String?\n\t\t//\t\tThe plot (by name) that this series belongs to.\n\t};\n\t=====*/\n\n\t/*=====\n\tvar __BaseAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t};\n\t=====*/\n\n\tvar dc = lang.getObject(\"charting\", true, dojox),\n\t\tclear = func.lambda(\"item.clear()\"),\n\t\tpurge = func.lambda(\"item.purgeGroup()\"),\n\t\tdestroy = func.lambda(\"item.destroy()\"),\n\t\tmakeClean = func.lambda(\"item.dirty = false\"),\n\t\tmakeDirty = func.lambda(\"item.dirty = true\"),\n\t\tgetName = func.lambda(\"item.name\"),\n\t\tdefaultMargins = {l: 10, t: 10, r: 10, b: 10};\n\n\tvar Chart = declare(has(\"dojo-bidi\")? \"dojox.charting.NonBidiChart\" : \"dojox.charting.Chart\", null, {\n\t\t// summary:\n\t\t//\t\tThe main chart object in dojox.charting.  This will create a two dimensional\n\t\t//\t\tchart based on dojox.gfx.\n\t\t//\n\t\t// description:\n\t\t//\t\tdojox.charting.Chart is the primary object used for any kind of charts.  It\n\t\t//\t\tis simple to create--just pass it a node reference, which is used as the\n\t\t//\t\tcontainer for the chart--and a set of optional keyword arguments and go.\n\t\t//\n\t\t//\t\tNote that like most of dojox.gfx, most of dojox.charting.Chart's methods are\n\t\t//\t\tdesigned to return a reference to the chart itself, to allow for functional\n\t\t//\t\tchaining.  This makes defining everything on a Chart very easy to do.\n\t\t//\n\t\t// example:\n\t\t//\t\tCreate an area chart, with smoothing.\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/themes/Shrooms\", \"dojox/charting/plot2d/Areas\", ...],\n\t\t// \t|\t\tfunction(Chart, Shrooms, Areas, ...){\n\t\t//\t|\t\tnew Chart(node)\n\t\t//\t|\t\t\t.addPlot(\"default\", { type: Areas, tension: \"X\" })\n\t\t//\t|\t\t\t.setTheme(Shrooms)\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [1, 2, 0.5, 1.5, 1, 2.8, 0.4])\n\t\t//\t|\t\t\t.addSeries(\"Series B\", [2.6, 1.8, 2, 1, 1.4, 0.7, 2])\n\t\t//\t|\t\t\t.addSeries(\"Series C\", [6.3, 1.8, 3, 0.5, 4.4, 2.7, 2])\n\t\t//\t|\t\t\t.render();\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tThe form of data in a data series can take a number of forms: a simple array,\n\t\t//\t\tan array of objects {x,y}, or something custom (as determined by the plot).\n\t\t//\t\tHere's an example of a Candlestick chart, which expects an object of\n\t\t//\t\t{ open, high, low, close }.\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/plot2d/Candlesticks\", ...],\n\t\t// \t|\t\tfunction(Chart, Candlesticks, ...){\n\t\t//\t|\t\tnew Chart(node)\n\t\t//\t|\t\t\t.addPlot(\"default\", {type: Candlesticks, gap: 1})\n\t\t//\t|\t\t\t.addAxis(\"x\", {fixLower: \"major\", fixUpper: \"major\", includeZero: true})\n\t\t//\t|\t\t\t.addAxis(\"y\", {vertical: true, fixLower: \"major\", fixUpper: \"major\", natural: true})\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 }\n\t\t//\t|\t\t\t\t],\n\t\t//\t|\t\t\t\t{ stroke: { color: \"green\" }, fill: \"lightgreen\" }\n\t\t//\t|\t\t\t)\n\t\t//\t|\t\t\t.render();\n\t\t//\t|\t});\n\t\t\n\t\t// theme: dojox/charting/SimpleTheme?\n\t\t//\t\tAn optional theme to use for styling the chart.\n\t\t// axes: dojox/charting/axis2d/Base{}?\n\t\t//\t\tA map of axes for use in plotting a chart.\n\t\t// stack: dojox/charting/plot2d/Base[]\n\t\t//\t\tA stack of plotters.\n\t\t// plots: dojox/charting/plot2d/Base{}\n\t\t//\t\tA map of plotter indices\n\t\t// series: dojox/charting/Series[]\n\t\t//\t\tThe stack of data runs used to create plots.\n\t\t// runs: dojox/charting/Series{}\n\t\t//\t\tA map of series indices\n\t\t// margins: Object?\n\t\t//\t\tThe margins around the chart. Default is { l:10, t:10, r:10, b:10 }.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tThe outline of the chart (stroke in vector graphics terms).\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tThe color for the chart.\n\t\t// node: DOMNode\n\t\t//\t\tThe container node passed to the constructor.\n\t\t// surface: dojox/gfx/shape.Surface\n\t\t//\t\tThe main graphics surface upon which a chart is drawn.\n\t\t// dirty: Boolean\n\t\t//\t\tA boolean flag indicating whether or not the chart needs to be updated/re-rendered.\n\t\t// htmlLabels: Boolean\n\t\t//\t\tA boolean flag indicating whether or not it should try to use HTML-based labels for the title or not.\n\t\t//\t\tThe default is true.  The only caveat is IE and Opera browsers will always use GFX-based labels.\n\n\t\tconstructor: function(/* DOMNode */node, /* __ChartCtorArgs? */kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a new Chart.  Initializes all parameters used for a chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tThe newly created chart.\n\n\t\t\t// initialize parameters\n\t\t\tif(!kwArgs){ kwArgs = {}; }\n\t\t\tthis.margins = kwArgs.margins || defaultMargins;\n\t\t\tthis._customMargins = !!kwArgs.margins;\n\t\t\tthis.stroke    = kwArgs.stroke;\n\t\t\tthis.fill      = kwArgs.fill;\n\t\t\tthis.delayInMs = kwArgs.delayInMs || 200;\n\t\t\tthis.title     = kwArgs.title;\n\t\t\tthis.titleGap  = kwArgs.titleGap;\n\t\t\tthis.titlePos  = kwArgs.titlePos;\n\t\t\tthis.titleFont = kwArgs.titleFont;\n\t\t\tthis.titleFontColor = kwArgs.titleFontColor;\n\t\t\tthis.titleAlign = kwArgs.titleAlign; // This can be middle, left, right, or edge \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // edge is left or right aligned with chart plot edge depending on bidi.\n\t\t\tthis.chartTitle = null;\n\t\t\tthis.htmlLabels = true;\n\t\t\tif(\"htmlLabels\" in kwArgs){\n\t\t\t\tthis.htmlLabels = kwArgs.htmlLabels;\n\t\t\t}\n\n\t\t\t// default initialization\n\t\t\tthis.theme = null;\n\t\t\tthis.axes = {};\t\t// map of axes\n\t\t\tthis.stack = [];\t// stack of plotters\n\t\t\tthis.plots = {};\t// map of plotter indices\n\t\t\tthis.series = [];\t// stack of data runs\n\t\t\tthis.runs = {};\t\t// map of data run indices\n\t\t\tthis.dirty = true;\n\n\t\t\t// create a surface\n\t\t\tthis.node = dom.byId(node);\n\t\t\tvar box = domGeom.getMarginBox(node);\n\t\t\tthis.surface = g.createSurface(this.node, box.w || 400, box.h || 300);\n\t\t\tif(this.surface.declaredClass.indexOf(\"vml\") == -1){\n\t\t\t\t// except if vml use native clipping\n\t\t\t\tthis._nativeClip = true;\n\t\t\t}\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCleanup when a chart is to be destroyed.\n\t\t\t// returns: void\n\t\t\tarr.forEach(this.series, destroy);\n\t\t\tarr.forEach(this.stack,  destroy);\n\t\t\tfunc.forIn(this.axes, destroy);\n\t\t\tthis.surface.destroy();\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\n\t\t\t\t// destroy title if it is a DOM node\n\t\t\t\tdomConstruct.destroy(this.chartTitle);\n\t\t\t}\n\t\t},\n\t\tgetCoords: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the coordinates and dimensions of the containing DOMNode, as\n\t\t\t//\t\treturned by dojo.coords.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting coordinates of the chart.  See dojo.coords for details.\n\t\t\tvar node = this.node;\n\t\t\tvar s = domStyle.getComputedStyle(node), coords = domGeom.getMarginBox(node, s);\n\t\t\tvar abs = domGeom.position(node, true);\n\t\t\tcoords.x = abs.x;\n\t\t\tcoords.y = abs.y;\n\t\t\treturn coords;\t//\tObject\n\t\t},\n\t\tsetTheme: function(theme){\n\t\t\t// summary:\n\t\t\t//\t\tSet a theme of the chart.\n\t\t\t// theme: dojox/charting/SimpleTheme\n\t\t\t//\t\tThe theme to be used for visual rendering.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tthis.theme = theme.clone();\n\t\t\tif(!this._customMargins){\n\t\t\t\tthis.margins = this.theme.chart.margins || defaultMargins;\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddAxis: function(name, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd an axis to the chart, for rendering.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis.\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object for use in defining details of an axis.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar axis, axisType = kwArgs && kwArgs.type || \"Default\";\n\t\t\tif(typeof axisType == \"string\"){\n\t\t\t\tif(!dc.axis2d || !dc.axis2d[axisType]){\n\t\t\t\t\tthrow Error(\"Can't find axis: \" + axisType + \" - Check \" + \"require() dependencies.\");\n\t\t\t\t}\n\t\t\t\taxis = new dc.axis2d[axisType](this, kwArgs);\n\t\t\t}else{\n\t\t\t\taxis = new axisType(this, kwArgs);\n\t\t\t}\n\t\t\taxis.name = name;\n\t\t\taxis.dirty = true;\n\t\t\tif(name in this.axes){\n\t\t\t\tthis.axes[name].destroy();\n\t\t\t}\n\t\t\tthis.axes[name] = axis;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetAxis: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given axis, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the axis was defined by.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe axis as stored in the chart's axis map.\n\t\t\treturn this.axes[name];\t//\tdojox/charting/axis2d/Default\n\t\t},\n\t\tremoveAxis: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the axis that was defined using name.\n\t\t\t// name: String\n\t\t\t//\t\tThe axis name, as defined in addAxis.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.axes){\n\t\t\t\t// destroy the axis\n\t\t\t\tthis.axes[name].destroy();\n\t\t\t\tdelete this.axes[name];\n\t\t\t\t// mark the chart as dirty\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddPlot: function(name, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a new plot to the chart, defined by name and using the optional keyword arguments object.\n\t\t\t//\t\tNote that dojox.charting assumes the main plot to be called \"default\"; if you do not have\n\t\t\t//\t\ta plot called \"default\" and attempt to add data series to the chart without specifying the\n\t\t\t//\t\tplot to be rendered on, you WILL get errors.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot to be added to the chart.  If you only plan on using one plot, call it \"default\".\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs\n\t\t\t//\t\tAn object with optional parameters for the plot in question.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar plot, plotType = kwArgs && kwArgs.type || \"Default\";\n\t\t\tif(typeof plotType == \"string\"){\n\t\t\t\tif(!dc.plot2d || !dc.plot2d[plotType]){\n\t\t\t\t\tthrow Error(\"Can't find plot: \" + plotType + \" - didn't you forget to dojo\" + \".require() it?\");\n\t\t\t\t}\n\t\t\t\tplot = new dc.plot2d[plotType](this, kwArgs);\n\t\t\t}else{\n\t\t\t\tplot = new plotType(this, kwArgs);\n\t\t\t}\n\t\t\tplot.name = name;\n\t\t\tplot.dirty = true;\n\t\t\tif(name in this.plots){\n\t\t\t\tthis.stack[this.plots[name]].destroy();\n\t\t\t\tthis.stack[this.plots[name]] = plot;\n\t\t\t}else{\n\t\t\t\tthis.plots[name] = this.stack.length;\n\t\t\t\tthis.stack.push(plot);\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetPlot: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given plot, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the plot was defined by.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tThe plot.\n\t\t\treturn this.stack[this.plots[name]];\n\t\t},\n\t\tremovePlot: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the plot defined using name from the chart's plot stack.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot as defined using addPlot.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\t// get the index and remove the name\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tdelete this.plots[name];\n\t\t\t\t// destroy the plot\n\t\t\t\tthis.stack[index].destroy();\n\t\t\t\t// remove the plot from the stack\n\t\t\t\tthis.stack.splice(index, 1);\n\t\t\t\t// update indices to reflect the shift\n\t\t\t\tfunc.forIn(this.plots, function(idx, name, plots){\n\t\t\t\t\tif(idx > index){\n\t\t\t\t\t\tplots[name] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// remove all related series\n\t\t\t\tvar ns = arr.filter(this.series, function(run){ return run.plot != name; });\n\t\t\t\tif(ns.length < this.series.length){\n\t\t\t\t\t// kill all removed series\n\t\t\t\t\tarr.forEach(this.series, function(run){\n\t\t\t\t\t\tif(run.plot == name){\n\t\t\t\t\t\t\trun.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// rebuild all necessary data structures\n\t\t\t\t\tthis.runs = {};\n\t\t\t\t\tarr.forEach(ns, function(run, index){\n\t\t\t\t\t\tthis.runs[run.plot] = index;\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis.series = ns;\n\t\t\t\t}\n\t\t\t\t// mark the chart as dirty\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetPlotOrder: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns an array of plot names in the current order\n\t\t\t//\t\t(the top-most plot is the first).\n\t\t\t// returns: Array\n\t\t\treturn func.map(this.stack, getName); // Array\n\t\t},\n\t\tsetPlotOrder: function(newOrder){\n\t\t\t// summary:\n\t\t\t//\t\tSets new order of plots. newOrder cannot add or remove\n\t\t\t//\t\tplots. Wrong names, or dups are ignored.\n\t\t\t// newOrder: Array\n\t\t\t//\t\tArray of plot names compatible with getPlotOrder().\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar names = {},\n\t\t\t\torder = func.filter(newOrder, function(name){\n\t\t\t\t\tif(!(name in this.plots) || (name in names)){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tnames[name] = 1;\n\t\t\t\t\treturn true;\n\t\t\t\t}, this);\n\t\t\tif(order.length < this.stack.length){\n\t\t\t\tfunc.forEach(this.stack, function(plot){\n\t\t\t\t\tvar name = plot.name;\n\t\t\t\t\tif(!(name in names)){\n\t\t\t\t\t\torder.push(name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar newStack = func.map(order, function(name){\n\t\t\t\t\treturn this.stack[this.plots[name]];\n\t\t\t\t}, this);\n\t\t\tfunc.forEach(newStack, function(plot, i){\n\t\t\t\tthis.plots[plot.name] = i;\n\t\t\t}, this);\n\t\t\tthis.stack = newStack;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmovePlotToFront: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given plot to front.\n\t\t\t// name: String\n\t\t\t//\t\tPlot's name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tif(index){\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.unshift(name);\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmovePlotToBack: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given plot to back.\n\t\t\t// name: String\n\t\t\t//\t\tPlot's name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tif(index < this.stack.length - 1){\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.push(name);\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddSeries: function(name, data, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to the chart for rendering.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the data series to be plotted.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// kwArgs: __SeriesCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object that will be mixed into\n\t\t\t//\t\tthe resultant series object.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar run = new Series(this, data, kwArgs);\n\t\t\trun.name = name;\n\t\t\tif(name in this.runs){\n\t\t\t\tthis.series[this.runs[name]].destroy();\n\t\t\t\tthis.series[this.runs[name]] = run;\n\t\t\t}else{\n\t\t\t\tthis.runs[name] = this.series.length;\n\t\t\t\tthis.series.push(run);\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\t// fix min/max\n\t\t\tif(!(\"ymin\" in run) && \"min\" in run){ run.ymin = run.min; }\n\t\t\tif(!(\"ymax\" in run) && \"max\" in run){ run.ymax = run.max; }\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetSeries: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given series, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the series was defined by.\n\t\t\t// returns: dojox/charting/Series\n\t\t\t//\t\tThe series.\n\t\t\treturn this.series[this.runs[name]];\n\t\t},\n\t\tremoveSeries: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the series defined by name from the chart.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the series as defined by addSeries.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\t// get the index and remove the name\n\t\t\t\tvar index = this.runs[name];\n\t\t\t\tdelete this.runs[name];\n\t\t\t\t// destroy the run\n\t\t\t\tthis.series[index].destroy();\n\t\t\t\t// remove the run from the stack of series\n\t\t\t\tthis.series.splice(index, 1);\n\t\t\t\t// update indices to reflect the shift\n\t\t\t\tfunc.forIn(this.runs, function(idx, name, runs){\n\t\t\t\t\tif(idx > index){\n\t\t\t\t\t\truns[name] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tupdateSeries: function(name, data, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tUpdate the given series with a new set of data points.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the series as defined in addSeries.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// offsets: Boolean?\n\t\t\t//\t\tIf true recomputes the offsets of the chart based on the new\n\t\t\t//\t\tdata. This is useful if the range of data is drastically changing\n\t\t\t//\t\tand offsets need to be recomputed.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar run = this.series[this.runs[name]];\n\t\t\t\trun.update(data);\n\t\t\t\tif(offsets){\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t}else{\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, false);\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetSeriesOrder: function(plotName){\n\t\t\t// summary:\n\t\t\t//\t\tReturns an array of series names in the current order\n\t\t\t//\t\t(the top-most series is the first) within a plot.\n\t\t\t// plotName: String\n\t\t\t//\t\tPlot's name.\n\t\t\t// returns: Array\n\t\t\treturn func.map(func.filter(this.series, function(run){\n\t\t\t\t\treturn run.plot == plotName;\n\t\t\t\t}), getName);\n\t\t},\n\t\tsetSeriesOrder: function(newOrder){\n\t\t\t// summary:\n\t\t\t//\t\tSets new order of series within a plot. newOrder cannot add\n\t\t\t//\t\tor remove series. Wrong names, or dups are ignored.\n\t\t\t// newOrder: Array\n\t\t\t//\t\tArray of series names compatible with getPlotOrder(). All\n\t\t\t//\t\tseries should belong to the same plot.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar plotName, names = {},\n\t\t\t\torder = func.filter(newOrder, function(name){\n\t\t\t\t\tif(!(name in this.runs) || (name in names)){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tvar run = this.series[this.runs[name]];\n\t\t\t\t\tif(plotName){\n\t\t\t\t\t\tif(run.plot != plotName){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tplotName = run.plot;\n\t\t\t\t\t}\n\t\t\t\t\tnames[name] = 1;\n\t\t\t\t\treturn true;\n\t\t\t\t}, this);\n\t\t\tfunc.forEach(this.series, function(run){\n\t\t\t\tvar name = run.name;\n\t\t\t\tif(!(name in names) && run.plot == plotName){\n\t\t\t\t\torder.push(name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar newSeries = func.map(order, function(name){\n\t\t\t\t\treturn this.series[this.runs[name]];\n\t\t\t\t}, this);\n\t\t\tthis.series = newSeries.concat(func.filter(this.series, function(run){\n\t\t\t\treturn run.plot != plotName;\n\t\t\t}));\n\t\t\tfunc.forEach(this.series, function(run, i){\n\t\t\t\tthis.runs[run.name] = i;\n\t\t\t}, this);\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmoveSeriesToFront: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given series to front of a plot.\n\t\t\t// name: String\n\t\t\t//\t\tSeries' name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar index = this.runs[name],\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\n\t\t\t\tif(name != newOrder[0]){\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.unshift(name);\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmoveSeriesToBack: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given series to back of a plot.\n\t\t\t// name: String\n\t\t\t//\t\tSeries' name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar index = this.runs[name],\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\n\t\t\t\tif(name != newOrder[newOrder.length - 1]){\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.push(name);\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tresize: function(width, height){\n\t\t\t// summary:\n\t\t\t//\t\tResize the chart to the dimensions of width and height.\n\t\t\t// description:\n\t\t\t//\t\tResize the chart and its surface to the width and height dimensions.\n\t\t\t//\t\tIf a single argument of the form {w: value1, h: value2} is provided take that argument as the dimensions to use.\n\t\t\t//\t\tFinally if no argument is provided, resize the surface to the marginBox of the chart.\n\t\t\t// width: Number|Object?\n\t\t\t//\t\tThe new width of the chart or the box definition.\n\t\t\t// height: Number?\n\t\t\t//\t\tThe new height of the chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tswitch(arguments.length){\n\t\t\t\t// case 0, do not resize the div, just the surface\n\t\t\t\tcase 1:\n\t\t\t\t\t// argument, override node box\n\t\t\t\t\tdomGeom.setMarginBox(this.node, width);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t// argument, override node box\n\t\t\t\t\tdomGeom.setMarginBox(this.node, {w: width, h: height});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// in all cases take back the computed box\n\t\t\tvar box = domGeom.getMarginBox(this.node);\n\t\t\tvar d = this.surface.getDimensions();\n\t\t\tif(d.width != box.w || d.height != box.h){\n\t\t\t\t// and set it on the surface\n\t\t\t\tthis.surface.setDimensions(box.w, box.h);\n\t\t\t\tthis.dirty = true;\n\t\t\t\treturn this.render();\t//\tdojox/charting/Chart\n\t\t\t}else{\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tgetGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a map of information about all axes in a chart and what they represent\n\t\t\t//\t\tin terms of scaling (see dojox.charting.axis2d.Default.getScaler).\n\t\t\t// returns: Object\n\t\t\t//\t\tAn map of geometry objects, a one-to-one mapping of axes.\n\t\t\tvar ret = {};\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tif(axis.initialized()){\n\t\t\t\t\tret[axis.name] = {\n\t\t\t\t\t\tname:\t\taxis.name,\n\t\t\t\t\t\tvertical:\taxis.vertical,\n\t\t\t\t\t\tscaler:\t\taxis.scaler,\n\t\t\t\t\t\tticks:\t\taxis.ticks\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\t//\tObject\n\t\t},\n\t\tsetAxisWindow: function(name, scale, offset, zoom){\n\t\t\t// summary:\n\t\t\t//\t\tZooms an axis and all dependent plots. Can be used to zoom in 1D.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe scale on the target axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tAny offest, as measured by axis tick\n\t\t\t// zoom: Boolean|Object?\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar axis = this.axes[name];\n\t\t\tif(axis){\n\t\t\t\taxis.setWindow(scale, offset);\n\t\t\t\tarr.forEach(this.stack,function(plot){\n\t\t\t\t\tif(plot.hAxis == name || plot.vAxis == name){\n\t\t\t\t\t\tplot.zoom = zoom;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tsetWindow: function(sx, sy, dx, dy, zoom){\n\t\t\t// summary:\n\t\t\t//\t\tZooms in or out any plots in two dimensions.\n\t\t\t// sx: Number\n\t\t\t//\t\tThe scale for the x axis.\n\t\t\t// sy: Number\n\t\t\t//\t\tThe scale for the y axis.\n\t\t\t// dx: Number\n\t\t\t//\t\tThe pixel offset on the x axis.\n\t\t\t// dy: Number\n\t\t\t//\t\tThe pixel offset on the y axis.\n\t\t\t// zoom: Boolean|Object?\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(!(\"plotArea\" in this)){\n\t\t\t\tthis.calculateGeometry();\n\t\t\t}\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds,\n\t\t\t\t\ts = bounds.span / (bounds.upper - bounds.lower);\n\t\t\t\tif(axis.vertical){\n\t\t\t\t\tscale  = sy;\n\t\t\t\t\toffset = dy / s / scale;\n\t\t\t\t}else{\n\t\t\t\t\tscale  = sx;\n\t\t\t\t\toffset = dx / s / scale;\n\t\t\t\t}\n\t\t\t\taxis.setWindow(scale, offset);\n\t\t\t});\n\t\t\tarr.forEach(this.stack, function(plot){ plot.zoom = zoom; });\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tzoomIn:\tfunction(name, range, delayed){\n\t\t\t// summary:\n\t\t\t//\t\tZoom the chart to a specific range on one axis.  This calls render()\n\t\t\t//\t\tdirectly as a convenience method.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\n\t\t\t// range: Array\n\t\t\t//\t\tThe end points of the zoom range, measured in axis ticks.\n\t\t\tvar axis = this.axes[name];\n\t\t\tif(axis){\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds;\n\t\t\t\tvar lower = Math.min(range[0],range[1]);\n\t\t\t\tvar upper = Math.max(range[0],range[1]);\n\t\t\t\tlower = range[0] < bounds.lower ? bounds.lower : lower;\n\t\t\t\tupper = range[1] > bounds.upper ? bounds.upper : upper;\n\t\t\t\tscale = (bounds.upper - bounds.lower) / (upper - lower);\n\t\t\t\toffset = lower - bounds.lower;\n\t\t\t\tthis.setAxisWindow(name, scale, offset);\n\t\t\t\tif(delayed){\n\t\t\t\t\tthis.delayedRender();\n\t\t\t\t}else{\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcalculateGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the geometry of the chart based on the defined axes of\n\t\t\t//\t\ta chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(this.dirty){\n\t\t\t\treturn this.fullGeometry();\n\t\t\t}\n\n\t\t\t// calculate geometry\n\t\t\tvar dirty = arr.filter(this.stack, function(plot){\n\t\t\t\t\treturn plot.dirty ||\n\t\t\t\t\t\t(plot.hAxis && this.axes[plot.hAxis].dirty) ||\n\t\t\t\t\t\t(plot.vAxis && this.axes[plot.vAxis].dirty);\n\t\t\t\t}, this);\n\t\t\tcalculateAxes(dirty, this.plotArea);\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tfullGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the full geometry of the chart.  This includes passing\n\t\t\t//\t\tover all major elements of a chart (plots, axes, series, container)\n\t\t\t//\t\tin order to ensure proper rendering.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tthis._makeDirty();\n\n\t\t\t// clear old values\n\t\t\tarr.forEach(this.stack, clear);\n\n\t\t\t// rebuild new connections, and add defaults\n\n\t\t\t// set up a theme\n\t\t\tif(!this.theme){\n\t\t\t\tthis.setTheme(new SimpleTheme());\n\t\t\t}\n\n\t\t\t// assign series\n\t\t\tarr.forEach(this.series, function(run){\n\t\t\t\tif(!(run.plot in this.plots)){\n\t\t\t\t\t// TODO remove auto-assignment\n\t\t\t\t\tif(!dc.plot2d || !dc.plot2d.Default){\n\t\t\t\t\t\tthrow Error(\"Can't find plot: Default - didn't you forget to dojo\" + \".require() it?\");\n\t\t\t\t\t}\n\t\t\t\t\tvar plot = new dc.plot2d.Default(this, {});\n\t\t\t\t\tplot.name = run.plot;\n\t\t\t\t\tthis.plots[run.plot] = this.stack.length;\n\t\t\t\t\tthis.stack.push(plot);\n\t\t\t\t}\n\t\t\t\tthis.stack[this.plots[run.plot]].addSeries(run);\n\t\t\t}, this);\n\t\t\t// assign axes\n\t\t\tarr.forEach(this.stack, function(plot){\n\t\t\t\tif(plot.assignAxes){\n\t\t\t\t\tplot.assignAxes(this.axes);\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// calculate geometry\n\n\t\t\t// 1st pass\n\t\t\tvar dim = this.dim = this.surface.getDimensions();\n\t\t\tdim.width  = g.normalizedLength(dim.width);\n\t\t\tdim.height = g.normalizedLength(dim.height);\n\t\t\tfunc.forIn(this.axes, clear);\n\t\t\tcalculateAxes(this.stack, dim);\n\n\t\t\t// assumption: we don't have stacked axes yet\n\t\t\tvar offsets = this.offsets = {l: 0, r: 0, t: 0, b: 0};\n\t\t\t// chart mirroring starts\n\t\t\tvar self = this;\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\t\tself._resetLeftBottom(axis);\n\t\t\t\t}\n\t\t\t\tfunc.forIn(axis.getOffsets(), function(o, i){ offsets[i] = Math.max(o, offsets[i]); });\n\t\t\t});\n\t\t\t// chart mirroring ends\n\t\t\t// add title area\n\t\t\tif(this.title){\n\t\t\t\tthis.titleGap = (this.titleGap==0) ? 0 : this.titleGap || this.theme.chart.titleGap || 20;\n\t\t\t\tthis.titlePos = this.titlePos || this.theme.chart.titlePos || \"top\";\n\t\t\t\tthis.titleFont = this.titleFont || this.theme.chart.titleFont;\n\t\t\t\tthis.titleFontColor = this.titleFontColor || this.theme.chart.titleFontColor || \"black\";\n\t\t\t\tthis.titleAlign = this.titleAlign || this.theme && this.theme.chart && this.theme.chart.titleAlign || \"middle\";\n\t\t\t\tvar tsize = g.normalizedLength(g.splitFontString(this.titleFont).size);\n\t\t\t\toffsets[this.titlePos == \"top\" ? \"t\" : \"b\"] += (tsize + this.titleGap);\n\t\t\t}\n\t\t\t// add margins\n\t\t\tfunc.forIn(this.margins, function(o, i){ offsets[i] += o; });\n\n\t\t\t// 2nd pass with realistic dimensions\n\t\t\tthis.plotArea = {\n\t\t\t\twidth: dim.width - offsets.l - offsets.r,\n\t\t\t\theight: dim.height - offsets.t - offsets.b\n\t\t\t};\n\t\t\tfunc.forIn(this.axes, clear);\n\t\t\tcalculateAxes(this.stack, this.plotArea);\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\trender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tRender the chart according to the current information defined.  This should\n\t\t\t//\t\tbe the last call made when defining/creating a chart, or if data within the\n\t\t\t//\t\tchart has been changed.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\t// do we have a delayed renderer pending? If yes we need to clear it\n\t\t\tif(this._delayedRenderHandle){\n\t\t\t\tclearTimeout(this._delayedRenderHandle);\n\t\t\t\tthis._delayedRenderHandle = null;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.theme){\n\t\t\t\tthis.theme.clear();\n\t\t\t}\n\n\t\t\tif(this.dirty){\n\t\t\t\treturn this.fullRender();\n\t\t\t}\n\n\t\t\tthis.calculateGeometry();\n\n\t\t\t// go over the stack backwards\n\t\t\tfunc.forEachRev(this.stack, function(plot){ plot.render(this.dim, this.offsets); }, this);\n\n\t\t\t// go over axes\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(this.dim, this.offsets); }, this);\n\n\t\t\tthis._makeClean();\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tfullRender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce a full rendering of the chart, including full resets on the chart itself.\n\t\t\t//\t\tYou should not call this method directly unless absolutely necessary.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\t// calculate geometry\n\t\t\tthis.fullGeometry();\n\t\t\tvar offsets = this.offsets, dim = this.dim;\n\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\n\t\t\t// get required colors\n\t\t\t//var requiredColors = func.foldl(this.stack, \"z + plot.getRequiredColors()\", 0);\n\t\t\t//this.theme.defineColors({num: requiredColors, cache: false});\n\n\t\t\t// clear old shapes\n\t\t\tarr.forEach(this.series, purge);\n\t\t\tfunc.forIn(this.axes, purge);\n\t\t\tarr.forEach(this.stack,  purge);\n\t\t\tvar children = this.surface.children;\n\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\tif(shape.dispose){\n\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\tshape.dispose(children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\n\t\t\t\t// destroy title if it is a DOM node\n\t\t\t    domConstruct.destroy(this.chartTitle);\n\t\t\t}\n\t\t\tthis.surface.clear();\n\t\t\tthis.chartTitle = null;\n\n\t\t\tthis._renderChartBackground(dim, offsets);\n\t\t\tif(this._nativeClip){\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\n\t\t\t}else{\n\t\t\t\t// VML\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\n\t\t\t}\n\n\t\t\t// go over the stack backwards\n\t\t\tfunc.foldr(this.stack, function(z, plot){ return plot.render(dim, offsets), 0; }, 0);\n\n\t\t\tif(!this._nativeClip){\n\t\t\t\t// VML, matting-clipping\n\t\t\t\tthis._renderChartBackground(dim, offsets);\n\t\t\t}\n\n\t\t\t//create title: Whether to make chart title as a widget which extends dojox.charting.Element?\n\t\t\tif(this.title){\n\t\t\t\tthis._renderTitle(dim, offsets);\n\t\t\t}\n\n\t\t\t// go over axes\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(dim, offsets); });\n\n\t\t\tthis._makeClean();\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\t_renderTitle: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to render the chart title.\n\t\t\t// dim:\n\t\t\t//\t\tThe dimension object of the chart\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tvar forceHtmlLabels = (g.renderer == \"canvas\") && this.htmlLabels,\n\t\t\t\tlabelType = forceHtmlLabels || !has(\"ie\") && !has(\"opera\") && this.htmlLabels ? \"html\" : \"gfx\",\n\t\t\t\ttsize = g.normalizedLength(g.splitFontString(this.titleFont).size),\n\t\t\t\ttBox = g._base._getTextBox(this.title,{ font: this.titleFont });\n\t\t\t\t\n\t\t\tvar titleAlign = this.titleAlign;\n\t\t\tvar isRtl = has(\"dojo-bidi\") && this.isRightToLeft();\n\t\t\tvar posX = dim.width/2; // Default is middle.\n\t\t\tif(titleAlign === \"edge\"){\n\t\t\t\ttitleAlign = \"left\";\n\t\t\t\tif(isRtl){\n\t\t\t\t\tposX = dim.width - (offsets.r + tBox.w);\n\t\t\t\t}else {\n\t\t\t\t\tposX = offsets.l;\n\t\t\t\t}\n\t\t\t}else if(titleAlign != \"middle\"){\n\t\t\t\tif(isRtl){\n\t\t\t\t\t// We're in BIDI mode, reverse the alignment.\n\t\t\t\t\ttitleAlign = titleAlign === \"left\" ? \"right\" : \"left\";\n\t\t\t\t}\n\t\t\t\tif(titleAlign === \"left\"){\n\t\t\t\t\tposX = this.margins.l;\n\t\t\t\t}else if(titleAlign === \"right\"){\n\t\t\t\t\ttitleAlign = \"left\";\n\t\t\t\t\tposX = dim.width - (this.margins.l + tBox.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.chartTitle = common.createText[labelType](\n\t\t\t\tthis,\n\t\t\t\tthis.surface,\n\t\t\t\tposX,\n\t\t\t\tthis.titlePos==\"top\" ? tsize + this.margins.t : dim.height - this.margins.b,\n\t\t\t\ttitleAlign,\n\t\t\t\tthis.title,\n\t\t\t\tthis.titleFont,\n\t\t\t\tthis.titleFontColor\n\t\t\t);\n\t\t},\n\t\t_renderChartBackground: function(dim, offsets){\n\t\t\tvar t = this.theme, rect;\n\t\t\t// chart background\n\t\t\tvar fill   = this.fill   !== undefined ? this.fill   : (t.chart && t.chart.fill);\n\t\t\tvar stroke = this.stroke !== undefined ? this.stroke : (t.chart && t.chart.stroke);\n\n\t\t\t// TRT: support for \"inherit\" as a named value in a theme.\n\t\t\tif(fill == \"inherit\"){\n\t\t\t\t//\tfind the background color of the nearest ancestor node, and use that explicitly.\n\t\t\t\tvar node = this.node;\n\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\n\t\t\t\twhile(fill.a==0 && node!=document.documentElement){\n\t\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(fill){\n\t\t\t\tif(this._nativeClip){\n\t\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim),\n\t\t\t\t\t\t{ x:0, y: 0, width: dim.width + 1, height: dim.height + 1 });\n\t\t\t\t\tthis.surface.createRect({ width: dim.width + 1, height: dim.height + 1 }).setFill(fill);\n\t\t\t\t}else{\n\t\t\t\t\t// VML\n\t\t\t\t\tfill = Element.prototype._plotFill(fill, dim, offsets);\n\t\t\t\t\tif(offsets.l){\t// left\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  offsets.l,\n\t\t\t\t\t\t\theight: dim.height + 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.r){\t// right\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: dim.width - offsets.r,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  offsets.r + 1,\n\t\t\t\t\t\t\theight: dim.height + 2\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.t){\t// top\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  dim.width + 1,\n\t\t\t\t\t\t\theight: offsets.t\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.b){\t// bottom\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: dim.height - offsets.b,\n\t\t\t\t\t\t\twidth:  dim.width + 1,\n\t\t\t\t\t\t\theight: offsets.b + 2\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(stroke){\n\t\t\t\tthis.surface.createRect({\n\t\t\t\t\twidth:  dim.width - 1,\n\t\t\t\t\theight: dim.height - 1\n\t\t\t\t}).setStroke(stroke);\n\t\t\t}\n\t\t},\n\t\t_renderPlotBackground: function(dim, offsets, w, h){\n\t\t\tvar t = this.theme;\n\n\t\t\t// draw a plot background\n\t\t\tvar fill   = t.plotarea && t.plotarea.fill;\n\t\t\tvar stroke = t.plotarea && t.plotarea.stroke;\n\t\t\t// size might be neg if offsets are bigger that chart size this happens quite often at\n\t\t\t// initialization time if the chart widget is used in a BorderContainer\n\t\t\t// this will fail on IE/VML\n\t\t\tvar rect = {\n\t\t\t\tx: offsets.l - 1, y: offsets.t - 1,\n\t\t\t\twidth:  w + 2,\n\t\t\t\theight: h + 2\n\t\t\t};\n\t\t\tif(fill){\n\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim, offsets), rect);\n\t\t\t\tthis.surface.createRect(rect).setFill(fill);\n\t\t\t}\n\t\t\tif(stroke){\n\t\t\t\tthis.surface.createRect({\n\t\t\t\t\tx: offsets.l, y: offsets.t,\n\t\t\t\t\twidth:  w + 1,\n\t\t\t\t\theight: h + 1\n\t\t\t\t}).setStroke(stroke);\n\t\t\t}\n\t\t},\n\t\tdelayedRender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDelayed render, which is used to collect multiple updates\n\t\t\t//\t\twithin a delayInMs time window.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\tif(!this._delayedRenderHandle){\n\t\t\t\tthis._delayedRenderHandle = setTimeout(\n\t\t\t\t\tlang.hitch(this, function(){\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}),\n\t\t\t\t\tthis.delayInMs\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tconnectToPlot: function(name, object, method){\n\t\t\t// summary:\n\t\t\t//\t\tA convenience method to connect a function to a plot.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot as defined by addPlot.\n\t\t\t// object: Object\n\t\t\t//\t\tThe object to be connected.\n\t\t\t// method: Function\n\t\t\t//\t\tThe function to be executed.\n\t\t\t// returns: Array\n\t\t\t//\t\tA handle to the connection, as defined by dojo.connect (see dojo.connect).\n\t\t\treturn name in this.plots ? this.stack[this.plots[name]].connect(object, method) : null;\t//\tArray\n\t\t},\n\t\tfireEvent: function(seriesName, eventName, index){\n\t\t\t// summary:\n\t\t\t//\t\tFires a synthetic event for a series item.\n\t\t\t// seriesName: String\n\t\t\t//\t\tSeries name.\n\t\t\t// eventName: String\n\t\t\t//\t\tEvent name to simulate: onmouseover, onmouseout, onclick.\n\t\t\t// index: Number\n\t\t\t//\t\tValid data value index for the event.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(seriesName in this.runs){\n\t\t\t\tvar plotName = this.series[this.runs[seriesName]].plot;\n\t\t\t\tif(plotName in this.plots){\n\t\t\t\t\tvar plot = this.stack[this.plots[plotName]];\n\t\t\t\t\tif(plot){\n\t\t\t\t\t\tplot.fireEvent(seriesName, eventName, index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\t_makeClean: function(){\n\t\t\t// reset dirty flags\n\t\t\tarr.forEach(this.axes,   makeClean);\n\t\t\tarr.forEach(this.stack,  makeClean);\n\t\t\tarr.forEach(this.series, makeClean);\n\t\t\tthis.dirty = false;\n\t\t},\n\t\t_makeDirty: function(){\n\t\t\t// reset dirty flags\n\t\t\tarr.forEach(this.axes,   makeDirty);\n\t\t\tarr.forEach(this.stack,  makeDirty);\n\t\t\tarr.forEach(this.series, makeDirty);\n\t\t\tthis.dirty = true;\n\t\t},\n\t\t_invalidateDependentPlots: function(plotName, /* Boolean */ verticalAxis){\n\t\t\tif(plotName in this.plots){\n\t\t\t\tvar plot = this.stack[this.plots[plotName]], axis,\n\t\t\t\t\taxisName = verticalAxis ? \"vAxis\" : \"hAxis\";\n\t\t\t\tif(plot[axisName]){\n\t\t\t\t\taxis = this.axes[plot[axisName]];\n\t\t\t\t\tif(axis && axis.dependOnData()){\n\t\t\t\t\t\taxis.dirty = true;\n\t\t\t\t\t\t// find all plots and mark them dirty\n\t\t\t\t\t\tarr.forEach(this.stack, function(p){\n\t\t\t\t\t\t\tif(p[axisName] && p[axisName] == plot[axisName]){\n\t\t\t\t\t\t\t\tp.dirty = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tplot.dirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetDir : function(dir){\n\t\t\treturn this; \n\t\t},\n\t\t_resetLeftBottom: function(axis){\n\t\t},\n\t\tformatTruncatedLabel: function(element, label, labelType){\t\t\t\n\t\t}\n\t});\n\n\tfunction hSection(stats){\n\t\treturn {min: stats.hmin, max: stats.hmax};\n\t}\n\n\tfunction vSection(stats){\n\t\treturn {min: stats.vmin, max: stats.vmax};\n\t}\n\n\tfunction hReplace(stats, h){\n\t\tstats.hmin = h.min;\n\t\tstats.hmax = h.max;\n\t}\n\n\tfunction vReplace(stats, v){\n\t\tstats.vmin = v.min;\n\t\tstats.vmax = v.max;\n\t}\n\n\tfunction combineStats(target, source){\n\t\tif(target && source){\n\t\t\ttarget.min = Math.min(target.min, source.min);\n\t\t\ttarget.max = Math.max(target.max, source.max);\n\t\t}\n\t\treturn target || source;\n\t}\n\n\tfunction calculateAxes(stack, plotArea){\n\t\tvar plots = {}, axes = {};\n\t\tarr.forEach(stack, function(plot){\n\t\t\tvar stats = plots[plot.name] = plot.getSeriesStats();\n\t\t\tif(plot.hAxis){\n\t\t\t\taxes[plot.hAxis] = combineStats(axes[plot.hAxis], hSection(stats));\n\t\t\t}\n\t\t\tif(plot.vAxis){\n\t\t\t\taxes[plot.vAxis] = combineStats(axes[plot.vAxis], vSection(stats));\n\t\t\t}\n\t\t});\n\t\tarr.forEach(stack, function(plot){\n\t\t\tvar stats = plots[plot.name];\n\t\t\tif(plot.hAxis){\n\t\t\t\thReplace(stats, axes[plot.hAxis]);\n\t\t\t}\n\t\t\tif(plot.vAxis){\n\t\t\t\tvReplace(stats, axes[plot.vAxis]);\n\t\t\t}\n\t\t\tplot.initializeScalers(plotArea, stats);\n\t\t});\n\t}\n\t\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.Chart\", [Chart, BidiChart]) : Chart;\n});\n","define([\"./_base\", \"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/_base/window\", \"dojo/dom-geometry\",\n\t\t\"dojo/dom\", \"./shape\", \"./path\", \"./arc\", \"./matrix\", \"./decompose\", \"./bezierutils\"],\nfunction(g, lang, arr, declare, win, domGeom, dom, gs, pathLib, ga, m, decompose, bezierUtils ){\n\tvar canvas = g.canvas = {\n\t\t// summary:\n\t\t//\t\tThis the graphics rendering bridge for W3C Canvas compliant browsers.\n\t\t//\t\tSince Canvas is an immediate mode graphics api, with no object graph or\n\t\t//\t\teventing capabilities, use of this module alone will only add in drawing support.\n\t\t//\t\tThe additional module, canvasWithEvents extends this module with additional support\n\t\t//\t\tfor handling events on Canvas.  By default, the support for events is now included\n\t\t//\t\thowever, if only drawing capabilities are needed, canvas event module can be disabled\n\t\t//\t\tusing the dojoConfig option, canvasEvents:true|false.\n\t\t//\t\tThe id of the Canvas renderer is 'canvas'.  This id can be used when switch Dojo's\n\t\t//\t\tgraphics context between renderer implementations.  See dojox/gfx/_base.switchRenderer\n\t\t//\t\tAPI.\n\t};\n\tvar pattrnbuffer = null,\n\t\tmp = m.multiplyPoint,\n\t\tpi = Math.PI,\n\t\ttwoPI = 2 * pi,\n\t\thalfPI = pi /2,\n\t\textend = lang.extend;\n\n\tif(win.global.CanvasRenderingContext2D){\n\t\tvar ctx2d = win.doc.createElement(\"canvas\").getContext(\"2d\");\n\t\tvar hasNativeDash = typeof ctx2d.setLineDash == \"function\";\n\t\tvar hasFillText = typeof ctx2d.fillText == \"function\";\n\t}\n\n\tvar dasharray = {\n\t\tsolid:\t\t\t\t\"none\",\n\t\tshortdash:\t\t\t[4, 1],\n\t\tshortdot:\t\t\t[1, 1],\n\t\tshortdashdot:\t\t[4, 1, 1, 1],\n\t\tshortdashdotdot:\t[4, 1, 1, 1, 1, 1],\n\t\tdot:\t\t\t\t[1, 3],\n\t\tdash:\t\t\t\t[4, 3],\n\t\tlongdash:\t\t\t[8, 3],\n\t\tdashdot:\t\t\t[4, 3, 1, 3],\n\t\tlongdashdot:\t\t[8, 3, 1, 3],\n\t\tlongdashdotdot:\t\t[8, 3, 1, 3, 1, 3]\n\t};\n\n\tfunction drawDashedArc(/*CanvasRenderingContext2D*/ctx, /*Number[]*/dash,  /*int*/cx,  /*int*/cy,  /*int*/r, /*Number*/sa, /*Number*/ea, /*Boolean*/ccw, /*Boolean?*/apply, prevResidue){\n\t\tvar residue, angle, l = dash.length, i= 0;\n\t\t// if there's a previous dash residue from the previous arc, start with it.\n\t\tif(prevResidue){\n\t\t\tangle = prevResidue.l/r;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tangle = dash[0]/r;\n\t\t}\n\t\twhile(sa < ea){\n\t\t\t// if the dash segment length is longer than what remains to stroke, keep it for next arc. (aka residue)\n\t\t\tif(sa+angle > ea){\n\t\t\t\tresidue = {l: (sa+angle-ea)*r, i: i};\n\t\t\t\tangle = ea-sa;\n\t\t\t}\n\t\t\tif(!(i%2)){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(cx, cy, r, sa, sa+angle, ccw);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t}\n\t\t\tsa += angle;\n\t\t\t++i;\n\t\t\tangle = dash[i%l]/r;\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction splitToDashedBezier(/*Number[]*/points, /*Number[]*/dashArray, /*Number[]*/newPoints, /*Object*/prevResidue){\n\t\tvar residue = 0, t = 0, dash, i = 0;\n\t\tif(prevResidue){\n\t\t\tdash = prevResidue.l;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tdash = dashArray[0];\n\t\t}\n\t\twhile(t<1){\n\t\t\t// get the 't' corresponding to the given dash value.\n\t\t\tt = bezierUtils.tAtLength(points, dash);\n\t\t\tif(t==1){\n\t\t\t\tvar rl = bezierUtils.computeLength(points);\n\t\t\t\tresidue = {l: dash-rl, i: i};\n\t\t\t}\n\t\t\t// split bezier at t: left part is the \"dash\" curve, right part is the remaining bezier points\n\t\t\tvar curves = bezierUtils.splitBezierAtT(points, t);\n\t\t\tif(!(i%2)){\n\t\t\t\t// only keep the \"dash\" curve\n\t\t\t\tnewPoints.push(curves[0]);\n\t\t\t}\n\t\t\tpoints = curves[1];\n\t\t\t++i;\n\t\t\tdash = dashArray[i%dashArray.length];\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction toDashedCurveTo(/*Array||CanvasRenderingContext2D*/ctx, /*shape.Path*/shape, /*Number[]*/points, /*Object*/prevResidue){\n\t\t// summary:\n\t\t//\t\tBuilds a set of bezier (cubic || quadratic)curveTo' canvas instructions that represents a dashed stroke of the specified bezier geometry.\n\n\t\tvar pts = [shape.last.x, shape.last.y].concat(points),\n\t\t\tquadratic = points.length === 4, ctx2d = !(ctx instanceof Array),\n\t\t\tapi = quadratic ? \"quadraticCurveTo\" : \"bezierCurveTo\",\n\t\t\tcurves = [];\n\t\tvar residue = splitToDashedBezier(pts, shape.canvasDash, curves, prevResidue);\n\t\tfor(var c=0; c<curves.length;++c){\n\t\t\tvar curve = curves[c];\n\t\t\tif(ctx2d){\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\tctx[api].apply(ctx, curve.slice(2));\n\t\t\t}else{\n\t\t\t\tctx.push(\"moveTo\", [curve[0], curve[1]]);\n\t\t\t\tctx.push(api, curve.slice(2));\n\t\t\t}\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction toDashedLineTo(/*Array||CanvasRenderingContext2D*/ctx, /*shape.Shape*/shape, /*int*/x1, /*int*/y1, /*int*/x2, /*int*/y2, /*Object*/prevResidue){\n\t\t// summary:\n\t\t//\t\tBuilds a set of moveTo/lineTo' canvas instructions that represents a dashed stroke of the specified line geometry.\n\n\t\tvar residue = 0, r = 0, dal = 0, tlength = bezierUtils.distance(x1, y1, x2, y2), i = 0, dash = shape.canvasDash,\n\t\t\tprevx = x1, prevy = y1, x, y, ctx2d = !(ctx instanceof Array);\n\t\tif(prevResidue){\n\t\t\tdal=prevResidue.l;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tdal += dash[0];\n\t\t}\n\t\twhile(Math.abs(1-r)>0.01){\n\t\t\tif(dal>tlength){\n\t\t\t\tresidue = {l:dal-tlength,i:i};\n\t\t\t\tdal=tlength;\n\t\t\t}\n\t\t\tr = dal/tlength;\n\t\t\tx = x1 + (x2-x1)*r;\n\t\t\ty = y1 + (y2-y1)*r;\n\t\t\tif(!(i++%2)){\n\t\t\t\tif(ctx2d){\n\t\t\t\t\tctx.moveTo(prevx, prevy);\n\t\t\t\t\tctx.lineTo(x, y);\n\t\t\t\t}else{\n\t\t\t\t\tctx.push(\"moveTo\", [prevx, prevy]);\n\t\t\t\t\tctx.push(\"lineTo\", [x, y]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevx = x;\n\t\t\tprevy = y;\n\t\t\tdal += dash[i%dash.length];\n\t\t}\n\t\treturn residue;\n\t}\n\n\tcanvas.Shape = declare(\"dojox.gfx.canvas.Shape\", gs.Shape, {\n\t\t_render: function(/* Object */ ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the shape\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderClip(ctx);\n\t\t\tthis._renderShape(ctx);\n\t\t\tthis._renderFill(ctx, true);\n\t\t\tthis._renderStroke(ctx, true);\n\t\t\tctx.restore();\n\t\t},\n\t\t_renderClip: function(ctx){\n\t\t\tif (this.canvasClip){\n\t\t\t\tthis.canvasClip.render(ctx);\n\t\t\t\tctx.clip();\n\t\t\t}\n\t\t},\n\t\t_renderTransform: function(/* Object */ ctx){\n\t\t\tif(\"canvasTransform\" in this){\n\t\t\t\tvar t = this.canvasTransform;\n\t\t\t\tctx.translate(t.dx, t.dy);\n\t\t\t\tctx.rotate(t.angle2);\n\t\t\t\tctx.scale(t.sx, t.sy);\n\t\t\t\tctx.rotate(t.angle1);\n\t\t\t\t// The future implementation when vendors catch up with the spec:\n\t\t\t\t// var t = this.matrix;\n\t\t\t\t// ctx.transform(t.xx, t.yx, t.xy, t.yy, t.dx, t.dy);\n\t\t\t}\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\t// nothing\n\t\t},\n\t\t_renderFill: function(/* Object */ ctx, /* Boolean */ apply){\n\t\t\tif(\"canvasFill\" in this){\n\t\t\t\tvar fs = this.fillStyle;\n\t\t\t\tif(\"canvasFillImage\" in this){\n\t\t\t\t\tvar w = fs.width, h = fs.height,\n\t\t\t\t\t\tiw = this.canvasFillImage.width, ih = this.canvasFillImage.height,\n\t\t\t\t\t\t// let's match the svg default behavior wrt. aspect ratio: xMidYMid meet\n\t\t\t\t\t\tsx = w == iw ? 1 : w / iw,\n\t\t\t\t\t\tsy = h == ih ? 1 : h / ih,\n\t\t\t\t\t\ts = Math.min(sx,sy), //meet->math.min , slice->math.max\n\t\t\t\t\t\tdx = (w - s * iw)/2,\n\t\t\t\t\t\tdy = (h - s * ih)/2;\n\t\t\t\t\t// the buffer used to scaled the image\n\t\t\t\t\tpattrnbuffer.width = w; pattrnbuffer.height = h;\n\t\t\t\t\tvar copyctx = pattrnbuffer.getContext(\"2d\");\n\t\t\t\t\tcopyctx.clearRect(0, 0, w, h);\n\t\t\t\t\tcopyctx.drawImage(this.canvasFillImage, 0, 0, iw, ih, dx, dy, s*iw, s*ih);\n\t\t\t\t\tthis.canvasFill = ctx.createPattern(pattrnbuffer, \"repeat\");\n\t\t\t\t\tdelete this.canvasFillImage;\n\t\t\t\t}\n\t\t\t\tctx.fillStyle = this.canvasFill;\n\t\t\t\tif(apply){\n\t\t\t\t\t// offset the pattern\n\t\t\t\t\tif (fs.type===\"pattern\" && (fs.x !== 0 || fs.y !== 0)) {\n\t\t\t\t\t\tctx.translate(fs.x,fs.y);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tctx.fillStyle = \"rgba(0,0,0,0.0)\";\n\t\t\t}\n\t\t},\n\t\t_renderStroke: function(/* Object */ ctx, /* Boolean */ apply){\n\t\t\tvar s = this.strokeStyle;\n\t\t\tif(s){\n\t\t\t\tctx.strokeStyle = s.color.toString();\n\t\t\t\tctx.lineWidth = s.width;\n\t\t\t\tctx.lineCap = s.cap;\n\t\t\t\tif(typeof s.join == \"number\"){\n\t\t\t\t\tctx.lineJoin = \"miter\";\n\t\t\t\t\tctx.miterLimit = s.join;\n\t\t\t\t}else{\n\t\t\t\t\tctx.lineJoin = s.join;\n\t\t\t\t}\n\t\t\t\tif(this.canvasDash){\n\t\t\t\t\tif(hasNativeDash){\n\t\t\t\t\t\tctx.setLineDash(this.canvasDash);\n\t\t\t\t\t\tif(apply){ ctx.stroke(); }\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._renderDashedStroke(ctx, apply);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(apply){ ctx.stroke(); }\n\t\t\t\t}\n\t\t\t}else if(!apply){\n\t\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.0)\";\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){},\n\n\t\t// events are not implemented\n\t\tgetEventSource: function(){ return null; },\n\t\ton:\t\t\t\tfunction(){},\n\t\tconnect:\t\tfunction(){},\n\t\tdisconnect:\t\tfunction(){},\n\n\t\tcanvasClip:null,\n\t\tsetClip: function(/*Object*/clip){\n\t\t\tthis.inherited(arguments);\n\t\t\tvar clipType = clip ? \"width\" in clip ? \"rect\" :\n\t\t\t\t\t\t\t\"cx\" in clip ? \"ellipse\" :\n\t\t\t\t\t\t\t\"points\" in clip ? \"polyline\" : \"d\" in clip ? \"path\" : null : null;\n\t\t\tif(clip && !clipType){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.canvasClip = clip ? makeClip(clipType, clip) : null;\n\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tvar makeClip = function(clipType, geometry){\n\t\tswitch(clipType){\n\t\t\tcase \"ellipse\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasEllipse: makeEllipse({shape:geometry}),\n\t\t\t\t\trender: function(ctx){return canvas.Ellipse.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t\tcase \"rect\":\n\t\t\t\treturn {\n\t\t\t\t\tshape: lang.delegate(geometry,{r:0}),\n\t\t\t\t\trender: function(ctx){return canvas.Rect.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t\tcase \"path\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasPath: makeClipPath(geometry),\n\t\t\t\t\trender: function(ctx){this.canvasPath._renderShape(ctx);}\n\t\t\t\t};\n\t\t\tcase \"polyline\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasPolyline: geometry.points,\n\t\t\t\t\trender: function(ctx){return canvas.Polyline.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tvar makeClipPath = function(geo){\n\t\tvar p = new dojox.gfx.canvas.Path();\n\t\tp.canvasPath = [];\n\t\tp._setPath(geo.d);\n\t\treturn p;\n\t};\n\n\tvar modifyMethod = function(shape, method, extra){\n\t\tvar old = shape.prototype[method];\n\t\tshape.prototype[method] = extra ?\n\t\t\tfunction(){\n\t\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\t\told.apply(this, arguments);\n\t\t\t\textra.call(this);\n\t\t\t\treturn this;\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\t\treturn old.apply(this, arguments);\n\t\t\t};\n\t};\n\n\tmodifyMethod(canvas.Shape, \"setTransform\",\n\t\tfunction(){\n\t\t\t// prepare Canvas-specific structures\n\t\t\tif(this.matrix){\n\t\t\t\tthis.canvasTransform = g.decompose(this.matrix);\n\t\t\t}else{\n\t\t\t\tdelete this.canvasTransform;\n\t\t\t}\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setFill\",\n\t\tfunction(){\n\t\t\t// prepare Canvas-specific structures\n\t\t\tvar fs = this.fillStyle, f;\n\t\t\tif(fs){\n\t\t\t\tif(typeof(fs) == \"object\" && \"type\" in fs){\n\t\t\t\t\tvar ctx = this.surface.rawNode.getContext(\"2d\");\n\t\t\t\t\tswitch(fs.type){\n\t\t\t\t\t\tcase \"linear\":\n\t\t\t\t\t\tcase \"radial\":\n\t\t\t\t\t\t\tf = fs.type == \"linear\" ?\n\t\t\t\t\t\t\t\tctx.createLinearGradient(fs.x1, fs.y1, fs.x2, fs.y2) :\n\t\t\t\t\t\t\t\tctx.createRadialGradient(fs.cx, fs.cy, 0, fs.cx, fs.cy, fs.r);\n\t\t\t\t\t\t\tarr.forEach(fs.colors, function(step){\n\t\t\t\t\t\t\t\tf.addColorStop(step.offset, g.normalizeColor(step.color).toString());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"pattern\":\n\t\t\t\t\t\t\tif (!pattrnbuffer) {\n\t\t\t\t\t\t\t\tpattrnbuffer = document.createElement(\"canvas\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// no need to scale the image since the canvas.createPattern uses\n\t\t\t\t\t\t\t// the original image data and not the scaled ones (see spec.)\n\t\t\t\t\t\t\t// the scaling needs to be done at rendering time in a context buffer\n\t\t\t\t\t\t\tvar img =new Image();\n\t\t\t\t\t\t\tthis.surface.downloadImage(img, fs.src);\n\t\t\t\t\t\t\tthis.canvasFillImage = img;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// Set fill color using CSS RGBA func style\n\t\t\t\t\tf = fs.toString();\n\t\t\t\t}\n\t\t\t\tthis.canvasFill = f;\n\t\t\t}else{\n\t\t\t\tdelete this.canvasFill;\n\t\t\t}\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setStroke\",\n\t\tfunction(){\n\t\t\tvar st = this.strokeStyle;\n\t\t\tif(st){\n\t\t\t\tvar da = this.strokeStyle.style.toLowerCase();\n\t\t\t\tif(da in dasharray){\n\t\t\t\t\tda = dasharray[da];\n\t\t\t\t}\n\t\t\t\tif(da instanceof Array){\n\t\t\t\t\tda = da.slice();\n\t\t\t\t\tthis.canvasDash = da;\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor(i = 0; i < da.length; ++i){\n\t\t\t\t\t\tda[i] *= st.width;\n\t\t\t\t\t}\n\t\t\t\t\tif(st.cap != \"butt\"){\n\t\t\t\t\t\tfor(i = 0; i < da.length; i += 2){\n\t\t\t\t\t\t\tda[i] -= st.width;\n\t\t\t\t\t\t\tif(da[i] < 1){ da[i] = 1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 1; i < da.length; i += 2){\n\t\t\t\t\t\t\tda[i] += st.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tdelete this.canvasDash;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tdelete this.canvasDash;\n\t\t\t}\n\t\t\tthis._needsDash = !hasNativeDash && !!this.canvasDash;\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setShape\");\n\n\tcanvas.Group = declare(\"dojox.gfx.canvas.Group\", canvas.Shape, {\n\t\t// summary:\n\t\t//\t\ta group shape (Canvas), which can be used\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t\tconstructor: function(){\n\t\t\tgs.Container._init.call(this);\n\t\t},\n\t\t_render: function(/* Object */ ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the group\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderClip(ctx);\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tthis.children[i]._render(ctx);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\n\t\t\t//\t\tthe instance is considered disposed and should not be used anymore.\n\n\t\t\t// don't call canvas impl to avoid makeDirty'\n\t\t\tgs.Container.clear.call(this, true);\n\t\t\t// avoid this.inherited\n\t\t\tcanvas.Shape.prototype.destroy.apply(this, arguments);\n\t\t}\n\t});\n\n\n\n\tcanvas.Rect = declare(\"dojox.gfx.canvas.Rect\", [canvas.Shape, gs.Rect], {\n\t\t// summary:\n\t\t//\t\ta rectangle shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape, r = Math.min(s.r, s.height / 2, s.width / 2),\n\t\t\t\txl = s.x, xr = xl + s.width, yt = s.y, yb = yt + s.height,\n\t\t\t\txl2 = xl + r, xr2 = xr - r, yt2 = yt + r, yb2 = yb - r;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(xl2, yt);\n\t\t\tif(r){\n\t\t\t\tctx.arc(xr2, yt2, r, -halfPI, 0, false);\n\t\t\t\tctx.arc(xr2, yb2, r, 0, halfPI, false);\n\t\t\t\tctx.arc(xl2, yb2, r, halfPI, pi, false);\n\t\t\t\tctx.arc(xl2, yt2, r, pi, pi + halfPI, false);\n\t\t\t}else{\n\t\t\t\tctx.lineTo(xr2, yt);\n\t\t\t\tctx.lineTo(xr, yb2);\n\t\t\t\tctx.lineTo(xl2, yb);\n\t\t\t\tctx.lineTo(xl, yt2);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape, residue, r = Math.min(s.r, s.height / 2, s.width / 2),\n\t\t\t\txl = s.x, xr = xl + s.width, yt = s.y, yb = yt + s.height,\n\t\t\t\txl2 = xl + r, xr2 = xr - r, yt2 = yt + r, yb2 = yb - r;\n\t\t\tif(r){\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl2, yt, xr2, yt);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xr2, yt2, r, -halfPI, 0, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr, yt2, xr, yb2, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xr2, yb2, r, 0, halfPI, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr2, yb, xl2, yb, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xl2, yb2, r, halfPI, pi, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl, yb2, xl, yt2,residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tdrawDashedArc(ctx, this.canvasDash, xl2, yt2, r, pi, pi + halfPI, false, apply, residue);\n\t\t\t}else{\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl2, yt, xr2, yt);\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr2, yt, xr, yb2, residue);\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr, yb2, xl2, yb, residue);\n\t\t\t\ttoDashedLineTo(ctx, this, xl2, yb, xl, yt2, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tvar bezierCircle = [];\n\t(function(){\n\t\tvar u = ga.curvePI4;\n\t\tbezierCircle.push(u.s, u.c1, u.c2, u.e);\n\t\tfor(var a = 45; a < 360; a += 45){\n\t\t\tvar r = m.rotateg(a);\n\t\t\tbezierCircle.push(mp(r, u.c1), mp(r, u.c2), mp(r, u.e));\n\t\t}\n\t})();\n\n\tvar makeEllipse = function(shape){\n\t\t// prepare Canvas-specific structures\n\t\tvar t, c1, c2, r = [], s = shape.shape,\n\t\t\tM = m.normalize([m.translate(s.cx, s.cy), m.scale(s.rx, s.ry)]);\n\t\tt = mp(M, bezierCircle[0]);\n\t\tr.push([t.x, t.y]);\n\t\tfor(var i = 1; i < bezierCircle.length; i += 3){\n\t\t\tc1 = mp(M, bezierCircle[i]);\n\t\t\tc2 = mp(M, bezierCircle[i + 1]);\n\t\t\tt  = mp(M, bezierCircle[i + 2]);\n\t\t\tr.push([c1.x, c1.y, c2.x, c2.y, t.x, t.y]);\n\t\t}\n\t\tif(shape._needsDash){\n\t\t\tvar points = [], p1 = r[0];\n\t\t\tfor(i = 1; i < r.length; ++i){\n\t\t\t\tvar curves = [];\n\t\t\t\tsplitToDashedBezier(p1.concat(r[i]), shape.canvasDash, curves);\n\t\t\t\tp1 = [r[i][4],r[i][5]];\n\t\t\t\tpoints.push(curves);\n\t\t\t}\n\t\t\tshape._dashedPoints = points;\n\t\t}\n\t\treturn r;\n\t};\n\n\tcanvas.Ellipse = declare(\"dojox.gfx.canvas.Ellipse\", [canvas.Shape, gs.Ellipse], {\n\t\t// summary:\n\t\t//\t\tan ellipse shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.canvasEllipse = makeEllipse(this);\n\t\t\treturn this;\n\t\t},\n\t\tsetStroke: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!hasNativeDash){\n\t\t\t\tthis.canvasEllipse = makeEllipse(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar r = this.canvasEllipse, i;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo.apply(ctx, r[0]);\n\t\t\tfor(i = 1; i < r.length; ++i){\n\t\t\t\tctx.bezierCurveTo.apply(ctx, r[i]);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar r = this._dashedPoints;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; ++i){\n\t\t\t\tvar curves = r[i];\n\t\t\t\tfor(var j=0;j<curves.length;++j){\n\t\t\t\t\tvar curve = curves[j];\n\t\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\t\tctx.bezierCurveTo(curve[2],curve[3],curve[4],curve[5],curve[6],curve[7]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Circle = declare(\"dojox.gfx.canvas.Circle\", [canvas.Shape, gs.Circle], {\n\t\t// summary:\n\t\t//\t\ta circle shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(s.cx, s.cy, s.r, 0, twoPI, 1);\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape;\n\t\t\tvar startAngle = 0, angle, l = this.canvasDash.length; i=0;\n\t\t\twhile(startAngle < twoPI){\n\t\t\t\tangle = this.canvasDash[i%l]/s.r;\n\t\t\t\tif(!(i%2)){\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(s.cx, s.cy, s.r, startAngle, startAngle+angle, 0);\n\t\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\t}\n\t\t\t\tstartAngle+=angle;\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t});\n\n\tcanvas.Line = declare(\"dojox.gfx.canvas.Line\", [canvas.Shape, gs.Line], {\n\t\t// summary:\n\t\t//\t\ta line shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(s.x1, s.y1);\n\t\t\tctx.lineTo(s.x2, s.y2);\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\ttoDashedLineTo(ctx, this, s.x1, s.y1, s.x2, s.y2);\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Polyline = declare(\"dojox.gfx.canvas.Polyline\", [canvas.Shape, gs.Polyline], {\n\t\t// summary:\n\t\t//\t\ta polyline/polygon shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tvar p = this.shape.points, f = p[0], r, c, i;\n\t\t\tthis.bbox = null;\n\t\t\t// normalize this.shape.points as array of points: [{x,y}, {x,y}, ...]\n\t\t\tthis._normalizePoints();\n\t\t\t// after _normalizePoints, if shape.points was [x1,y1,x2,y2,..], shape.points references a new array\n\t\t\t// and p references the original points array\n\t\t\t// prepare Canvas-specific structures, if needed\n\t\t\tif(p.length){\n\t\t\t\tif(typeof f == \"number\"){ // already in the canvas format [x1,y1,x2,y2,...]\n\t\t\t\t\tr = p;\n\t\t\t\t}else{ // convert into canvas-specific format\n\t\t\t\t\tr = [];\n\t\t\t\t\tfor(i=0; i < p.length; ++i){\n\t\t\t\t\t\tc = p[i];\n\t\t\t\t\t\tr.push(c.x, c.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tr = [];\n\t\t\t}\n\t\t\tthis.canvasPolyline = r;\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar p = this.canvasPolyline;\n\t\t\tif(p.length){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(p[0], p[1]);\n\t\t\t\tfor(var i = 2; i < p.length; i += 2){\n\t\t\t\t\tctx.lineTo(p[i], p[i + 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar p = this.canvasPolyline, residue = 0;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < p.length; i += 2){\n\t\t\t\tresidue = toDashedLineTo(ctx, this, p[i], p[i + 1], p[i + 2], p[i + 3], residue);\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Image = declare(\"dojox.gfx.canvas.Image\", [canvas.Shape, gs.Image], {\n\t\t// summary:\n\t\t//\t\tan image shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\t// prepare Canvas-specific structures\n\t\t\tvar img = new Image();\n\t\t\tthis.surface.downloadImage(img, this.shape.src);\n\t\t\tthis.canvasImage = img;\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.drawImage(this.canvasImage, s.x, s.y, s.width, s.height);\n\t\t}\n\t});\n\n\tcanvas.Text = declare(\"dojox.gfx.canvas.Text\", [canvas.Shape, gs.Text], {\n\t\t_setFont:function(){\n\t\t\tif(this.fontStyle){\n\t\t\t\tthis.canvasFont = g.makeFontString(this.fontStyle);\n\t\t\t}else{\n\t\t\t\tdelete this.canvasFont;\n\t\t\t}\n\t\t},\n\n\t\tgetTextWidth: function(){\n\t\t\t// summary:\n\t\t\t//\t\tget the text width in pixels\n\t\t\tvar s = this.shape, w = 0, ctx;\n\t\t\tif(s.text){\n\t\t\t\tctx = this.surface.rawNode.getContext(\"2d\");\n\t\t\t\tctx.save();\n\t\t\t\tthis._renderTransform(ctx);\n\t\t\t\tthis._renderFill(ctx, false);\n\t\t\t\tthis._renderStroke(ctx, false);\n\t\t\t\tif (this.canvasFont)\n\t\t\t\t\tctx.font = this.canvasFont;\n\t\t\t\tw = ctx.measureText(s.text).width;\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t\treturn w;\n\t\t},\n\n\t\t// override to apply first fill and stroke (\n\t\t// the base implementation is for path-based shape that needs to first define the path then to fill/stroke it.\n\t\t// Here, we need the fillstyle or strokestyle to be set before calling fillText/strokeText.\n\t\t_render: function(/* Object */ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the shape\n\t\t\t// ctx: Object\n\t\t\t//\t\tthe drawing context.\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderFill(ctx, false);\n\t\t\tthis._renderStroke(ctx, false);\n\t\t\tthis._renderShape(ctx);\n\t\t\tctx.restore();\n\t\t},\n\n\t\t_renderShape: function(ctx){\n\t\t\t// summary:\n\t\t\t//\t\ta text shape (Canvas)\n\t\t\t// ctx: Object\n\t\t\t//\t\tthe drawing context.\n\t\t\tvar ta, s = this.shape;\n\t\t\tif(!s.text){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// text align\n\t\t\tta = s.align === 'middle' ? 'center' : s.align;\n\t\t\tctx.textAlign = ta;\n\t\t\tif(this.canvasFont){\n\t\t\t\tctx.font = this.canvasFont;\n\t\t\t}\n\t\t\tif(this.canvasFill){\n\t\t\t\tctx.fillText(s.text, s.x, s.y);\n\t\t\t}\n\t\t\tif(this.strokeStyle){\n\t\t\t\tctx.beginPath(); // fix bug in FF3.6. Fixed in FF4b8\n\t\t\t\tctx.strokeText(s.text, s.x, s.y);\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t}\n\t});\n\tmodifyMethod(canvas.Text, \"setFont\");\n\n\tif(!hasFillText){\n\t\tcanvas.Text.extend({\n\t\t\tgetTextWidth: function(){\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tgetBoundingBox: function(){\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t_renderShape: function(){\n\t\t\t}\n\t\t});\n\t}\n\n\tvar pathRenderers = {\n\t\t\tM: \"_moveToA\", m: \"_moveToR\",\n\t\t\tL: \"_lineToA\", l: \"_lineToR\",\n\t\t\tH: \"_hLineToA\", h: \"_hLineToR\",\n\t\t\tV: \"_vLineToA\", v: \"_vLineToR\",\n\t\t\tC: \"_curveToA\", c: \"_curveToR\",\n\t\t\tS: \"_smoothCurveToA\", s: \"_smoothCurveToR\",\n\t\t\tQ: \"_qCurveToA\", q: \"_qCurveToR\",\n\t\t\tT: \"_qSmoothCurveToA\", t: \"_qSmoothCurveToR\",\n\t\t\tA: \"_arcTo\", a: \"_arcTo\",\n\t\t\tZ: \"_closePath\", z: \"_closePath\"\n\t\t};\n\n\n\tcanvas.Path = declare(\"dojox.gfx.canvas.Path\", [canvas.Shape, pathLib.Path], {\n\t\t// summary:\n\t\t//\t\ta path shape (Canvas)\n\t\tconstructor: function(){\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\tsetShape: function(){\n\t\t\tthis.canvasPath = [];\n\t\t\tthis._dashedPath= [];\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\t\tsetStroke:function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!hasNativeDash){\n\t\t\t\tthis.segmented = false;\n\t\t\t\tthis._confirmSegmented();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_setPath: function(){\n\t\t\tthis._dashResidue = null;\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t_updateWithSegment: function(segment){\n\t\t\tvar last = lang.clone(this.last);\n\t\t\tthis[pathRenderers[segment.action]](this.canvasPath, segment.action, segment.args, this._needsDash ? this._dashedPath : null);\n\t\t\tthis.last = last;\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar r = this.canvasPath;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; i += 2){\n\t\t\t\tctx[r[i]].apply(ctx, r[i + 1]);\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: hasNativeDash ? function(){} : function(ctx, apply){\n\t\t\tvar r = this._dashedPath;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; i += 2){\n\t\t\t\tctx[r[i]].apply(ctx, r[i + 1]);\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t},\n\t\t_moveToA: function(result, action, args, doDash){\n\t\t\tresult.push(\"moveTo\", [args[0], args[1]]);\n\t\t\tif(doDash) doDash.push(\"moveTo\", [args[0], args[1]]);\n\t\t\tfor(var i = 2; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [args[i], args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, args[i - 2], args[i - 1], args[i], args[i + 1], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_moveToR: function(result, action, args, doDash){\n\t\t\tvar pts;\n\t\t\tif(\"x\" in this.last){\n\t\t\t\tpts = [this.last.x += args[0], this.last.y += args[1]];\n\t\t\t\tresult.push(\"moveTo\", pts);\n\t\t\t\tif(doDash) doDash.push(\"moveTo\", pts);\n\t\t\t}else{\n\t\t\t\tpts = [this.last.x = args[0], this.last.y = args[1]];\n\t\t\t\tresult.push(\"moveTo\", pts);\n\t\t\t\tif(doDash) doDash.push(\"moveTo\", pts);\n\t\t\t}\n\t\t\tfor(var i = 2; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y += args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_lineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, this.last.x, this.last.y, args[i], args[i + 1], this._dashResidue);\n\t\t\t\tresult.push(\"lineTo\", [args[i], args[i + 1]]);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_lineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y += args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_hLineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [args[i], this.last.y]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], args[i], this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_hLineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_vLineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x, args[i]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, args[i], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_vLineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x, this.last.y += args[i]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_curveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 6){\n\t\t\t\tresult.push(\"bezierCurveTo\", args.slice(i, i + 6));\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl.x = args[args.length - 4];\n\t\t\tthis.lastControl.y = args[args.length - 3];\n\t\t\tthis.lastControl.type = \"C\";\n\t\t},\n\t\t_curveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 6){\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1],\n\t\t\t\t\tthis.lastControl.x = this.last.x + args[i + 2],\n\t\t\t\t\tthis.lastControl.y = this.last.y + args[i + 3],\n\t\t\t\t\tthis.last.x + args[i + 4],\n\t\t\t\t\tthis.last.y + args[i + 5]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.last.x += args[i + 4];\n\t\t\t\tthis.last.y += args[i + 5];\n\t\t\t}\n\t\t\tthis.lastControl.type = \"C\";\n\t\t},\n\t\t_smoothCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tvar valid = this.lastControl.type == \"C\";\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tvalid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tvalid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\targs[i],\n\t\t\t\t\targs[i + 1],\n\t\t\t\t\targs[i + 2],\n\t\t\t\t\targs[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.lastControl.x = args[i];\n\t\t\t\tthis.lastControl.y = args[i + 1];\n\t\t\t\tthis.lastControl.type = \"C\";\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t},\n\t\t_smoothCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tvar valid = this.lastControl.type == \"C\";\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tvalid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tvalid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1],\n\t\t\t\t\tthis.last.x + args[i + 2],\n\t\t\t\t\tthis.last.y + args[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.lastControl.x = this.last.x + args[i];\n\t\t\t\tthis.lastControl.y = this.last.y + args[i + 1];\n\t\t\t\tthis.lastControl.type = \"C\";\n\t\t\t\tthis.last.x += args[i + 2];\n\t\t\t\tthis.last.y += args[i + 3];\n\t\t\t}\n\t\t},\n\t\t_qCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tresult.push(\"quadraticCurveTo\", args.slice(i, i + 4));\n\t\t\t}\n\t\t\tif(doDash)\n\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl.x = args[args.length - 4];\n\t\t\tthis.lastControl.y = args[args.length - 3];\n\t\t\tthis.lastControl.type = \"Q\";\n\t\t},\n\t\t_qCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = this.last.x + args[i],\n\t\t\t\t\tthis.lastControl.y = this.last.y + args[i + 1],\n\t\t\t\t\tthis.last.x + args[i + 2],\n\t\t\t\t\tthis.last.y + args[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.last.x += args[i + 2];\n\t\t\t\tthis.last.y += args[i + 3];\n\t\t\t}\n\t\t\tthis.lastControl.type = \"Q\";\n\t\t},\n\t\t_qSmoothCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tvar valid = this.lastControl.type == \"Q\";\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = valid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tthis.lastControl.y = valid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\targs[i],\n\t\t\t\t\targs[i + 1]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.lastControl.type = \"Q\";\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t},\n\t\t_qSmoothCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tvar valid = this.lastControl.type == \"Q\";\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = valid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tthis.lastControl.y = valid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.lastControl.type = \"Q\";\n\t\t\t\tthis.last.x += args[i];\n\t\t\t\tthis.last.y += args[i + 1];\n\t\t\t}\n\t\t},\n\t\t_arcTo: function(result, action, args, doDash){\n\t\t\tvar relative = action == \"a\";\n\t\t\tfor(var i = 0; i < args.length; i += 7){\n\t\t\t\tvar x1 = args[i + 5], y1 = args[i + 6];\n\t\t\t\tif(relative){\n\t\t\t\t\tx1 += this.last.x;\n\t\t\t\t\ty1 += this.last.y;\n\t\t\t\t}\n\t\t\t\tvar arcs = ga.arcAsBezier(\n\t\t\t\t\tthis.last, args[i], args[i + 1], args[i + 2],\n\t\t\t\t\targs[i + 3] ? 1 : 0, args[i + 4] ? 1 : 0,\n\t\t\t\t\tx1, y1\n\t\t\t\t);\n\t\t\t\tarr.forEach(arcs, function(p){\n\t\t\t\t\tresult.push(\"bezierCurveTo\", p);\n\t\t\t\t});\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, p, this._dashResidue);\n\t\t\t\tthis.last.x = x1;\n\t\t\t\tthis.last.y = y1;\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_closePath: function(result, action, args, doDash){\n\t\t\tresult.push(\"closePath\", []);\n\t\t\tif(doDash)\n\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, this.last.x, this.last.y, doDash[1][0], doDash[1][1], this._dashResidue);\n\t\t\tthis.lastControl = {};\n\t\t}\n\t});\n\tarr.forEach([\"moveTo\", \"lineTo\", \"hLineTo\", \"vLineTo\", \"curveTo\",\n\t\t\"smoothCurveTo\", \"qCurveTo\", \"qSmoothCurveTo\", \"arcTo\", \"closePath\"],\n\t\tfunction(method){ modifyMethod(canvas.Path, method); }\n\t);\n\n\tcanvas.TextPath = declare(\"dojox.gfx.canvas.TextPath\", [canvas.Shape, pathLib.TextPath], {\n\t\t// summary:\n\t\t//\t\ta text shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\t// nothing for the moment\n\t\t},\n\t\t_setText: function(){\n\t\t\t// not implemented\n\t\t},\n\t\t_setFont: function(){\n\t\t\t// not implemented\n\t\t}\n\t});\n\n\tcanvas.Surface = declare(\"dojox.gfx.canvas.Surface\", gs.Surface, {\n\t\t// summary:\n\t\t//\t\ta surface object to be used for drawings (Canvas)\n\t\tconstructor: function(){\n\t\t\tgs.Container._init.call(this);\n\t\t\tthis.pendingImageCount = 0;\n\t\t\tthis.makeDirty();\n\t\t},\n\t\tdestroy: function(){\n\t\t\tgs.Container.clear.call(this, true); // avoid makeDirty() from canvas.Container.clear impl.\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tsetDimensions: function(width, height){\n\t\t\t// summary:\n\t\t\t//\t\tsets the width and height of the rawNode\n\t\t\t// width: String\n\t\t\t//\t\twidth of surface, e.g., \"100px\"\n\t\t\t// height: String\n\t\t\t//\t\theight of surface, e.g., \"100px\"\n\t\t\tthis.width  = g.normalizedLength(width);\t// in pixels\n\t\t\tthis.height = g.normalizedLength(height);\t// in pixels\n\t\t\tif(!this.rawNode) return this;\n\t\t\tvar dirty = false;\n\t\t\tif (this.rawNode.width != this.width){\n\t\t\t\tthis.rawNode.width = this.width;\n\t\t\t\tdirty = true;\n\t\t\t}\n\t\t\tif (this.rawNode.height != this.height){\n\t\t\t\tthis.rawNode.height = this.height;\n\t\t\t\tdirty = true;\n\t\t\t}\n\t\t\tif (dirty)\n\t\t\t\tthis.makeDirty();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetDimensions: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an object with properties \"width\" and \"height\"\n\t\t\treturn this.rawNode ? {width:  this.rawNode.width, height: this.rawNode.height} : null;\t// Object\n\t\t},\n\t\t_render: function(force){\n\t\t\t// summary:\n\t\t\t//\t\trender the all shapes\n\t\t\tif(!this.rawNode || (!force && this.pendingImageCount)){ return; }\n\t\t\tvar ctx = this.rawNode.getContext(\"2d\");\n\t\t\tctx.clearRect(0, 0, this.rawNode.width, this.rawNode.height);\n\t\t\tthis.render(ctx);\n\t\t\tif(\"pendingRender\" in this){\n\t\t\t\tclearTimeout(this.pendingRender);\n\t\t\t\tdelete this.pendingRender;\n\t\t\t}\n\t\t},\n\t\trender: function(ctx){\n\t\t\t// summary:\n\t\t\t//\t\tRenders the gfx scene.\n\t\t\t// description:\n\t\t\t//\t\tthis method is called to render the gfx scene to the specified context.\n\t\t\t//\t\tThis method should not be invoked directly but should be used instead\n\t\t\t//\t\tas an extension point on which user can connect to with aspect.before/aspect.after\n\t\t\t//\t\tto implement pre- or post- image processing jobs on the drawing surface.\n\t\t\t// ctx: CanvasRenderingContext2D\n\t\t\t//\t\tThe surface Canvas rendering context.\n\t\t\tctx.save();\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tthis.children[i]._render(ctx);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t},\n\t\tmakeDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tinternal method, which is called when we may need to redraw\n\t\t\tif(!this.pendingImagesCount && !(\"pendingRender\" in this) && !this._batch){\n\t\t\t\tthis.pendingRender = setTimeout(lang.hitch(this, this._render), 0);\n\t\t\t}\n\t\t},\n\t\tdownloadImage: function(img, url){\n\t\t\t// summary:\n\t\t\t//\t\tinternal method, which starts an image download and renders, when it is ready\n\t\t\t// img: Image\n\t\t\t//\t\tthe image object\n\t\t\t// url: String\n\t\t\t//\t\tthe url of the image\n\t\t\tvar handler = lang.hitch(this, this.onImageLoad);\n\t\t\tif(!this.pendingImageCount++ && \"pendingRender\" in this){\n\t\t\t\tclearTimeout(this.pendingRender);\n\t\t\t\tdelete this.pendingRender;\n\t\t\t}\n\t\t\timg.onload  = handler;\n\t\t\timg.onerror = handler;\n\t\t\timg.onabort = handler;\n\t\t\timg.src = url;\n\t\t},\n\t\tonImageLoad: function(){\n\t\t\tif(!--this.pendingImageCount){\n\t\t\t\tthis.onImagesLoaded();\n\t\t\t\tthis._render();\n\t\t\t}\n\t\t},\n\t\tonImagesLoaded: function(){\n\t\t\t// summary:\n\t\t\t//\t\tAn extension point called when all pending images downloads have been completed.\n\t\t\t// description:\n\t\t\t//\t\tThis method is invoked when all pending images downloads have been completed, just before\n\t\t\t//\t\tthe gfx scene is redrawn. User can connect to this method to get notified when a\n\t\t\t//\t\tgfx scene containing images is fully resolved.\n\t\t},\n\n\t\t// events are not implemented\n\t\tgetEventSource: function(){ return null; },\n\t\tconnect:\t\tfunction(){},\n\t\tdisconnect:\t\tfunction(){},\n\t\ton:\t\t\t\tfunction(){}\n\t});\n\n\tcanvas.createSurface = function(parentNode, width, height){\n\t\t// summary:\n\t\t//\t\tcreates a surface (Canvas)\n\t\t// parentNode: Node\n\t\t//\t\ta parent node\n\t\t// width: String\n\t\t//\t\twidth of surface, e.g., \"100px\"\n\t\t// height: String\n\t\t//\t\theight of surface, e.g., \"100px\"\n\n\t\tif(!width && !height){\n\t\t\tvar pos = domGeom.position(parentNode);\n\t\t\twidth  = width  || pos.w;\n\t\t\theight = height || pos.h;\n\t\t}\n\t\tif(typeof width == \"number\"){\n\t\t\twidth = width + \"px\";\n\t\t}\n\t\tif(typeof height == \"number\"){\n\t\t\theight = height + \"px\";\n\t\t}\n\n\t\tvar s = new canvas.Surface(),\n\t\t\tp = dom.byId(parentNode),\n\t\t\tc = p.ownerDocument.createElement(\"canvas\");\n\n\t\tc.width  = g.normalizedLength(width);\t// in pixels\n\t\tc.height = g.normalizedLength(height);\t// in pixels\n\n\t\tp.appendChild(c);\n\t\ts.rawNode = c;\n\t\ts._parent = p;\n\t\ts.surface = s;\n\t\treturn s;\t// dojox/gfx.Surface\n\t};\n\n\t// Extenders\n\n\tvar C = gs.Container, Container = {\n\t\topenBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\n\t\t\t//\t\tthe batch instead of appending to the container directly.\n\t\t\t// description:\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\n\t\t\t++this._batch;\n\t\t\treturn this;\n\t\t},\n\t\tcloseBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tsubmits the current batch.\n\t\t\t// description:\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\n\t\t\tthis._batch = this._batch > 0 ? --this._batch : 0;\n\t\t\tthis._makeDirty();\n\t\t\treturn this;\n\t\t},\n\t\t_makeDirty: function(){\n\t\t\tif(!this._batch){\n\t\t\t\tthis.surface.makeDirty();\n\t\t\t}\n\t\t},\n\t\tadd: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.add.apply(this, arguments);\n\t\t},\n\t\tremove: function(shape, silently){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.remove.apply(this, arguments);\n\t\t},\n\t\tclear: function(){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.clear.apply(this, arguments);\n\t\t},\n\t\tgetBoundingBox: C.getBoundingBox,\n\t\t_moveChildToFront: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C._moveChildToFront.apply(this, arguments);\n\t\t},\n\t\t_moveChildToBack: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C._moveChildToBack.apply(this, arguments);\n\t\t}\n\t};\n\n\tvar Creator = {\n\t\t// summary:\n\t\t//\t\tCanvas shape creators\n\t\tcreateObject: function(shapeType, rawShape) {\n\t\t\t// summary:\n\t\t\t//\t\tcreates an instance of the passed shapeType class\n\t\t\t// shapeType: Function\n\t\t\t//\t\ta class constructor to create an instance of\n\t\t\t// rawShape: Object\n\t\t\t//\t\tproperties to be passed in to the classes \"setShape\" method\n\t\t\t// overrideSize: Boolean\n\t\t\t//\t\tset the size explicitly, if true\n\t\t\tvar shape = new shapeType();\n\t\t\tshape.surface = this.surface;\n\t\t\tshape.setShape(rawShape);\n\t\t\tthis.add(shape);\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\n\t\t}\n\t};\n\n\textend(canvas.Group, Container);\n\textend(canvas.Group, gs.Creator);\n\textend(canvas.Group, Creator);\n\n\textend(canvas.Surface, Container);\n\textend(canvas.Surface, gs.Creator);\n\textend(canvas.Surface, Creator);\n\n\t// no event support -> nothing to fix.\n\tcanvas.fixTarget = function(event, gfxElement){\n\t\t// tags:\n\t\t//\t\tprivate\n\t\treturn true;\n\t};\n\n\treturn canvas;\n});\n","define([\"./_base\", \"dojo/_base/lang\", \"./matrix\"], \n  function(g, lang, m){\n\tvar twoPI = 2 * Math.PI, pi4 = Math.PI / 4, pi8 = Math.PI / 8,\n\t\tpi48 = pi4 + pi8, curvePI4 = unitArcAsBezier(pi8);\n\n\tfunction unitArcAsBezier(alpha){\n\t\t// summary:\n\t\t//\t\treturn a start point, 1st and 2nd control points, and an end point of\n\t\t//\t\ta an arc, which is reflected on the x axis\n\t\t// alpha: Number\n\t\t//\t\tangle in radians, the arc will be 2 * angle size\n\t\tvar cosa  = Math.cos(alpha), sina  = Math.sin(alpha),\n\t\t\tp2 = {x: cosa + (4 / 3) * (1 - cosa), y: sina - (4 / 3) * cosa * (1 - cosa) / sina};\n\t\treturn {\t// Object\n\t\t\ts:  {x: cosa, y: -sina},\n\t\t\tc1: {x: p2.x, y: -p2.y},\n\t\t\tc2: p2,\n\t\t\te:  {x: cosa, y: sina}\n\t\t};\n\t}\n\n\tvar arc = g.arc = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Arc functions.\n\t\t\n\t\tunitArcAsBezier: unitArcAsBezier,\n\t\t/*===== \n\t\tunitArcAsBezier: function(alpha) {\n\t\t\t// summary:\n\t\t\t//\t\treturn a start point, 1st and 2nd control points, and an end point of\n\t\t\t//\t\ta an arc, which is reflected on the x axis\n\t\t\t// alpha: Number\n\t\t\t//\t\tangle in radians, the arc will be 2 * angle size\n\t\t},\n\t\t=====*/\n\n\t\t// curvePI4: Object\n\t\t//\t\tan object with properties of an arc around a unit circle from 0 to pi/4\n\t\tcurvePI4: curvePI4,\n\n\t\tarcAsBezier: function(last, rx, ry, xRotg, large, sweep, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tcalculates an arc as a series of Bezier curves\n\t\t\t//\t\tgiven the last point and a standard set of SVG arc parameters,\n\t\t\t//\t\tit returns an array of arrays of parameters to form a series of\n\t\t\t//\t\tabsolute Bezier curves.\n\t\t\t// last: Object\n\t\t\t//\t\ta point-like object as a start of the arc\n\t\t\t// rx: Number\n\t\t\t//\t\ta horizontal radius for the virtual ellipse\n\t\t\t// ry: Number\n\t\t\t//\t\ta vertical radius for the virtual ellipse\n\t\t\t// xRotg: Number\n\t\t\t//\t\ta rotation of an x axis of the virtual ellipse in degrees\n\t\t\t// large: Boolean\n\t\t\t//\t\twhich part of the ellipse will be used (the larger arc if true)\n\t\t\t// sweep: Boolean\n\t\t\t//\t\tdirection of the arc (CW if true)\n\t\t\t// x: Number\n\t\t\t//\t\tthe x coordinate of the end point of the arc\n\t\t\t// y: Number\n\t\t\t//\t\tthe y coordinate of the end point of the arc\n\n\t\t\t// calculate parameters\n\t\t\tlarge = Boolean(large);\n\t\t\tsweep = Boolean(sweep);\n\t\t\tvar xRot = m._degToRad(xRotg),\n\t\t\t\trx2 = rx * rx, ry2 = ry * ry,\n\t\t\t\tpa = m.multiplyPoint(\n\t\t\t\t\tm.rotate(-xRot),\n\t\t\t\t\t{x: (last.x - x) / 2, y: (last.y - y) / 2}\n\t\t\t\t),\n\t\t\t\tpax2 = pa.x * pa.x, pay2 = pa.y * pa.y,\n\t\t\t\tc1 = Math.sqrt((rx2 * ry2 - rx2 * pay2 - ry2 * pax2) / (rx2 * pay2 + ry2 * pax2));\n\t\t\tif(isNaN(c1)){ c1 = 0; }\n\t\t\tvar\tca = {\n\t\t\t\t\tx:  c1 * rx * pa.y / ry,\n\t\t\t\t\ty: -c1 * ry * pa.x / rx\n\t\t\t\t};\n\t\t\tif(large == sweep){\n\t\t\t\tca = {x: -ca.x, y: -ca.y};\n\t\t\t}\n\t\t\t// the center\n\t\t\tvar c = m.multiplyPoint(\n\t\t\t\t[\n\t\t\t\t\tm.translate(\n\t\t\t\t\t\t(last.x + x) / 2,\n\t\t\t\t\t\t(last.y + y) / 2\n\t\t\t\t\t),\n\t\t\t\t\tm.rotate(xRot)\n\t\t\t\t],\n\t\t\t\tca\n\t\t\t);\n\t\t\t// calculate the elliptic transformation\n\t\t\tvar elliptic_transform = m.normalize([\n\t\t\t\tm.translate(c.x, c.y),\n\t\t\t\tm.rotate(xRot),\n\t\t\t\tm.scale(rx, ry)\n\t\t\t]);\n\t\t\t// start, end, and size of our arc\n\t\t\tvar inversed = m.invert(elliptic_transform),\n\t\t\t\tsp = m.multiplyPoint(inversed, last),\n\t\t\t\tep = m.multiplyPoint(inversed, x, y),\n\t\t\t\tstartAngle = Math.atan2(sp.y, sp.x),\n\t\t\t\tendAngle   = Math.atan2(ep.y, ep.x),\n\t\t\t\ttheta = startAngle - endAngle;\t// size of our arc in radians\n\t\t\tif(sweep){ theta = -theta; }\n\t\t\tif(theta < 0){\n\t\t\t\ttheta += twoPI;\n\t\t\t}else if(theta > twoPI){\n\t\t\t\ttheta -= twoPI;\n\t\t\t}\n\n\t\t\t// draw curve chunks\n\t\t\tvar alpha = pi8, curve = curvePI4, step  = sweep ? alpha : -alpha,\n\t\t\t\tresult = [];\n\t\t\tfor(var angle = theta; angle > 0; angle -= pi4){\n\t\t\t\tif(angle < pi48){\n\t\t\t\t\talpha = angle / 2;\n\t\t\t\t\tcurve = unitArcAsBezier(alpha);\n\t\t\t\t\tstep  = sweep ? alpha : -alpha;\n\t\t\t\t\tangle = 0;\t// stop the loop\n\t\t\t\t}\n\t\t\t\tvar c2, e, M = m.normalize([elliptic_transform, m.rotate(startAngle + step)]);\n\t\t\t\tif(sweep){\n\t\t\t\t\tc1 = m.multiplyPoint(M, curve.c1);\n\t\t\t\t\tc2 = m.multiplyPoint(M, curve.c2);\n\t\t\t\t\te  = m.multiplyPoint(M, curve.e );\n\t\t\t\t}else{\n\t\t\t\t\tc1 = m.multiplyPoint(M, curve.c2);\n\t\t\t\t\tc2 = m.multiplyPoint(M, curve.c1);\n\t\t\t\t\te  = m.multiplyPoint(M, curve.s );\n\t\t\t\t}\n\t\t\t\t// draw the curve\n\t\t\t\tresult.push([c1.x, c1.y, c2.x, c2.y, e.x, e.y]);\n\t\t\t\tstartAngle += 2 * step;\n\t\t\t}\n\t\t\treturn result;\t// Array\n\t\t}\n\t};\n\t\n\treturn arc;\n});\n","define([\"./_base\", \"dojo/_base/lang\", \"./matrix\"], \n  function (g, lang, m){\n\tfunction eq(/* Number */ a, /* Number */ b){\n\t\t// summary:\n\t\t//\t\tcompare two FP numbers for equality\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\n\t}\n\n\tfunction calcFromValues(/* Number */ r1, /* Number */ m1, /* Number */ r2, /* Number */ m2){\n\t\t// summary:\n\t\t//\t\tuses two close FP ration and their original magnitudes to approximate the result\n\t\tif(!isFinite(r1)){\n\t\t\treturn r2;\t// Number\n\t\t}else if(!isFinite(r2)){\n\t\t\treturn r1;\t// Number\n\t\t}\n\t\tm1 = Math.abs(m1); m2 = Math.abs(m2);\n\t\treturn (m1 * r1 + m2 * r2) / (m1 + m2);\t// Number\n\t}\n\n\tfunction transpose(matrix){\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = new m.Matrix2D(matrix);\n\t\treturn lang.mixin(M, {dx: 0, dy: 0, xy: M.yx, yx: M.xy});\t// dojox/gfx/matrix.Matrix2D\n\t}\n\n\tfunction scaleSign(/* dojox/gfx/matrix.Matrix2D */ matrix){\n\t\treturn (matrix.xx * matrix.yy < 0 || matrix.xy * matrix.yx > 0) ? -1 : 1;\t// Number\n\t}\n\n\tfunction eigenvalueDecomposition(matrix){\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = m.normalize(matrix),\n\t\t\tb = -M.xx - M.yy,\n\t\t\tc = M.xx * M.yy - M.xy * M.yx,\n\t\t\td = Math.sqrt(b * b - 4 * c),\n\t\t\tl1 = -(b + (b < 0 ? -d : d)) / 2,\n\t\t\tl2 = c / l1,\n\t\t\tvx1 = M.xy / (l1 - M.xx), vy1 = 1,\n\t\t\tvx2 = M.xy / (l2 - M.xx), vy2 = 1;\n\t\tif(eq(l1, l2)){\n\t\t\tvx1 = 1, vy1 = 0, vx2 = 0, vy2 = 1;\n\t\t}\n\t\tif(!isFinite(vx1)){\n\t\t\tvx1 = 1, vy1 = (l1 - M.xx) / M.xy;\n\t\t\tif(!isFinite(vy1)){\n\t\t\t\tvx1 = (l1 - M.yy) / M.yx, vy1 = 1;\n\t\t\t\tif(!isFinite(vx1)){\n\t\t\t\t\tvx1 = 1, vy1 = M.yx / (l1 - M.yy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!isFinite(vx2)){\n\t\t\tvx2 = 1, vy2 = (l2 - M.xx) / M.xy;\n\t\t\tif(!isFinite(vy2)){\n\t\t\t\tvx2 = (l2 - M.yy) / M.yx, vy2 = 1;\n\t\t\t\tif(!isFinite(vx2)){\n\t\t\t\t\tvx2 = 1, vy2 = M.yx / (l2 - M.yy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar d1 = Math.sqrt(vx1 * vx1 + vy1 * vy1),\n\t\t\td2 = Math.sqrt(vx2 * vx2 + vy2 * vy2);\n\t\tif(!isFinite(vx1 /= d1)){ vx1 = 0; }\n\t\tif(!isFinite(vy1 /= d1)){ vy1 = 0; }\n\t\tif(!isFinite(vx2 /= d2)){ vx2 = 0; }\n\t\tif(!isFinite(vy2 /= d2)){ vy2 = 0; }\n\t\treturn {\t// Object\n\t\t\tvalue1: l1,\n\t\t\tvalue2: l2,\n\t\t\tvector1: {x: vx1, y: vy1},\n\t\t\tvector2: {x: vx2, y: vy2}\n\t\t};\n\t}\n\n\tfunction decomposeSR(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\n\t\t// summary:\n\t\t//\t\tdecomposes a matrix into [scale, rotate]; no checks are done.\n\t\tvar sign = scaleSign(M),\n\t\t\ta = result.angle1 = (Math.atan2(M.yx, M.yy) + Math.atan2(-sign * M.xy, sign * M.xx)) / 2,\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\n\t\tresult.sx = calcFromValues(M.xx / cos, cos, -M.xy / sin, sin);\n\t\tresult.sy = calcFromValues(M.yy / cos, cos,  M.yx / sin, sin);\n\t\treturn result;\t// Object\n\t}\n\n\tfunction decomposeRS(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\n\t\t// summary:\n\t\t//\t\tdecomposes a matrix into [rotate, scale]; no checks are done\n\t\tvar sign = scaleSign(M),\n\t\t\ta = result.angle2 = (Math.atan2(sign * M.yx, sign * M.xx) + Math.atan2(-M.xy, M.yy)) / 2,\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\n\t\tresult.sx = calcFromValues(M.xx / cos, cos,  M.yx / sin, sin);\n\t\tresult.sy = calcFromValues(M.yy / cos, cos, -M.xy / sin, sin);\n\t\treturn result;\t// Object\n\t}\n\n\treturn g.decompose = function(matrix){\n\t\t// summary:\n\t\t//\t\tDecompose a 2D matrix into translation, scaling, and rotation components.\n\t\t// description:\n\t\t//\t\tThis function decompose a matrix into four logical components:\n\t\t//\t\ttranslation, rotation, scaling, and one more rotation using SVD.\n\t\t//\t\tThe components should be applied in following order:\n\t\t//\t| [translate, rotate(angle2), scale, rotate(angle1)]\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = m.normalize(matrix),\n\t\t\tresult = {dx: M.dx, dy: M.dy, sx: 1, sy: 1, angle1: 0, angle2: 0};\n\t\t// detect case: [scale]\n\t\tif(eq(M.xy, 0) && eq(M.yx, 0)){\n\t\t\treturn lang.mixin(result, {sx: M.xx, sy: M.yy});\t// Object\n\t\t}\n\t\t// detect case: [scale, rotate]\n\t\tif(eq(M.xx * M.yx, -M.xy * M.yy)){\n\t\t\treturn decomposeSR(M, result);\t// Object\n\t\t}\n\t\t// detect case: [rotate, scale]\n\t\tif(eq(M.xx * M.xy, -M.yx * M.yy)){\n\t\t\treturn decomposeRS(M, result);\t// Object\n\t\t}\n\t\t// do SVD\n\t\tvar\tMT = transpose(M),\n\t\t\tu  = eigenvalueDecomposition([M, MT]),\n\t\t\tv  = eigenvalueDecomposition([MT, M]),\n\t\t\tU  = new m.Matrix2D({xx: u.vector1.x, xy: u.vector2.x, yx: u.vector1.y, yy: u.vector2.y}),\n\t\t\tVT = new m.Matrix2D({xx: v.vector1.x, xy: v.vector1.y, yx: v.vector2.x, yy: v.vector2.y}),\n\t\t\tS = new m.Matrix2D([m.invert(U), M, m.invert(VT)]);\n\t\tdecomposeSR(VT, result);\n\t\tS.xx *= result.sx;\n\t\tS.yy *= result.sy;\n\t\tdecomposeRS(U, result);\n\t\tS.xx *= result.sx;\n\t\tS.yy *= result.sy;\n\t\treturn lang.mixin(result, {sx: S.xx, sy: S.yy});\t// Object\n\t};\n});\n","define([\n\t\"./_base\"\n], function(gfx){\n\n\tvar bu = gfx.bezierutils = {},\n\t\terror = 0.1;\n\n\tvar tAtLength = bu.tAtLength = function(points, length){\n\t\t// summary:\n\t\t//\t\tReturns the t corresponding to the given length for the specified bezier curve.\n\t\t// points: Number[]\n\t\t//\t\tThe bezier points. Should be [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y] for a cubic\n\t\t//\t\tbezier curve or [p1x, p1y, cx, cy, p2x, p2y] for a quadratic bezier curve.\n\t\t// length: Number\n\t\t//\t\tThe length.\n\t\tvar t = 0,\n\t\t\tquadratic = points.length == 6,\n\t\t\tcurrentLen = 0,\n\t\t\tsplitCount = 0,\n\t\t\tsplitFunc = quadratic ? splitQBezierAtT : splitBezierAtT;\n\t\tvar _compute = function(p, error){\n\t\t\t// control points polygon length\n\t\t\tvar pLen = 0;\n\t\t\tfor(var i = 0; i < p.length-2; i+=2)\n\t\t\t\tpLen += distance(p[i],p[i+1],p[i+2],p[i+3]);\n\t\t\t// chord length\n\t\t\tvar chord = quadratic ?\n\t\t\t\tdistance(points[0],points[1],points[4],points[5]) :\n\t\t\t\tdistance(points[0],points[1],points[6],points[7]);\n\t\t\t// if needs more approx. or if currentLen is greater than the target length,\n\t\t\t// split the curve one more time\n\t\t\tif(pLen - chord > error || currentLen + pLen > length + error){\n\t\t\t\t++splitCount;\n\t\t\t\tvar newbezier = splitFunc(p, .5);\n\t\t\t\t// check 1st subpath\n\t\t\t\t_compute(newbezier[0], error);\n\t\t\t\t// the 1st subcurve was the good one, we stop\n\t\t\t\tif(Math.abs(currentLen - length) <= error){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// need to continue with the 2nde subcurve\n\t\t\t\t_compute(newbezier[1], error);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tcurrentLen += pLen;\n\t\t\tt += 1.0 / (1 << splitCount);\n\t\t};\n\t\tif(length)\n\t\t\t_compute(points, 0.5);\n\t\treturn t;\n\t};\n\n\tvar computeLength = bu.computeLength = function(/*Array*/points){\n\t\t// summary:\n\t\t//\t\tReturns the length of the given bezier curve.\n\t\t// points: Number[]\n\t\t//\t\tThe bezier points. Should be [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y] for a cubic\n\t\t//\t\tbezier curve or [p1x, p1y, cx, cy, p2x, p2y] for a quadratic bezier curve.\n\n\t\tvar quadratic = points.length == 6, pLen=0;\n\t\t// control points polygon length\n\t\tfor(var i = 0; i < points.length-2; i+=2)\n\t\t\tpLen += distance(points[i],points[i+1],points[i+2],points[i+3]);\n\t\t// chord length\n\t\tvar chord = quadratic ?\n\t\t\tdistance(points[0],points[1],points[4],points[5]) :\n\t\t\tdistance(points[0],points[1],points[6],points[7]);\n\t\t// split polygons until the polygon and the chord are \"the same\"\n\t\tif(pLen-chord>error){\n\t\t\tvar newBeziers = quadratic ? splitQBezierAtT(points,.5) : splitCBezierAtT(points,.5);\n\t\t\tvar length = computeLength(newBeziers[0], quadratic);\n\t\t\tlength += computeLength(newBeziers[1], quadratic);\n\t\t\treturn length;\n\t\t}\n\t\t// pLen is close enough, done.\n\t\treturn pLen;\n\t};\n\n\tvar distance = bu.distance = function(x1, y1, x2, y2){\n\t\t// summary:\n\t\t//\t\tReturns the distance between the specified points.\n\t\treturn Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\t};\n\n\tvar splitQBezierAtT = function(points, t){\n\t\t// summary:\n\t\t//\t\tSplit a quadratic bezier curve into 2 sub-quadratic beziers at the specified t.\n\n\t\t// de Casteljau\n\t\tvar r = 1-t,\n\t\t\tr2 = r*r,\n\t\t\tt2 = t*t,\n\t\t\tp1x = points[0],\n\t\t\tp1y = points[1],\n\t\t\tcx = points[2],\n\t\t\tcy = points[3],\n\t\t\tp2x = points[4],\n\t\t\tp2y = points[5],\n\n\t\t\tax = r*p1x + t*cx,\n\t\t\tay = r*p1y + t*cy,\n\t\t\tbx = r*cx + t*p2x,\n\t\t\tby = r*cy + t*p2y,\n\t\t\tpx = r2*p1x + 2*r*t*cx + t2*p2x,\n\t\t\tpy = r2*p1y + 2*r*t*cy + t2*p2y;\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tp1x, p1y,\n\t\t\t\tax, ay,\n\t\t\t\tpx, py\n\t\t\t],\n\t\t\t[\n\t\t\t\tpx, py,\n\t\t\t\tbx, by,\n\t\t\t\tp2x, p2y\n\t\t\t]\n\t\t];\n\t};\n\n\tvar splitCBezierAtT = function(points, t){\n\t\t// summary:\n\t\t//\t\tSplit a cubic bezier curve into 2 sub-cubic beziers at the specified t.\n\n\t\t// de Casteljau\n\t\tvar r = 1-t,\n\t\t\tr2 = r*r,\n\t\t\tr3 = r2*r,\n\t\t\tt2 = t*t,\n\t\t\tt3 = t2*t,\n\t\t\tp1x = points[0],\n\t\t\tp1y = points[1],\n\t\t\tc1x = points[2],\n\t\t\tc1y = points[3],\n\t\t\tc2x = points[4],\n\t\t\tc2y = points[5],\n\t\t\tp2x = points[6],\n\t\t\tp2y = points[7],\n\n\t\t\tax = r*p1x + t*c1x,\n\t\t\tay = r*p1y + t*c1y,\n\t\t\tcx = r*c2x + t*p2x,\n\t\t\tcy = r*c2y + t*p2y,\n\t\t\tmx = r2*p1x + 2*r*t*c1x + t2*c2x,\n\t\t\tmy = r2*p1y + 2*r*t*c1y + t2*c2y,\n\t\t\tnx = r2*c1x + 2*r*t*c2x + t2*p2x,\n\t\t\tny = r2*c1y + 2*r*t*c2y + t2*p2y,\n\t\t\tpx = r3*p1x + 3*r2*t*c1x + 3*r*t2*c2x+t3*p2x,\n\t\t\tpy = r3*p1y + 3*r2*t*c1y + 3*r*t2*c2y+t3*p2y;\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tp1x, p1y,\n\t\t\t\tax, ay,\n\t\t\t\tmx, my,\n\t\t\t\tpx, py\n\t\t\t],\n\t\t\t[\n\t\t\t\tpx, py,\n\t\t\t\tnx, ny,\n\t\t\t\tcx, cy,\n\t\t\t\tp2x, p2y\n\t\t\t]\n\t\t];\n\t};\n\n\tvar splitBezierAtT = bu.splitBezierAtT = function(points, t){\n\t\treturn points.length == 6 ? splitQBezierAtT(points, t) : splitCBezierAtT(points, t);\n\t};\n\treturn bu;\n});","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"./Element\"], \n\tfunction(lang, declare, Element){ \n\t/*=====\n\tvar __SeriesCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\n\t\t// plot: String?\n\t\t//\t\tThe plot (by name) that this series belongs to.\n\t};\n\t=====*/\n\treturn declare(\"dojox.charting.Series\", Element, {\n\t\t// summary:\n\t\t//\t\tAn object representing a series of data for plotting on a chart.\n\t\tconstructor: function(chart, data, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a new data series object for use within charting.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart that this series belongs to.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// kwArgs: __SeriesCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to set details for this series.\n\t\t\tlang.mixin(this, kwArgs);\n\t\t\tif(typeof this.plot != \"string\"){ this.plot = \"default\"; }\n\t\t\tthis.update(data);\n\t\t},\n\t\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear the calculated additional parameters set on this series.\n\t\t\tthis.dyn = {};\n\t\t},\n\t\t\n\t\tupdate: function(data){\n\t\t\t// summary:\n\t\t\t//\t\tSet data and make this object dirty, so it can be redrawn.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\tif(lang.isArray(data)){\n\t\t\t\tthis.data = data;\n\t\t\t}else{\n\t\t\t\tthis.source = data;\n\t\t\t\tthis.data = this.source.data;\n\t\t\t\tif(this.source.setSeriesObject){\n\t\t\t\t\tthis.source.setSeriesObject(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\tthis.clear();\n\t\t}\n\t});\n});\n","define([\"dojox/main\", \"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/dom-style\", \"dojo/_base/array\", \"dojo/sniff\",\n\t\"dojo/dom\",\"dojo/dom-construct\",\n\t\"dojox/gfx\", \"dojox/gfx/_gfxBidiSupport\", \"../axis2d/common\", \"dojox/string/BidiEngine\",\n\t\"dojox/lang/functional\",\"dojo/dom-attr\",\"./_bidiutils\"],\n\tfunction(dojox, declare, lang, domStyle, arr, has, dom, domConstruct, g, gBidi, da, BidiEngine, df, domAttr,utils){\n\t// module:\n\t//\t\tdojox/charting/bidi/Chart\t\t\t\t\t\t\t\n\tvar bidiEngine = new BidiEngine();\n\tvar dc = lang.getObject(\"charting\", true, dojox);\n\tfunction validateTextDir(textDir){\n\t\treturn /^(ltr|rtl|auto)$/.test(textDir) ? textDir : null;\n\t};\n\t\n\treturn declare(null, {\n\t\t// textDir: String\n\t\t//\t\tBi-directional support,\tthe main variable which is responsible for the direction of the text.\n\t\t//\t\tThe text direction can be different than the GUI direction by using this parameter.\n\t\t//\t\tAllowed values:\n\t\t//\n\t\t//\t\t1. \"ltr\"\n\t\t//\t\t2. \"rtl\"\n\t\t//\t\t3. \"auto\" - contextual the direction of a text defined by first strong letter.\n\t\t//\n\t\t//\t\tBy default is as the page direction.\n\t\ttextDir:\"\",\n\t\t\n\t\t// dir: String\n\t\t//\t\tMirroring support,\tthe main variable which is responsible for the direction of the chart.\n\t\t//\n\t\t//\t\tAllowed values:\n\t\t//\t\t1. \"ltr\"\n\t\t//\t\t2. \"rtl\"\n\t\t//\n\t\t//\t\tBy default is ltr.\n\t\tdir: \"\",\n\t\tisMirrored: false,\n\t\t\n\t\tgetTextDir: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tReturn direction of the text. \n\t\t\t// description:\n\t\t\t//\t\tIf textDir is ltr or rtl returns the value.\n\t\t\t//\t\tIf it's auto, calls to another function that responsible \n\t\t\t//\t\tfor checking the value, and defining the direction.\t\t\t\n\t\t\t// text:\n\t\t\t//\t\tUsed in case textDir is \"auto\", this case the direction is according to the first\n\t\t\t//\t\tstrong (directionally - which direction is strong defined) letter.\n\t\t\t// tags:\n\t\t\t//\t\tprotected.\n\t\t\tvar textDir = this.textDir == \"auto\" ? bidiEngine.checkContextual(text) : this.textDir;\n\t\t\t// providing default value\n\t\t\tif(!textDir){\n\t\t\t\ttextDir = domStyle.get(this.node, \"direction\");\n\t\t\t}\n\t\t\treturn textDir;\n\t\t},\n\n\t\tpostscript: function(node,args){\n\t\t\t// summary:\n\t\t\t//\t\tKicks off chart instantiation.\n\t\t\t// description:\n\t\t\t//\t\tUsed for setting the textDir of the chart. \n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\t// validate textDir\n\t\t\tvar textDir = args ? (args[\"textDir\"] ? validateTextDir(args[\"textDir\"]) : \"\") : \"\";\n\t\t\t// if textDir wasn't defined or was defined wrong, apply default value\n\t\t\ttextDir = textDir ? textDir : domStyle.get(this.node, \"direction\");\n\t\t\tthis.textDir = textDir;\n\n\t\t\tthis.surface.textDir = textDir;\n\t\t\t\n\t\t\t// two data structures, used for storing data for further enablement to change\n\t\t\t// textDir dynamically\n\t\t\tthis.htmlElementsRegistry = [];\n\t\t\tthis.truncatedLabelsRegistry = [];\n\t\t\t// chart mirroring starts\n\t\t\tvar chartDir = \"ltr\";\n\t\t\tif(domAttr.has(node, \"direction\")){\n\t\t\t\tchartDir = domAttr.get(node, \"direction\");\n\t\t\t}\n\t\t\tthis.setDir(args ? (args.dir ? args.dir: chartDir) : chartDir);\n\t\t\t// chart mirroring ends\n\t\t},\n\n\t\tsetTextDir: function(newTextDir, obj){\n\t\t\t// summary:\n\t\t\t//\t\tSetter for the textDir attribute.\n\t\t\t// description:\n\t\t\t//\t\tAllows dynamically set the textDir, goes over all the text-children and  \n\t\t\t//\t\tupdates their base text direction.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\t\t\n\t\t\tif(newTextDir == this.textDir){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif(validateTextDir(newTextDir) != null){\n\t\t\t\tthis.textDir = newTextDir;\n\t\t\t\t\n\t\t\t\t// set automatically all the gfx objects that were created by this surface\n\t\t\t\t// (groups, text objects)\n\t\t\t\tthis.surface.setTextDir(newTextDir);\n\t\t\t\n\t\t\t\t// truncated labels that were created with gfx creator need to recalculate dir\n\t\t\t\t// for case like: \"111111A\" (A stands for bidi character) and the truncation\n\t\t\t\t// is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\n\t\t\t\t// case we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\n\t\t\t\t// label, which value is \"111...\" but th real is \"111111A\".\n\t\t\t\t// each time we created a gfx truncated label we stored it in the truncatedLabelsRegistry, so update now \n\t\t\t\t// the registry.\n\t\t\t\tif(this.truncatedLabelsRegistry && newTextDir == \"auto\"){\n\t\t\t\t\tarr.forEach(this.truncatedLabelsRegistry, function(elem){\n\t\t\t\t\t\tvar tDir = this.getTextDir(elem[\"label\"]);\n\t\t\t\t\t\tif(elem[\"element\"].textDir != tDir){\n\t\t\t\t\t\t\telem[\"element\"].setShape({textDir: tDir});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// re-render axes with html labels. for recalculation of the labels\n\t\t\t\t// positions etc.\n\t\t\t\t// create array of keys for all the axis in chart \n\t\t\t\tvar axesKeyArr = df.keys(this.axes);\n\t\t\t\tif(axesKeyArr.length > 0){\n\t\t\t\t\t// iterate over the axes, and for each that have html labels render it.\n\t\t\t\t\tarr.forEach(axesKeyArr, function(key, index, arr){\n\t\t\t\t\t\t// get the axis \n\t\t\t\t\t\tvar axis = this.axes[key];\n\t\t\t\t\t\t// if the axis has html labels \n\t\t\t\t\t\tif(axis.htmlElements[0]){\n\t\t\t\t\t\t\taxis.dirty = true;\n\t\t\t\t\t\t\taxis.render(this.dim, this.offsets);\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t\t\n\t\t\t\t\t// recreate title\n\t\t\t\t\tif(this.title){\n\t\t\t\t\t\tthis._renderTitle(this.dim, this.offsets);\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t// case of pies, spiders etc.\n\t\t\t\t\tarr.forEach(this.htmlElementsRegistry, function(elem, index, arr){\n\t\t\t\t\t\tvar tDir = newTextDir == \"auto\" ? this.getTextDir(elem[4]) : newTextDir;\n\t\t\t\t\t\tif(elem[0].children[0] && elem[0].children[0].dir != tDir){\n\t\t\t\t\t\t\tdomConstruct.destroy(elem[0].children[0]);\n\t\t\t\t\t\t\telem[0].children[0] = da.createText[\"html\"]\n\t\t\t\t\t\t\t\t\t(this, this.surface, elem[1], elem[2], elem[3], elem[4], elem[5], elem[6]).children[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tsetDir : function(dir){\n\t\t\t// summary:\n\t\t\t//\t\tSetter for the dir attribute.\n\t\t\t// description:\n\t\t\t//\t\tAllows dynamically set the dri attribute, which will used to\n\t\t\t//\t\tupdates the chart rendering direction.\n\t\t\t//\tdir : the desired chart direction [rtl: for right to left ,ltr: for left to right]\n \n\t\t\tif(dir == \"rtl\" || dir == \"ltr\"){\n\t\t\t\tif(this.dir != dir){\n\t\t\t\t\tthis.isMirrored = true;\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t}\n\t\t\t\tthis.dir = dir;\n\t\t\t}\t\t\t\n\t\t\treturn this; \n\t\t},\n\t\t\n\t\tisRightToLeft: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcheck the direction of the chart.\n\t\t\t// description:\n\t\t\t//\t\tcheck the dir attribute to determine the rendering direction\n\t\t\t//\t\tof the chart.\n\t\t\treturn this.dir == \"rtl\";\n        },\n        \n\t\tapplyMirroring: function(plot, dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tapply the mirroring operation to the current chart plots.\n\t\t\t//\n\t\t\tutils.reverseMatrix(plot, dim, offsets, this.dir == \"rtl\");\n\t\t\t//force the direction of the node to be ltr to properly render the axes and the plots labels.\n\t\t\tdomStyle.set(this.node, \"direction\", \"ltr\");\n\t\t\treturn this;\n\t\t},\n\n\t\tformatTruncatedLabel: function(element, label, labelType){\n\t\t\tthis.truncateBidi(element, label, labelType);\n\t\t},\n\n\t\ttruncateBidi: function(elem, label, labelType){\n\t\t\t// summary:\n\t\t\t//\t\tEnables bidi support for truncated labels.\n\t\t\t// description:\n\t\t\t//\t\tCan be two types of labels: html or gfx.\n\t\t\t//\n\t\t\t//\t\t####gfx labels:\n\t\t\t//\n\t\t\t//\t\tNeed to be stored in registry to be used when the textDir will be set dynamically.\n\t\t\t//\t\tAdditional work on truncated labels is needed for case as 111111A (A stands for \"bidi\" character rtl directioned).\n\t\t\t//\t\tlet's say in this case the truncation is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\n\t\t\t//\t\tcase we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\n\t\t\t//\t\tlabel, which value is \"111...\" but th real is \"111111A\".\n\t\t\t//\t\teach time we created a gfx truncated label we store it in the truncatedLabelsRegistry.\n\t\t\t//\n\t\t\t//\t\t####html labels:\n\t\t\t//\n\t\t\t//\t\tno need for repository (stored in another place). Here we only need to update the current dir according to textDir.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\n\t\t\tif(labelType == \"gfx\"){\n\t\t\t\t// store truncated gfx labels in the data structure.\n\t\t\t\tthis.truncatedLabelsRegistry.push({element: elem, label: label});\n\t\t\t\tif(this.textDir == \"auto\"){\n\t\t\t\t\telem.setShape({textDir: this.getTextDir(label)});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(labelType == \"html\" && this.textDir == \"auto\"){\n\t\t\t\telem.children[0].dir = this.getTextDir(label);\n\t\t\t}\n\t\t},\n\t\t\n\t\trender: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.isMirrored = false;\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\t_resetLeftBottom: function(axis){\n\t\t\tif(axis.vertical && this.isMirrored){\n\t\t\t\taxis.opt.leftBottom = !axis.opt.leftBottom;\n\t\t\t}\n\t\t}\t\t\n\t});\n});\n\n","define([\"./_base\", \"dojo/_base/lang\",\"dojo/_base/sniff\", \"dojo/dom\", \"dojo/_base/html\", \"dojo/_base/array\",\n\t\t\"./utils\", \"./shape\", \"./path\", \"dojox/string/BidiEngine\"],\nfunction(g, lang, has, dom, html, arr, utils, shapeLib, pathLib, BidiEngine){\n\tlang.getObject(\"dojox.gfx._gfxBidiSupport\", true);\n\n\t/*=====\n\t// Prevent changes here from masking the definitions in _base.js from the doc parser\n\tvar origG = g;\n\tg = {};\n\t=====*/\n\n\tswitch (g.renderer){\n\t\tcase 'vml':\n\t\t\tg.isVml = true;\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\tg.isSvg = true;\n\t\t\tif(g.svg.useSvgWeb){\n\t\t\t\tg.isSvgWeb = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'silverlight':\n\t\t\tg.isSilverlight = true;\n\t\t\tbreak;\n\t\tcase 'canvas':\n\t\tcase 'canvasWithEvents':\n\t\t\tg.isCanvas = true;\n\t\t\tbreak;\n\t}\n\n\tvar bidi_const = {\n\t\tLRM : '\\u200E',\n\t\tLRE : '\\u202A',\n\t\tPDF : '\\u202C',\n\t\tRLM : '\\u200f',\n\t\tRLE : '\\u202B'\n\t};\n\n\t/*===== g = origG; =====*/\n\n\t// the object that performs text transformations.\n\tvar bidiEngine = new BidiEngine();\n\n\tlang.extend(g.shape.Surface, {\n\t\t// textDir: String\n\t\t//\t\tWill be used as default for Text/TextPath/Group objects that created by this surface\n\t\t//\t\tand textDir wasn't directly specified for them, though the bidi support was loaded.\n\t\t//\t\tCan be set in two ways:\n\t\t//\n\t\t//\t\t1. When the surface is created and textDir value passed to it as fourth\n\t\t//\t\tparameter.\n\t\t//\t\t2. Using the setTextDir(String) function, when this function is used the value\n\t\t//\t\tof textDir propagates to all of it's children and the children of children (for Groups) etc.\n\t\ttextDir: \"\",\n\n\t\tsetTextDir: function(/*String*/newTextDir){\n\t\t\t// summary:\n\t\t\t//\t\tUsed for propagation and change of textDir.\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\n\t\t\tsetTextDir(this, newTextDir);\n\t\t},\n\n\t\tgetTextDir: function(){\n\t\t\treturn this.textDir;\n\t\t}\n\t});\n\n\tlang.extend(g.Group, {                          \n\t\t// textDir: String\n\t\t//\t\tWill be used for inheritance, or as default for text objects\n\t\t//\t\tthat textDir wasn't directly specified for them but the bidi support was required.\n\t\ttextDir: \"\",\n\n\t\tsetTextDir: function(/*String*/newTextDir){\n\t\t\t// summary:\n\t\t\t//\t\tUsed for propagation and change of textDir.\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\n\t\t\tsetTextDir(this, newTextDir);\n\t\t},\n\n\t\tgetTextDir: function(){\n\t\t\treturn this.textDir;\n\t\t}\t\n\t});\n\t\n\tlang.extend(g.Text, {  \n\t\t// summary:\n\t\t//\t\tOverrides some of dojox/gfx.Text properties, and adds some\n\t\t//\t\tfor bidi support.\n\t\t\n\t\t// textDir: String\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\n\t\t//\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\n\t\ttextDir: \"\",\n\n\t\tformatText: function (/*String*/ text, /*String*/ textDir){\n\t\t\t// summary:\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\n\t\t\t// text:\t\n\t\t\t//\t\tthe string for manipulation, by default return value.\n\t\t\t// textDir:\t\n\t\t\t//\t\tText direction.\n\t\t\t//\t\tCan be:\n\t\t\t//\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\n\t\t\t// description:\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\n\t\t\t//\t\tWas tested in:\n\t\t\t//\n\t\t\t//\t\tRenderers (browser for testing):\n\t\t\t//\n\t\t\t//\t\t- canvas (FF, Chrome, Safari),\n\t\t\t//\t\t- vml (IE),\n\t\t\t//\t\t- svg (FF, Chrome, Safari, Opera),\n\t\t\t//\t\t- silverlight (IE, Chrome, Safari, Opera),\n\t\t\t//\t\t- svgWeb(FF, Chrome, Safari, Opera, IE).\n\t\t\t//\n\t\t\t//\t\tBrowsers [browser version that was tested]:\n\t\t\t//\n\t\t\t//\t\t- IE [6,7,8], FF [3.6],\n\t\t\t//\t\t- Chrome (latest for March 2011),\n\t\t\t//\t\t- Safari [5.0.3],\n\t\t\t//\t\t- Opera [11.01].\n\n\t\t\tif(textDir && text && text.length > 1){\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\n\t\n\t\t\t\tif(targetDir == \"auto\"){\n\t\t\t\t\t//is auto by default\n\t\t\t\t\tif(g.isVml){\n\t\t\t\t\t\treturn text;\n\t\t\t\t\t}\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isVml){\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\n\t\t\t\t\tif(targetDir != sourceDir){\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSvgWeb){\n\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSilverlight){\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRNNN\",\"VLYNN\") : bidiEngine.bidiTransform(text,\"ILNNN\",\"VLYNN\");\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isCanvas){\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidi_const.RLE + text + bidi_const.PDF : bidi_const.LRE + text + bidi_const.PDF;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSvg){\n\t\t\t\t\tif(has(\"ff\") < 4){\n\t\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn bidi_const.LRM + (targetDir == \"rtl\" ? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\n\t\t\treturn text;\n\t\t},\t\n\n\t\tbidiPreprocess: function(newShape){     \n\t\t\treturn newShape;\n\t\t}\n\t});\n\n\tlang.extend(g.TextPath, {\n\t\t// textDir: String\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\n\t\t//\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\n\t\ttextDir: \"\",\n\n\t\tformatText: function (/*String*/text, /*String*/textDir){\n\t\t\t// summary:\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\n\t\t\t// text:\n\t\t\t//\t\tthe string for manipulation, by default return value.\n\t\t\t// textDir:\n\t\t\t//\t\ttext direction direction.\n\t\t\t//\t\tCan be:\n\t\t\t//\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\n\t\t\t// description:\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\n\t\t\t//\t\tWas tested in:\n\t\t\t//\n\t\t\t//\t\tRenderers:\n\t\t\t//\t\tcanvas (FF, Chrome, Safari), vml (IE), svg (FF, Chrome, Safari, Opera), silverlight (IE8), svgWeb(FF, Chrome, Safari, Opera, IE).\n\t\t\t//\n\t\t\t//\t\tBrowsers:\n\t\t\t//\t\tIE [6,7,8], FF [3.6], Chrome (latest for February 2011), Safari [5.0.3], Opera [11.01].\n\n\t\t\tif(textDir && text && text.length > 1){\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\n\n\t\t\t\tif(targetDir == \"auto\"){\n\t\t\t\t\t//is auto by default\n\t\t\t\t\tif(g.isVml){\n\t\t\t\t\t\treturn text;\n\t\t\t\t\t}\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\n\t\t\t\t}\n\n\t\t\t\tif(g.isVml){\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\n\t\t\t\t\tif(targetDir != sourceDir){\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\tif(g.isSvgWeb){\n\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\t//unlike the g.Text that is rendered in logical layout for Bidi scripts.\n\t\t\t\t//for g.TextPath in svg always visual -> bidi script is unreadable (except Opera and FF start from version 4)\n\t\t\t\tif(g.isSvg){\n\t\t\t\t\tif(has(\"opera\") || has(\"ff\") >= 4){\n\t\t\t\t\t\ttext = bidi_const.LRM + (targetDir == \"rtl\"? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttext = (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\t\n\t\t\treturn text;\n\t\t},\n\t\tbidiPreprocess: function(newText){\n\t\t\tif(newText && (typeof newText == \"string\")){\n\t\t\t\tthis.origText = newText;\n\t\t\t\tnewText = this.formatText(newText,this.textDir);\n\t\t\t}\n\t\t\treturn newText;\n\t\t}\n\t});\t\n\t\t\n\tvar extendMethod = function(shape, method, before, after){\n\t\t// summary:\n\t\t//\t\tSome helper function. Used for extending methods of shape.\n\t\t// shape: Object\n\t\t//\t\tThe shape we overriding it's method.\n\t\t// method: String\n\t\t//\t\tThe method that is extended, the original method is called before or after\n\t\t//\t\tfunctions that passed to extendMethod.\n\t\t// before: function\n\t\t//\t\tIf defined this function will be executed before the original method.\n\t\t// after: function\n\t\t//\t\tIf defined this function will be executed after the original method.\n\t\tvar old = shape.prototype[method];\n\t\tshape.prototype[method] = \n\t\t\tfunction(){\n\t\t\t\tvar rBefore;\n\t\t\t\tif (before){\n\t\t\t\t\trBefore = before.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\tvar r = old.call(this, rBefore);\n\t\t\t\tif (after){\n\t\t\t\t\tr = after.call(this, r, arguments);\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t};\n\t};\n\n\tvar bidiPreprocess = function(newText){\n\t\tif (newText){  \n\t\t\tif (newText.textDir){\n\t\t\t\tnewText.textDir = validateTextDir(newText.textDir);\n\t\t\t}\n\t\t\tif (newText.text && (newText.text instanceof Array)){\n\t\t\t\tnewText.text = newText.text.join(\",\");\n\t\t\t}\n\t\t}\n\t\tif(newText && (newText.text != undefined || newText.textDir) && (this.textDir != newText.textDir || newText.text != this.origText)){\n\t\t\t// store the original text. \n\t\t\tthis.origText = (newText.text != undefined) ? newText.text : this.origText;\n\t\t\tif(newText.textDir){\n\t\t\t\tthis.textDir = newText.textDir;\n\t\t\t}\n\t\t\tnewText.text = this.formatText(this.origText,this.textDir);\n\t\t}\n\t\treturn this.bidiPreprocess(newText);\n\n\t};\n\n\t// Instead of adding bidiPreprocess to all renders one by one\n\t// use the extendMethod, at first there's a need for bidi transformation \n\t// on text then call to original setShape.\n\textendMethod(g.Text,\"setShape\", bidiPreprocess, null);\n\textendMethod(g.TextPath,\"setText\", bidiPreprocess, null);\n\t\n\tvar restoreText = function(origObj){\n\t\tvar obj = lang.clone(origObj);\n\t\tif (obj && this.origText){\n\t\t\tobj.text = this.origText;\n\t\t}\n\t\treturn obj;\n\t};\n\n\t// Instead of adding restoreText to all renders one by one\n\t// use the extendMethod, at first get the shape by calling the original getShape,\n\t// than resrore original text (without the text transformations).\n\textendMethod(g.Text, \"getShape\", null, restoreText);\n\textendMethod(g.TextPath, \"getText\", null, restoreText);\n\n\tvar groupTextDir = function(group, args){\n\t\tvar textDir;\n\t\tif (args && args[0]){\n\t\t\ttextDir = validateTextDir(args[0]);\n\t\t}\n\t\tgroup.setTextDir(textDir ? textDir : this.textDir);\n\t\treturn group;\t// dojox/gfx.Group\n\t};\n\n\t// In creation of Group there's a need to update it's textDir,\n\t// so instead of doing it in renders one by one (vml vs others)\n\t// use the extendMethod, at first the original createGroup is applied, the\n\t// groupTextDir which is setts Group's textDir as it's father's or if was defined\n\t// by user by this value.\n\textendMethod(g.Surface, \"createGroup\", null, groupTextDir);\n\textendMethod(g.Group, \"createGroup\", null, groupTextDir);\n\n\tvar textDirPreprocess =  function(text){\n\t\t// inherit from surface / group  if textDir is defined there\n\t\tif(text){\n\t\t\tvar textDir = text.textDir ? validateTextDir(text.textDir) : this.textDir;\n\t\t\tif(textDir){\n\t\t\t\ttext.textDir = textDir;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t};\n\n\t// In creation there's a need to some preprocess,\n\t// so instead of doing it in renders one by one (vml vs others)\n\t// use the extendMethod, at first the textDirPreprocess function handles the input\n\t// then the original createXXXXXX is applied.\n\textendMethod(g.Surface,\"createText\", textDirPreprocess, null);\n\textendMethod(g.Surface,\"createTextPath\", textDirPreprocess, null);\n\textendMethod(g.Group,\"createText\", textDirPreprocess, null);\n\textendMethod(g.Group,\"createTextPath\", textDirPreprocess, null);\n\n\t/*=====\n\t// don't mask definition of original createSurface() function from doc parser\n\tg = {};\n\t=====*/\n\n\tg.createSurface = function(parentNode, width, height, textDir) {\n\t\tvar s = g[g.renderer].createSurface(parentNode, width, height);\n\t\tvar tDir = validateTextDir(textDir);\n\t\t\n\t\tif(g.isSvgWeb){\n\t\t\ts.textDir = tDir ? tDir : html.style(dom.byId(parentNode),\"direction\");\n\t\t\treturn s;\n\t\t}\n\t\t// if textDir was defined use it, else get default value.\n\t\t//s.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\n\t\tif(g.isVml || g.isSvg || g.isCanvas){\n\t\t\ts.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\n\t\t}\n\t\tif(g.isSilverlight){\n\t\t\t// allow this once rawNode will be able for the silverlight\n\t\t\t//s.textDir = tDir ? tDir : dojo.style(s.rawNode,\"direction\");\n\t\t\ts.textDir = tDir ? tDir : html.style(s._nodes[1],\"direction\");\n\t\t}\n\t\t\n\t\treturn s;\n\t};\n\t/*===== g = origG; =====*/\n\n\t// some helper functions\n\t\n\tfunction setTextDir(/*Object*/ obj, /*String*/ newTextDir){\n\t\tvar tDir = validateTextDir(newTextDir);\n\t\tif (tDir){\n\t\t\tg.utils.forEach(obj,function(e){\n\t\t\t\tif(e instanceof g.Surface || e instanceof g.Group){\n\t\t\t\t\te.textDir = tDir;\n\t\t\t\t}\t\t\n\t\t\t\tif(e instanceof g.Text){\n\t\t\t\t\te.setShape({textDir: tDir});\n\t\t\t\t}\n\t\t\t\tif(e instanceof g.TextPath){\n\t\t\t\t\te.setText({textDir: tDir})\n\t\t\t\t}\n\t\t\t}, obj);\n\t\t}\n\t\treturn obj;\n\t}\n\n\tfunction validateTextDir(textDir){\n\t\tvar validValues = [\"ltr\",\"rtl\",\"auto\"]; \n\t\tif (textDir){\n\t\t\ttextDir = textDir.toLowerCase();\n\t\t\tif (arr.indexOf(validValues, textDir) < 0){\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn textDir;\n\t}\n\n\treturn g; // return gfx api augmented with bidi support\t\n});\n\n","define([\"dojo/_base/kernel\",\"dojo/_base/lang\",\"./_base\", \"dojo/_base/html\",\"dojo/_base/array\", \"dojo/_base/window\", \"dojo/_base/json\", \n\t\"dojo/_base/Deferred\", \"dojo/_base/sniff\", \"require\",\"dojo/_base/config\"], \n  function(kernel, lang, g, html, arr, win, jsonLib, Deferred, has, require, config){\n\tvar gu = g.utils = {};\n\n\tlang.mixin(gu, {\n\t\tforEach: function(\n\t\t\t/*dojox/gfx/shape.Surface|dojox/gfx/shape.Shape*/ object,\n\t\t\t/*Function|String|Array*/ f, /*Object?*/ o\n\t\t){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a shape or a surface and applies a function \"f\" to in the context of \"o\"\n\t\t\t//\t\t(or global, if missing). If \"shape\" was a surface or a group, it applies the same\n\t\t\t//\t\tfunction to all children recursively effectively visiting all shapes of the underlying scene graph.\n\t\t\t// object:\n\t\t\t//\t\tThe gfx container to iterate.\n\t\t\t// f:\n\t\t\t//\t\tThe function to apply.\n\t\t\t// o:\n\t\t\t//\t\tThe scope.\n\t\t\to = o || kernel.global;\n\t\t\tf.call(o, object);\n\t\t\tif(object instanceof g.Surface || object instanceof g.Group){\n\t\t\t\tarr.forEach(object.children, function(shape){\n\t\t\t\t\tgu.forEach(shape, f, o);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tserialize: function(object){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a shape or a surface and returns an object, which describes underlying shapes.\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe container to serialize.\n\n\t\t\tvar t = {}, v, isSurface = object instanceof g.Surface;\n\t\t\tif(isSurface || object instanceof g.Group){\n\t\t\t\tt.children = arr.map(object.children, gu.serialize);\n\t\t\t\tif(isSurface){\n\t\t\t\t\treturn t.children;\t// Array\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tt.shape = object.getShape();\n\t\t\t}\n\t\t\tif(object.getTransform){\n\t\t\t\tv = object.getTransform();\n\t\t\t\tif(v){ t.transform = v; }\n\t\t\t}\n\t\t\tif(object.getStroke){\n\t\t\t\tv = object.getStroke();\n\t\t\t\tif(v){ t.stroke = v; }\n\t\t\t}\n\t\t\tif(object.getFill){\n\t\t\t\tv = object.getFill();\n\t\t\t\tif(v){ t.fill = v; }\n\t\t\t}\n\t\t\tif(object.getFont){\n\t\t\t\tv = object.getFont();\n\t\t\t\tif(v){ t.font = v; }\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t},\n\n\t\ttoJson: function(object, prettyPrint){\n\t\t\t// summary:\n\t\t\t//\t\tWorks just like serialize() but returns a JSON string. If prettyPrint is true, the string is pretty-printed to make it more human-readable.\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe container to serialize.\n\t\t\t// prettyPrint: Boolean?\n\t\t\t//\t\tIndicates whether the output string should be formatted.\n\t\t\t// returns: String\n\t\t\t\n\t\t\treturn jsonLib.toJson(gu.serialize(object), prettyPrint);\t// String\n\t\t},\n\n\t\tdeserialize: function(parent, object){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a surface or a shape and populates it with an object produced by serialize().\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe destination container for the deserialized shapes.\n\t\t\t// object: dojox/gfx/shape.Shape|Array\n\t\t\t//\t\tThe shapes to deserialize.\n\n\t\t\tif(object instanceof Array){\n\t\t\t\treturn arr.map(object, lang.hitch(null, gu.deserialize, parent));\t// Array\n\t\t\t}\n\t\t\tvar shape = (\"shape\" in object) ? parent.createShape(object.shape) : parent.createGroup();\n\t\t\tif(\"transform\" in object){\n\t\t\t\tshape.setTransform(object.transform);\n\t\t\t}\n\t\t\tif(\"stroke\" in object){\n\t\t\t\tshape.setStroke(object.stroke);\n\t\t\t}\n\t\t\tif(\"fill\" in object){\n\t\t\t\tshape.setFill(object.fill);\n\t\t\t}\n\t\t\tif(\"font\" in object){\n\t\t\t\tshape.setFont(object.font);\n\t\t\t}\n\t\t\tif(\"children\" in object){\n\t\t\t\tarr.forEach(object.children, lang.hitch(null, gu.deserialize, shape));\n\t\t\t}\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\n\t\t},\n\n\t\tfromJson: function(parent, json){\n\t\t\t// summary:\n\t\t\t//\t\tWorks just like deserialize() but takes a JSON representation of the object.\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe destination container for the deserialized shapes.\n\t\t\t// json: String\n\t\t\t//\t\tThe shapes to deserialize.\n\n\t\t\treturn gu.deserialize(parent, jsonLib.fromJson(json));\t// Array|dojox/gfx/shape.Shape\n\t\t},\n\n\t\ttoSvg: function(/*dojox/gfx/shape.Surface*/surface){\n\t\t\t// summary:\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.\n\t\t\t// description:\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.  The value of this output\n\t\t\t//\t\tis that there are numerous serverside parser libraries that can render\n\t\t\t//\t\tSVG into images in various formats.  This provides a way that GFX objects\n\t\t\t//\t\tcan be captured in a known format and sent serverside for serialization\n\t\t\t//\t\tinto an image.\n\t\t\t// surface:\n\t\t\t//\t\tThe GFX surface to serialize.\n\t\t\t// returns:\n\t\t\t//\t\tDeferred object that will be called when SVG serialization is complete.\n\t\t\n\t\t\t//Since the init and even surface creation can be async, we need to\n\t\t\t//return a deferred that will be called when content has serialized.\n\t\t\tvar deferred = new Deferred();\n\t\t\n\t\t\tif(g.renderer === \"svg\"){\n\t\t\t\t//If we're already in SVG mode, this is easy and quick.\n\t\t\t\ttry{\n\t\t\t\t\tvar svg = gu._cleanSvg(gu._innerXML(surface.rawNode));\n\t\t\t\t\tdeferred.callback(svg);\n\t\t\t\t}catch(e){\n\t\t\t\t\tdeferred.errback(e);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//Okay, now we have to get creative with hidden iframes and the like to\n\t\t\t\t//serialize SVG.\n\t\t\t\tif (!gu._initSvgSerializerDeferred) {\n\t\t\t\t\tgu._initSvgSerializer();\n\t\t\t\t}\n\t\t\t\tvar jsonForm = gu.toJson(surface);\n\t\t\t\tvar serializer = function(){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvar sDim = surface.getDimensions();\n\t\t\t\t\t\tvar width = sDim.width;\n\t\t\t\t\t\tvar\theight = sDim.height;\n\n\t\t\t\t\t\t//Create an attach point in the iframe for the contents.\n\t\t\t\t\t\tvar node = gu._gfxSvgProxy.document.createElement(\"div\");\n\t\t\t\t\t\tgu._gfxSvgProxy.document.body.appendChild(node);\n\t\t\t\t\t\t//Set the node scaling.\n\t\t\t\t\t\twin.withDoc(gu._gfxSvgProxy.document, function() {\n\t\t\t\t\t\t\thtml.style(node, \"width\", width);\n\t\t\t\t\t\t\thtml.style(node, \"height\", height);\n\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t//Create temp surface to render object to and render.\n\t\t\t\t\t\tvar ts = gu._gfxSvgProxy[dojox._scopeName].gfx.createSurface(node, width, height);\n\n\t\t\t\t\t\t//It's apparently possible that a suface creation is async, so we need to use\n\t\t\t\t\t\t//the whenLoaded function.  Probably not needed for SVG, but making it common\n\t\t\t\t\t\tvar draw = function(surface) {\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy[dojox._scopeName].gfx.utils.fromJson(surface, jsonForm);\n\n\t\t\t\t\t\t\t\t//Get contents and remove temp surface.\n\t\t\t\t\t\t\t\tvar svg = gu._cleanSvg(node.innerHTML);\n\t\t\t\t\t\t\t\tsurface.clear();\n\t\t\t\t\t\t\t\tsurface.destroy();\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy.document.body.removeChild(node);\n\t\t\t\t\t\t\t\tdeferred.callback(svg);\n\t\t\t\t\t\t\t}catch(e){\n\t\t\t\t\t\t\t\tdeferred.errback(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tts.whenLoaded(null,draw);\n\t\t\t\t\t }catch (ex) {\n\t\t\t\t\t\tdeferred.errback(ex);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t//See if we can call it directly or pass it to the deferred to be\n\t\t\t\t//called on initialization.\n\t\t\t\tif(gu._initSvgSerializerDeferred.fired > 0){\n\t\t\t\t\tserializer();\n\t\t\t\t}else{\n\t\t\t\t\tgu._initSvgSerializerDeferred.addCallback(serializer);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn deferred; //dojo.Deferred that will be called when serialization finishes.\n\t\t},\n\n\t\t//iFrame document used for handling SVG serialization.\n\t\t_gfxSvgProxy: null,\n\n\t\t//Serializer loaded.\n\t\t_initSvgSerializerDeferred: null,\n\n\t\t_svgSerializerInitialized: function() {\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to call when the serializer init completed.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tgu._initSvgSerializerDeferred.callback(true);\n\t\t},\n\n\t\t_initSvgSerializer: function(){\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to initialize the hidden iframe where SVG rendering\n\t\t\t//\t\twill occur.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(!gu._initSvgSerializerDeferred){\n\t\t\t\tgu._initSvgSerializerDeferred = new Deferred();\n\t\t\t\tvar f = win.doc.createElement(\"iframe\");\n\t\t\t\thtml.style(f, {\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: \"1em\",\n\t\t\t\t\theight: \"1em\",\n\t\t\t\t\ttop: \"-10000px\"\n\t\t\t\t});\n\t\t\t\tvar intv;\n\t\t\t\tif(has(\"ie\")){\n\t\t\t\t\tf.onreadystatechange = function(){\n\t\t\t\t\t\tif(f.contentWindow.document.readyState == \"complete\"){\n\t\t\t\t\t\t\tf.onreadystatechange = function() {};\n\t\t\t\t\t\t\tintv = setInterval(function() {\n\t\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\n\t\t\t\t\t\t\t\t\tclearInterval(intv);\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\tf.onload = function(){\n\t\t\t\t\t\tf.onload = function() {};\n\t\t\t\t\t\tintv = setInterval(function() {\n\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\n\t\t\t\t\t\t\t\tclearInterval(intv);\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 50);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t//We have to load the GFX SVG proxy frame.  Default is to use the one packaged in dojox.\n\t\t\t\tvar uri = (config[\"dojoxGfxSvgProxyFrameUrl\"]||require.toUrl(\"dojox/gfx/resources/gfxSvgProxyFrame.html\"));\n\t\t\t\tf.setAttribute(\"src\", uri.toString());\n\t\t\t\twin.body().appendChild(f);\n\t\t\t}\n\t\t},\n\n\t\t_innerXML: function(/*Node*/node){\n\t\t\t// summary:\n\t\t\t//\t\tImplementation of MS's innerXML function, borrowed from dojox.xml.parser.\n\t\t\t// node:\n\t\t\t//\t\tThe node from which to generate the XML text representation.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(node.innerXML){\n\t\t\t\treturn node.innerXML;\t//String\n\t\t\t}else if(node.xml){\n\t\t\t\treturn node.xml;\t\t//String\n\t\t\t}else if(typeof XMLSerializer != \"undefined\"){\n\t\t\t\treturn (new XMLSerializer()).serializeToString(node);\t//String\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\n\t\t_cleanSvg: function(svg) {\n\t\t\t// summary:\n\t\t\t//\t\tInternal function that cleans up artifacts in extracted SVG content.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(svg){\n\t\t\t\t//Make sure the namespace is set.\n\t\t\t\tif(svg.indexOf(\"xmlns=\\\"http://www.w3.org/2000/svg\\\"\") == -1){\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\n\t\t\t\t\tsvg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + svg;\n\t\t\t\t}\n\t\t\t\t//Same for xmlns:xlink (missing in Chrome and Safari)\n\t\t\t\tif(svg.indexOf(\"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\") == -1){\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\n\t\t\t\t\tsvg = \"<svg xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\" + svg;\n\t\t\t\t}\n\t\t\t\t//and add namespace to href attribute if not done yet \n\t\t\t\t//(FF 5+ adds xlink:href but not the xmlns def)\n\t\t\t\tif(svg.indexOf(\"xlink:href\") === -1){\n\t\t\t\t\tsvg = svg.replace(/href\\s*=/g, \"xlink:href=\");\n\t\t\t\t}\n\t\t\t\t// in IE, <image are serialized as <img>\n\t\t\t\tsvg = svg.replace(/<img\\b([^>]*)>/gi,\"<image $1 />\");\n\t\t\t\t//Do some other cleanup, like stripping out the\n\t\t\t\t//dojoGfx attributes and quoting ids.\n\t\t\t\tsvg = svg.replace(/\\bdojoGfx\\w*\\s*=\\s*(['\"])\\w*\\1/g, \"\");\n\t\t\t\tsvg = svg.replace(/\\b__gfxObject__\\s*=\\s*(['\"])\\w*\\1/g, \"\");\n\t\t\t\tsvg = svg.replace(/[=]([^\"']+?)(\\s|>)/g,'=\"$1\"$2');\n\t\t\t\t\n\t\t\t\t// Undefined strokes (IE 8 seralization weirdness) should be removed to  \n\t\t\t\t// allow default.  'undefined' is not a valid value. \n\t\t\t\tsvg = svg.replace(/\\bstroke-opacity\\w*\\s*=\\s*(['\"])undefined\\1/g, \"\"); \t\t\t\t\n\t\t\t}\n\t\t\treturn svg;  //Cleaned SVG text.\n\t\t}\n\t});\n\n\treturn gu;\n});\n","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/array\", \"./lambda\"],\n\tfunction(kernel, lang, arr, df){\n\n// This module adds high-level functions and related constructs:\n//\t- array-processing functions similar to standard JS functions\n\n// Notes:\n//\t- this module provides JS standard methods similar to high-level functions in dojo/_base/array.js:\n//\t\tforEach, map, filter, every, some\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n//\t- take an iterator objects as the array argument\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\n\t\tfilter: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with all elements that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = [], v, i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tv = a[i];\n\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tv = a.next();\n\t\t\t\t\tif(f.call(o, v, i++, a)){ t.push(v); }\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tv = a[i];\n\t\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tforEach: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\texecutes a provided function once per array element.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; f.call(o, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext(); f.call(o, a.next(), i++, a));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tf.call(o, a[i], i, a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn o;\t// Object\n\t\t},\n\t\tmap: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with the results of calling\n\t\t\t//\t\ta provided function on every element in this array.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t, n, i;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tt = new Array(n = a.length);\n\t\t\t\tfor(i = 0; i < n; t[i] = f.call(o, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tt = [];\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(f.call(o, a.next(), i++, a)));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tt = [];\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tt.push(f.call(o, a[i], i, a));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tevery: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether all elements in the array pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tif(!f.call(o, a.next(), i++, a)){\n\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\t// Boolean\n\t\t},\n\t\tsome: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether some element in the array passes the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tif(f.call(o, a.next(), i++, a)){\n\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\t// Boolean\n\t\t}\n\t});\n\t\n\treturn df;\n});\n","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"./lambda\"], function(kernel, lang, df){\n\n// This module adds high-level functions and related constructs:\n//\t- object/dictionary helpers\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- skip all attributes that are present in the empty object\n//\t\t(IE and/or 3rd-party libraries).\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// object helpers\n\t\tkeys: function(/*Object*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of all keys in the object\n\t\t\tvar t = [];\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tt; // Array\n\t\t},\n\t\tvalues: function(/*Object*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of all values in the object\n\t\t\tvar t = [];\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt.push(obj[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tt; // Array\n\t\t},\n\t\tfilterIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates new object with all attributes that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = {}, v, i;\n\t\t\tfor(i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tv = obj[i];\n\t\t\t\t\tif(f.call(o, v, i, obj)){ t[i] = v; }\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t},\n\t\tforIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\titerates over all object attributes.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tf.call(o, obj[i], i, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn o;\t// Object\n\t\t},\n\t\tmapIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates new object with the results of calling\n\t\t\t//\t\ta provided function on every attribute in this object.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = {}, i;\n\t\t\tfor(i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt[i] = f.call(o, obj[i], i, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t}\n\t});\n\t\n\treturn df;\n});\n","  define ({\n\t\treverseMatrix: function(plot, dim, offsets, rtl){\n\t\t\t//summary:\n\t\t\t//\treverse the underlying matrix of the plots to perform the mirroring behavior.\n\t\t\t//plot:\n\t\t\t//  the plot which has the matrix to be reversed.\n\t\t\t//dim:\n\t\t\t//  the dimension (width,height) of the chart.\n\t\t\t//offsets:\n\t\t\t//  the offsets of the chart\n\t\t\tvar shift = offsets.l - offsets.r;\n\t\t\tvar xx = rtl? -1 : 1;\n\t\t\tvar xy = 0;\n\t\t\tvar yx = 0;\n\t\t\tvar yy = 1;\n\t\t\tvar dx = rtl? dim.width + shift : 0;\n\t\t\tvar dy = 0;\n\t\t\tif(plot.matrix){\n\t\t\t\txx = xx * Math.abs(plot.matrix.xx);\n\t\t\t\tyy = plot.matrix.yy;\n\t\t\t\txy = plot.matrix.xy;\n\t\t\t\tyx = plot.matrix.yx;\n\t\t\t\tdy = plot.matrix.xy;\n\t\t\t}\n\t\t\tplot.setTransform({xx: xx, xy: xy, yx: yx, yy: yy, dx: dx, dy: dy});\n \t}\n });\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/kernel\", \"./lambda\"],\n\tfunction(lang, arr, kernel, df){\n\n// This module adds high-level functions and related constructs:\n//\t- \"fold\" family of functions\n\n// Notes:\n//\t- missing high-level functions are provided with the compatible API:\n//\t\tfoldl, foldl1, foldr, foldr1\n//\t- missing JS standard functions are provided with the compatible API:\n//\t\treduce, reduceRight\n//\t- the fold's counterpart: unfold\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n//\t- take an iterator objects as the array argument (only foldl, foldl1, and reduce)\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// classic reduce-class functions\n\t\tfoldl: function(/*Array|String|Object*/ a, /*Function*/ f, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\n\t\t\t//\t\tto right using a seed value as a starting point; returns the final\n\t\t\t//\t\tvalue.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldl1: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\n\t\t\t//\t\tto right; returns the final value.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar z, i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tz = a[0];\n\t\t\t\tfor(i = 1, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tif(a.hasNext()){\n\t\t\t\t\tz = a.next();\n\t\t\t\t\tfor(i = 1; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tvar first = true;\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(first){\n\t\t\t\t\t\t\tz = a[i];\n\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldr: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\n\t\t\t//\t\tto left using a seed value as a starting point; returns the final\n\t\t\t//\t\tvalue.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length; i > 0; --i, z = f.call(o, z, a[i], i, a));\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldr1: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\n\t\t\t//\t\tto left; returns the final value.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar n = a.length, z = a[n - 1], i = n - 1;\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a));\n\t\t\treturn z;\t// Object\n\t\t},\n\t\t// JS 1.8 standard array functions, which can take a lambda as a parameter.\n\t\treduce: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\n\t\t\t// summary:\n\t\t\t//\t\tapply a function simultaneously against two values of the array\n\t\t\t//\t\t(from left-to-right) as to reduce it to a single value.\n\t\t\treturn arguments.length < 3 ? df.foldl1(a, f) : df.foldl(a, f, z);\t// Object\n\t\t},\n\t\treduceRight: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\n\t\t\t// summary:\n\t\t\t//\t\tapply a function simultaneously against two values of the array\n\t\t\t//\t\t(from right-to-left) as to reduce it to a single value.\n\t\t\treturn arguments.length < 3 ? df.foldr1(a, f) : df.foldr(a, f, z);\t// Object\n\t\t},\n\t\t// the fold's counterpart: unfold\n\t\tunfold: function(/*Function|String|Array*/ pr, /*Function|String|Array*/ f,\n\t\t\t\t\t\t/*Function|String|Array*/ g, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds an array by unfolding a value\n\t\t\to = o || kernel.global; f = df.lambda(f); g = df.lambda(g); pr = df.lambda(pr);\n\t\t\tvar t = [];\n\t\t\tfor(; !pr.call(o, z); t.push(f.call(o, z)), z = g.call(o, z));\n\t\t\treturn t;\t// Array\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"../Element\"],\n\tfunction(declare, Element){\n\t/*=====\n\tvar __BaseAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t};\n\t=====*/\n\treturn declare(\"dojox.charting.axis2d.Base\", Element, {\n\t\t// summary:\n\t\t//\t\tThe base class for any axis.  This is more of an interface/API\n\t\t//\t\tdefinition than anything else; see dojox.charting.axis2d.Default\n\t\t//\t\tfor more details.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a new base axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this axis belongs to.\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\n\t\t\t//\t\tAn optional arguments object to define the axis parameters.\n\t\t\tthis.vertical = kwArgs && kwArgs.vertical;\n\t\t\tthis.opt = {};\n\t\t\tthis.opt.min = kwArgs && kwArgs.min;\n\t\t\tthis.opt.max = kwArgs && kwArgs.max;\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for clearing the axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tinitialized: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a flag as to whether or not this axis has been initialized.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tIf the axis is initialized or not.\n\t\t\treturn false;\t//\tBoolean\n\t\t},\n\t\tcalculate: function(min, max, span){\n\t\t\t// summary:\n\t\t\t//\t\tStub function to run the calculations needed for drawing this axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tgetScaler: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return the scaler object created during calculate.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe scaler object (see dojox.charting.scaler.linear for more information)\n\t\t\treturn null;\t//\tObject\n\t\t},\n\t\tgetTicks: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return the object that helps define how ticks are rendered.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe ticks object.\n\t\t\treturn null;\t//\tObject\n\t\t},\n\t\tgetOffsets: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return any offsets needed for axis and series rendering.\n\t\t\t// returns: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\treturn {l: 0, r: 0, t: 0, b: 0};\t//\tObject\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tStub function to render this axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to determine a data value\n\t\t\t//\t\tthat should be ignored.\n\t\t\t// value: Number|Null|Object\n\t\t\t//\t\tA data value to be inspected.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tIf the value makes sense for this axis or not.\n\t\t\treturn false;\n\t\t},\n\t\tnaturalBaseline: 0\n\t});\n});\n","define([\"dojo/_base/declare\", \"dojo/dom-style\"],\n\tfunction(declare, domStyle){\n\t// module:\n\t//\t\tdojox/charting/bidi/axis2d/Default\t\t\t\n\treturn declare(null, {\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\n\t\t\t// additional preprocessing of the labels, needed for rtl base text direction in LTR\n\t\t\t// GUI, or for ltr base text direction for RTL GUI.\n\n\t\t\tvar isChartDirectionRtl = (domStyle.get(chart.node,\"direction\") == \"rtl\");\n\t\t\tvar isBaseTextDirRtl = (chart.getTextDir(label) == \"rtl\");\n\n\t\t\tif(isBaseTextDirRtl && !isChartDirectionRtl){\n\t\t\t\tlabel = \"<span dir='rtl'>\" + label +\"</span>\";\n\t\t\t}\n\t\t\tif(!isBaseTextDirRtl && isChartDirectionRtl){\n\t\t\t\tlabel = \"<span dir='ltr'>\" + label +\"</span>\";\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t\n\t\t_isRtl: function(){\n\t\t\treturn this.chart.isRightToLeft();\n\t\t}\n\t});\n});\n\n","define([\"dojo/_base/lang\"], \n  function(lang){\n\tvar primitive = lang.getObject(\"dojox.charting.scaler.primitive\", true);\n\treturn lang.mixin(primitive, {\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs){\n\t\t\tif(min == max){\n\t\t\t\t// artificially extend bounds\n\t\t\t\tmin -= 0.5;\n\t\t\t\tmax += 0.5;\n\t\t\t\t// now the line will be centered\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbounds: {\n\t\t\t\t\tlower: min,\n\t\t\t\t\tupper: max,\n\t\t\t\t\tfrom:  min,\n\t\t\t\t\tto:    max,\n\t\t\t\t\tscale: span / (max - min),\n\t\t\t\t\tspan:  span\n\t\t\t\t},\n\t\t\t\tscaler: primitive\n\t\t\t};\n\t\t},\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\n\t\t\treturn {major: [], minor: [], micro: []};\t// Object\n\t\t},\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\n\t\t},\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"./Default\"], function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Lines\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience constructor to create a typical line chart.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tPreset our default plot to be line-based.\n\t\t\tthis.opt.lines = true;\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"./Default\"], \n  function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Areas\", Default, {\n\t\t// summary:\n\t\t//\t\tRepresents an area chart.  See dojox/charting/plot2d/Default for details.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an Area chart.\n\t\t\tthis.opt.lines = true;\n\t\t\tthis.opt.areas = true;\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"./Default\"], function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Markers\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience plot to draw a line chart with markers.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tSet up the plot for lines and markers.\n\t\t\tthis.opt.markers = true;\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"./Default\"], function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.MarkersOnly\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience object to draw only markers (like a scatter but not quite).\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tSet up our default plot to only have markers and no lines.\n\t\t\tthis.opt.lines   = false;\n\t\t\tthis.opt.markers = true;\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\", \"dojox/gfx/gradutils\"],\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx, gradutils){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\treturn declare(\"dojox.charting.plot2d.Scatter\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot object representing a typical scatter chart.\n\t\tdefaultParams: {\n\t\t\tshadows: null,\t// draw shadows\n\t\t\tanimate: null\t// animate chart to place\n\t\t},\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tmarkerStroke:\t\t{},\n\t\t\tmarkerOutline:\t\t{},\n\t\t\tmarkerShadow:\t\t{},\n\t\t\tmarkerFill:\t\t\t{},\n\t\t\tmarkerFont:\t\t\t\"\",\n\t\t\tmarkerFontColor:\t\"\",\n\t\t\tstyleFunc:\t\t\tnull\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate the scatter plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Scatter\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, events = this.events();\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(\"marker\", [this.opt, run]), lpoly,\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler);\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\n\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: ht(i + 1) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t\t}else{\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\n\t\t\t\tvar shadowMarkers  = new Array(lpoly.length),\n\t\t\t\t\tfrontMarkers   = new Array(lpoly.length),\n\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\n\n\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\tvar value = run.data[i], finalTheme;\n\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinalTheme = t.post(theme, \"marker\");\n\t\t\t\t\t}\n\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + finalTheme.symbol;\n\t\t\t\t\tif(finalTheme.marker.shadow){\n\t\t\t\t\t\tshadowMarkers[i] = s.createPath(\"M\" + (c.x + finalTheme.marker.shadow.dx) + \" \" +\n\t\t\t\t\t\t\t(c.y + finalTheme.marker.shadow.dy) + \" \" + finalTheme.symbol).\n\t\t\t\t\t\t\tsetStroke(finalTheme.marker.shadow).setFill(finalTheme.marker.shadow.color);\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateScatter(shadowMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(finalTheme.marker.outline){\n\t\t\t\t\t\tvar outline = dc.makeStroke(finalTheme.marker.outline);\n\t\t\t\t\t\toutline.width = 2 * outline.width + (finalTheme.marker.stroke && finalTheme.marker.stroke.width || 0);\n\t\t\t\t\t\toutlineMarkers[i] = s.createPath(path).setStroke(outline);\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateScatter(outlineMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar stroke = dc.makeStroke(finalTheme.marker.stroke),\n\t\t\t\t\t\tfill = this._plotFill(finalTheme.marker.fill, dim, offsets);\n\t\t\t\t\tif(fill && (fill.type === \"linear\" || fill.type == \"radial\")){\n\t\t\t\t\t\tvar color = gradutils.getColor(fill, {x: c.x, y: c.y});\n\t\t\t\t\t\tif(stroke){\n\t\t\t\t\t\t\tstroke.color = color;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(color);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(fill);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tvar markerBox = frontMarkers[i].getBoundingBox();\n\t\t\t\t\t\tthis.createLabel(s, value, markerBox, finalTheme);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateScatter(frontMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\tif(frontMarkers.length){\n\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\trun.dyn.markerStroke = frontMarkers[frontMarkers.length - 1].getStroke();\n\t\t\t\t\trun.dyn.markerFill   = frontMarkers[frontMarkers.length - 1].getFill();\n\t\t\t\t}\n\n\t\t\t\tif(events){\n\t\t\t\t\tvar eventSeries = new Array(frontMarkers.length);\n\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\n\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\telement: \"marker\",\n\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\toutline: outlineMarkers && outlineMarkers[i] || null,\n\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\n\t\t\t\t\t\t\tcx:      lpoly[i].x,\n\t\t\t\t\t\t\tcy:      lpoly[i].y\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\t\t\to.x = i + 1;\n\t\t\t\t\t\t\to.y = run.data[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\to.x = run.data[i].x;\n\t\t\t\t\t\t\to.y = run.data[i].y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\t}else{\n\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t}\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Scatter\n\t\t},\n\t\t_animateScatter: function(shape, offset){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [0, 0], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"./Stacked\"], function(declare, Stacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedLines\", Stacked, {\n\t\t// summary:\n\t\t//\t\tA convenience object to create a stacked line chart.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce our Stacked base to be lines only.\n\t\t\tthis.opt.lines = true;\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"./Stacked\"], function(declare, Stacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedAreas\", Stacked, {\n\t\t// summary:\n\t\t//\t\tA convenience object to set up a stacked area plot.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce our Stacked plotter to include both lines and areas.\n\t\t\tthis.opt.lines = true;\n\t\t\tthis.opt.areas = true;\n\t\t}\n\t});\n});\n\n","define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"./Columns\", \"./commonStacked\"], \n\tfunction(declare, lang, Columns, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedColumns\", Columns, {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a stacked column chart (vertical bars).\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\n \t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"dojo/_base/array\", \"./Columns\", \"./common\"], \n\tfunction(declare, array, Columns, dc){\n\n\treturn declare(\"dojox.charting.plot2d.ClusteredColumns\", Columns, {\n\t\t// summary:\n\t\t//\t\tA plot representing grouped or clustered columns (vertical bars)\n\t\tgetBarProperties: function(){\n\t\t\tvar length = this.series.length;\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt, length);\n\t\t\treturn {gap: f.gap, width: f.size, thickness: f.size, clusterSize: length};\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"./Bars\", \"./commonStacked\"], \n\tfunction(declare, lang, Bars, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedBars\", Bars, {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a stacked bar chart (horizontal bars).\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\")), t;\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\n\t\t\treturn stats; // Object\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\n\t\t}\n\t});\n});\n","define([\"dojo/_base/declare\", \"dojo/_base/array\", \"./Bars\", \"./common\"], \n\tfunction(declare, array, Bars, dc){\n\n\treturn declare(\"dojox.charting.plot2d.ClusteredBars\", Bars, {\n\t\t// summary:\n\t\t//\t\tA plot representing grouped or clustered bars (horizontal bars)\n\t\tgetBarProperties: function(){\n\t\t\tvar length = this.series.length;\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt, length);\n\t\t\treturn {gap: f.gap, height: f.size, thickness: f.size};\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/sniff\",\n\t\t\"./CartesianBase\", \"./common\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, declare, arr, has, CartesianBase, dc, du, fx){\n\n\tvar sortTicks = function(a,b){return a.value - b.value};\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__GridCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\n\t\t// summary:\n\t\t//\t\tA special keyword arguments object that is specific to a grid \"plot\".\n\n\t\t// majorHLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major horizontal line. By default major lines use major tick stroke.\n\t\tmajorHLine:undefined,\n\n\t\t// minorHLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor horizontal line. By default minor lines use minor tick stroke.\n\t\tminorHLine:undefined,\n\n\t\t// majorVLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major vertical line. By default major lines use major tick stroke.\n\t\tmajorVLine:undefined,\n\n\t\t// minorVLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor vertical line. By default major lines use major tick stroke.\n\t\tminorVLine:undefined,\n\n\t\t// hFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other horizontal stripe created by grid lines.\n\t\thFill: undefined,\n\n\t\t// hAlternateFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating horizontal stripe created by grid lines not filled by `hFill`.\n\t\thAlternateFill: undefined,\n\n\t\t// vFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other vertical stripe created by grid lines.\n\t\tvFill: undefined,\n\n\t\t// vAlternateFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating vertical stripe created by grid lines not filled by `vFill`.\n\t\tvAlternateFill: undefined,\n\n\t\t// hMajorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the horizontal axis. Default is true.\n\t\thMajorLines: true,\n\n\t\t// hMinorLines: Boolean?\n\t\t//\t\tWhether to show lines at the minor ticks along the horizontal axis. Default is false.\n\t\thMinorLines: false,\n\n\t\t// vMajorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is true.\n\t\tvMajorLines: true,\n\n\t\t// vMinorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is false.\n\t\tvMinorLines: false,\n\n\t\t// hStripes: Boolean?\n\t\t//\t\tWhether to show horizontal stripes. Default is false.\n\t\thStripes: false,\n\n\t\t// vStripes: Boolean?\n\t\t//\t\tWhether to show vertical stripes. Default is false.\n\t\tvStripes: false,\n\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the grid lines are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false,\n\n\t\t// renderOnAxis: Boolean?\n\t\t//\t\tWhether or not the grid is rendered when drawn at horizontal or vertical axis position. Default is true.\n\t\trenderOnAxis: true\n\t});\n\t=====*/\n\n\treturn declare(\"dojox.charting.plot2d.Grid\", CartesianBase, {\n\t\t// summary:\n\t\t//\t\tA \"faux\" plot that can be placed behind other plots to represent\n\t\t//\t\ta grid against which other plots can be easily measured.\n\t\tdefaultParams: {\n\t\t\thMajorLines: true,\t// draw horizontal major lines\n\t\t\thMinorLines: false,\t// draw horizontal minor lines\n\t\t\tvMajorLines: true,\t// draw vertical major lines\n\t\t\tvMinorLines: false,\t// draw vertical minor lines\n\t\t\thStripes: false,\t// draw vertical stripes\n\t\t\tvStripes: false,\t// draw vertical stripes\n\t\t\tanimate: null,   // animate bars into place\n\t\t\tenableCache: false,\n\t\t\trenderOnAxis: true\n\t\t},\n\n\t\toptionalParams: {\n\t\t\tmajorHLine: {},\n\t\t\tminorHLine: {},\n\t\t\tmajorVLine: {},\n\t\t\tminorVLine: {},\n\t\t\thFill: {},\n\t\t\tvFill: {},\n\t\t\thAlternateFill: {},\n\t\t\tvAlternateFill: {}\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate the faux Grid plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__GridCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the parameters of the underlying grid.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineFreePool = [];\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._rectFreePool = [];\n\t\t\t\tthis._rectUsePool = [];\n\t\t\t}\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tIgnored but included as a dummy method.\n\t\t\t// returns: dojox/charting/plot2d/Grid\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\n\t\t},\n\t\tcleanGroup: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._rectFreePool = this._rectFreePool.concat(this._rectUsePool);\n\t\t\t\tthis._rectUsePool = [];\n\t\t\t}\n\t\t},\n\t\tcreateLine: function(creator, params){\n\t\t\tvar line;\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\n\t\t\t\tline = this._lineFreePool.pop();\n\t\t\t\tline.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(line);\n\t\t\t}else{\n\t\t\t\tline = creator.createLine(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineUsePool.push(line);\n\t\t\t}\n\t\t\treturn line;\n\t\t},\n\t\tcreateRect: function(creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && this._rectFreePool.length > 0){\n\t\t\t\trect = this._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\t\t\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Grid\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.getGroup(), ta = this.chart.theme, lineStroke, ticks;\n\t\t\tif((has(\"ios\") && has(\"ios\") < 6) || has(\"android\") || (has(\"safari\") && !has(\"ios\"))){\n\t\t\t\t// clipping seems buggy in some mobile Webkit browser and Safari desktop\n\t\t\t\t// it does not clip correctly if only lines are present => create a invisible rectangle...\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\t\t\t\ts.createRect({ x: offsets.l, y: offsets.t, width: w, height: h});\n\t\t\t}\n\t\t\tif(this._vAxis){\n\t\t\t\t// draw horizontal stripes and lines\n\t\t\t\tticks = this._vAxis.getTicks();\n\t\t\t\tvar vScaler = this._vAxis.getScaler();\n\t\t\t\tif(ticks != null && vScaler != null){\n\t\t\t\t\tvar vt = vScaler.scaler.getTransformerFromModel(vScaler);\n\t\t\t\t\tif(this.opt.hStripes){\n\t\t\t\t\t\tthis._renderHRect(ticks, ta.grid, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.hMinorLines){\n\t\t\t\t\t\tlineStroke = this.opt.minorHLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\n\t\t\t\t\t\tthis._renderHLines(ticks.minor, lineStroke, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.hMajorLines){\n\t\t\t\t\t\tlineStroke = this.opt.majorHLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\n\t\t\t\t\t\tthis._renderHLines(ticks.major, lineStroke, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(this._hAxis){\n\t\t\t\t// draw vertical stripes and lines\n\t\t\t\tticks = this._hAxis.getTicks();\n\t\t\t\tvar hScaler = this._hAxis.getScaler();\n\t\t\t\tif(ticks != null && hScaler != null){\n\t\t\t\t\tvar ht = hScaler.scaler.getTransformerFromModel(hScaler);\n\t\t\t\t\tif(this.opt.vStripes){\n\t\t\t\t\t\tthis._renderVRect(ticks, ta.grid, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\t\t\t\t\tif(ticks && this.opt.vMinorLines){\n\t\t\t\t\t\tlineStroke = this.opt.minorVLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\n\t\t\t\t\t\tthis._renderVLines(ticks.minor, lineStroke, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\t\t\t\t\tif(ticks && this.opt.vMajorLines){\n\t\t\t\t\t\tlineStroke = this.opt.majorVLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\n\t\t\t\t\t\tthis._renderVLines(ticks.major, lineStroke, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\n\t\t},\n\t\t_renderHLines: function(ticks, lineStroke, dim, offsets, vScaler, vt){\n\t\t\tvar s = this.getGroup();\n\t\t\tarr.forEach(ticks, function(tick){\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._vAxis.opt.leftBottom?vScaler.bounds.from:vScaler.bounds.to)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar y = dim.height - offsets.b - vt(tick.value);\n\t\t\t\tvar hLine = this.createLine(s, {\n\t\t\t\t\tx1: offsets.l,\n\t\t\t\t\ty1: y,\n\t\t\t\t\tx2: dim.width - offsets.r,\n\t\t\t\t\ty2: y\n\t\t\t\t}).setStroke(lineStroke);\n\t\t\t\tif(this.animate){\n\t\t\t\t\tthis._animateGrid(hLine, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\t_renderVLines: function(ticks, lineStroke, dim, offsets, hScaler, ht){\n\t\t\tvar s = this.getGroup();\n\t\t\tarr.forEach(ticks, function(tick){\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._hAxis.opt.leftBottom?hScaler.bounds.from:hScaler.bounds.to)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar x = offsets.l + ht(tick.value);\n\t\t\t\tvar vLine = this.createLine(s, {\n\t\t\t\t\tx1: x,\n\t\t\t\t\ty1: offsets.t,\n\t\t\t\t\tx2: x,\n\t\t\t\t\ty2: dim.height - offsets.b\n\t\t\t\t}).setStroke(lineStroke);\n\t\t\t\tif(this.animate){\n\t\t\t\t\tthis._animateGrid(vLine, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\t_renderHRect: function(ticks, theme, dim, offsets, vScaler, vt){\n\t\t\tvar fill, tick, y, y2, hStripe;\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\n\t\t\tallTicks.sort(sortTicks);\n\t\t\tif(allTicks[0].value > vScaler.bounds.from){\n\t\t\t\tallTicks.splice(0, 0, {value: vScaler.bounds.from});\n\t\t\t}\n\t\t\tif(allTicks[allTicks.length - 1].value < vScaler.bounds.to){\n\t\t\t\tallTicks.push({value: vScaler.bounds.to});\n\t\t\t}\n\t\t\tvar s = this.getGroup();\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\n\t\t\t\ttick = allTicks[j];\n\t\t\t\ty = dim.height - offsets.b - vt(tick.value);\n\t\t\t\ty2 = dim.height - offsets.b - vt(allTicks[j+1].value);\n\n\t\t\t\tfill = (j%2 == 0)?(this.opt.hAlternateFill ||(theme && theme.alternateFill)):\n\t\t\t\t\t(this.opt.hFill || (theme && theme.fill));\n\t\t\t\tif(fill){\n\t\t\t\t\thStripe = this.createRect(s, {\n\t\t\t\t\t\tx: offsets.l,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: dim.width - offsets.r,\n\t\t\t\t\t\theight: y - y2\n\t\t\t\t\t}).setFill(fill);\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateGrid(hStripe, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_renderVRect: function(ticks, theme, dim, offsets, hScaler, ht){\n\t\t\tvar fill, tick, x, x2, vStripe;\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\n\t\t\tallTicks.sort(sortTicks);\n\t\t\tif(allTicks[0].value > hScaler.bounds.from){\n\t\t\t\tallTicks.splice(0, 0, {value: hScaler.bounds.from});\n\t\t\t}\n\t\t\tif(allTicks[allTicks.length - 1].value < hScaler.bounds.to){\n\t\t\t\tallTicks.push({value: hScaler.bounds.to});\n\t\t\t}\n\t\t\tvar s = this.getGroup();\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\n\t\t\t\ttick = allTicks[j];\n\t\t\t\tx = offsets.l + ht(tick.value);\n\t\t\t\tx2 = offsets.l + ht(allTicks[j+1].value);\n\n\t\t\t\tfill = (j%2 == 0)?(this.opt.vAlternateFill ||(theme && theme.alternateFill)):\n\t\t\t\t\t(this.opt.vFill || (theme && theme.fill));\n\t\t\t\tif(fill){\n\t\t\t\t\tvStripe = this.createRect(s, {\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: offsets.t,\n\t\t\t\t\t\twidth: x2 - x,\n\t\t\t\t\t\theight: dim.width - offsets.r\n\t\t\t\t\t}).setFill(fill);\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateGrid(vStripe, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_animateGrid: function(shape, type, offset, size){\n\t\t\tvar transStart = type == \"h\" ? [offset, 0] : [0, offset];\n\t\t\tvar scaleStart = type == \"h\" ? [1/size, 1] : [1, 1/size];\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: transStart, end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: scaleStart, end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\" ,\"dojo/_base/declare\", \"dojo/dom-geometry\", \"dojo/_base/Color\",\n\t\t\"./Base\", \"./_PlotEvents\", \"./common\",\n\t\t\"dojox/gfx\", \"dojox/gfx/matrix\", \"dojox/lang/functional\", \"dojox/lang/utils\",\"dojo/has\"],\n\tfunction(lang, arr, declare, domGeom, Color, Base, PlotEvents, dc, g, m, df, du, has){\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__PieCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\n\t\t// summary:\n\t\t//\t\tSpecialized keyword arguments object for use in defining parameters on a Pie chart.\n\n\t\t// labels: Boolean?\n\t\t//\t\tWhether or not to draw labels for each pie slice.  Default is true.\n\t\tlabels:\t\t\ttrue,\n\n\t\t// ticks: Boolean?\n\t\t//\t\tWhether or not to draw ticks to labels within each slice. Default is false.\n\t\tticks:\t\t\tfalse,\n\n\t\t// fixed: Boolean?\n\t\t//\t\tWhether a fixed precision must be applied to data values for display. Default is true.\n\t\tfixed:\t\t\ttrue,\n\n\t\t// precision: Number?\n\t\t//\t\tThe precision at which to round data values for display. Default is 0.\n\t\tprecision:\t\t1,\n\n\t\t// labelOffset: Number?\n\t\t//\t\tThe amount in pixels by which to offset labels.  Default is 20.\n\t\tlabelOffset:\t20,\n\n\t\t// labelStyle: String?\n\t\t//\t\tOptions as to where to draw labels.  Values include \"default\", and \"columns\".\tDefault is \"default\".\n\t\tlabelStyle:\t\t\"default\",\t// default/columns\n\n\t\t// omitLabels: Boolean?\n\t\t//\t\tWhether labels of slices small to the point of not being visible are omitted.\tDefault false.\n\t\tomitLabels: false,\n\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\n\t\thtmlLabels:\t\ttrue,\n\n\t\t// radGrad: String?\n\t\t//\t\tThe type of radial gradient to use in rendering.  Default is \"native\".\n\t\tradGrad:        \"native\",\n\n\t\t// fanSize: Number?\n\t\t//\t\tThe amount for a radial gradient.  Default is 5.\n\t\tfanSize:\t\t5,\n\n\t\t// startAngle: Number?\n\t\t//\t\tWhere to being rendering gradients in slices, in degrees.  Default is 0.\n\t\tstartAngle:     0,\n\n\t\t// radius: Number?\n\t\t//\t\tThe size of the radial gradient.  Default is 0.\n\t\tradius:\t\t0,\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot.\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t\t//\t\tbe required for this to work.\n\t\tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// innerRadius: Number?\n\t\t//\t\tThe inner radius of a ring in percent (0-100).  If value < 0\n\t\t//\t\tthen it is assumed to be pixels, not percent.\n\t\tinnerRadius:\t0,\n\n\t\t//  minWidth: Number?\n\t\t//      The minimum width of a pie slice at its chord. The default is 10px.\n\t\tminWidth:   10\n\n\t});\n\t=====*/\n\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\n\n\treturn declare(\"dojox.charting.plot2d.Pie\", [Base, PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot that represents a typical pie chart.\n\t\tdefaultParams: {\n\t\t\tlabels:\t\t\ttrue,\n\t\t\tticks:\t\t\tfalse,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelOffset:\t20,\n\t\t\tlabelStyle:\t\t\"default\",\t// default/columns\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tradGrad:       \"native\",\t// or \"linear\", or \"fan\"\n\t\t\tfanSize:\t\t   5,\t\t\t// maximum fan size in degrees\n\t\t\tstartAngle:    0,\t\t\t// start angle for slices in degrees\n\t\t\tinnerRadius:\t0,\t\t\t// inner radius in pixels\n\t\t\tminWidth:      0,\t\t\t// minimal width of degenerated slices\n\t\t\tzeroDataMessage: \"\"     // The message to display when there is no data, if provided by the user.\n\t\t},\n\t\toptionalParams: {\n\t\t\tradius:\t\t0,\n\t\t\tomitLabels: false,\n\t\t\t// theme components\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:\tnull,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tlabelWiring: {}\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a pie plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.axes = [];\n\t\t\tthis.run = null;\n\t\t\tthis.dyn = [];\n\t\t\tthis.runFilter = [];\n\t\t\tif(kwArgs && kwArgs.hasOwnProperty(\"innerRadius\")){\n\t\t\t\tthis._plotSetInnerRadius = true;\n\t\t\t}\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.dyn = [];\n\t\t\tthis.run = null;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tDummy method, since axes are irrelevant with a Pie chart.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a series of data to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\tthis.run = run;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\n\t\t},\n\t\tgetRequiredColors: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturn the number of colors needed to draw this plot.\n\t\t\treturn this.run ? this.run.data.length : 0;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t//\tsummary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t//\tdim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t//\toffsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t//\treturns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = false;\n\t\t\tthis._eventSeries = {};\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.group, t = this.chart.theme;\n\n\t\t\tif(!this._plotSetInnerRadius && t && t.pieInnerRadius){\n\t\t\t\tthis.opt.innerRadius = t.pieInnerRadius;\n\t\t\t}\n\n\t\t\t// calculate the geometry\n\t\t\tvar rx = (dim.width  - offsets.l - offsets.r) / 2,\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\n\t\t\t\tr  = Math.min(rx, ry),\n\t\t\t\ttaFont = \"font\" in this.opt ? this.opt.font : t.axis.tick.titleFont || \"\",\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\n\t\t\t\ttaFontColor = this.opt.hasOwnProperty(\"fontColor\") ? this.opt.fontColor : t.axis.tick.fontColor,\n\t\t\t\tstartAngle = m._degToRad(this.opt.startAngle),\n\t\t\t\tstart = startAngle, filteredRun, slices, labels, shift, labelR,\n\t\t\t\trun = this.run.data,\n\t\t\t\tevents = this.events();\n\n\t\t\t/* Added to handle no data case */\n\t\t\tvar noDataFunc = lang.hitch(this, function(){\n\t\t\t\tvar ct = t.clone();\n\t\t\t\tvar themes = df.map(run, function(v){\n\t\t\t\t\tvar tMixin = [this.opt, this.run];\n\t\t\t\t\tif(v !== null && typeof v != \"number\"){\n\t\t\t\t\t\ttMixin.push(v);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\n\t\t\t\t\t}\n\t\t\t\t\treturn ct.next(\"slice\", tMixin, true);\n\t\t\t\t}, this);\n\n\t\t\t\t// Draw initial pie, with text in it noting 0 data.\n\t\t\t\tif(\"radius\" in this.opt){\n\t\t\t\t\tr = this.opt.radius < r ? this.opt.radius : r;\n\t\t\t\t}\n\n\t\t\t\tvar circle = {\n\t\t\t\t\tcx: offsets.l + rx,\n\t\t\t\t\tcy: offsets.t + ry,\n\t\t\t\t\tr:  r\n\t\t\t\t};\n\t\t\t\tvar rColor = new Color(taFontColor);\n\t\t\t\t// If we have a radius, we'll need to fade the ring some\n\t\t\t\tif(this.opt.innerRadius){\n\t\t\t\t\trColor.a = 0.1;\n\t\t\t\t}\n\t\t\t\tvar ring = this._createRing(s, circle).setStroke(rColor);\n\t\t\t\tif(this.opt.innerRadius){\n\t\t\t\t\t// If we have a radius, fill it with the faded color.\n\t\t\t\t\tring.setFill(rColor);\n\t\t\t\t}\n\t\t\t\tif(this.opt.zeroDataMessage){\n\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size/3, this.opt.zeroDataMessage, {\n\t\t\t\t\t\tseries: {\n\t\t\t\t\t\t\tfont: taFont,\n\t\t\t\t\t\t\tfontColor: taFontColor\n\t\t\t\t\t\t}\n\t\t\t\t\t},\tnull, \"middle\");\n\t\t\t\t}\n\t\t\t\tthis.dyn = [];\n\t\t\t\tarr.forEach(run, function(item, i){\n\t\t\t\t\tthis.dyn.push({\n\t\t\t\t\t\tfill: this._plotFill(themes[i].series.fill, dim, offsets),\n\t\t\t\t\t\tstroke: themes[i].series.stroke});\n\t\t\t\t}, this);\n\t\t\t});\n\t\t\t/* END Added to handle no data case */\n\n\t\t\t// Draw over circle!\n\t\t\tif(!this.run && !this.run.data.ength){\n\t\t\t\tnoDataFunc();\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif(typeof run[0] == \"number\"){\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x, 0) : 0\");\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\n\t\t\t\t\tnoDataFunc();\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\n\t\t\t\tif(this.opt.labels){\n\t\t\t\t\tlabels = arr.map(slices, function(x){\n\t\t\t\t\t\treturn x > 0 ? this._getLabel(x * 100) + \"%\" : \"\";\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x.y, 0) : 0\");\n\t\t\t\tif(!filteredRun.length || df.every(filteredRun, \"<= 0\")){\n\t\t\t\t\tnoDataFunc();\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\n\t\t\t\tif(this.opt.labels){\n\t\t\t\t\tlabels = arr.map(slices, function(x, i){\n\t\t\t\t\t\tif(x < 0){ return \"\"; }\n\t\t\t\t\t\tvar v = run[i];\n\t\t\t\t\t\treturn v.hasOwnProperty(\"text\") ? v.text : this._getLabel(x * 100) + \"%\";\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar themes = df.map(run, function(v){\n\t\t\t\tvar tMixin = [this.opt, this.run];\n\t\t\t\tif(v !== null && typeof v != \"number\"){\n\t\t\t\t\ttMixin.push(v);\n\t\t\t\t}\n\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\n\t\t\t\t}\n\t\t\t\treturn t.next(\"slice\", tMixin, true);\n\t\t\t}, this);\n\n\t\t\tif(this.opt.labels) {\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label, i){\n\t\t\t\t\tvar font = themes[i].series.font;\n\t\t\t\t\treturn g._base._getTextBox(label, {font: font}).w;\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\n\n\t\t\t\tif(this.opt.labelOffset < 0){\n\t\t\t\t\tr = Math.min(rx - 2 * shift, ry - size) + this.opt.labelOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.opt.hasOwnProperty(\"radius\")){\n\t\t\t\tr = this.opt.radius < r * 0.9 ? this.opt.radius : r * 0.9;\n\t\t\t}\n\n\t\t\tif (!this.opt.radius && this.opt.labels && this.opt.labelStyle == \"columns\") {\n\t\t\t\tr = r / 2;\n\t\t\t\tif (rx > ry && rx > r * 2) {\n\t\t\t\t\tr *= rx / (r * 2);\n\t\t\t\t}\n\t\t\t\tif (r >= ry * 0.8) {\n\t\t\t\t\tr = ry * 0.8;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (r >= ry * 0.9) {\n\t\t\t\t\tr = ry * 0.9;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlabelR = r - this.opt.labelOffset;\n\n\t\t\tvar circle = {\n\t\t\t\t\tcx: offsets.l + rx,\n\t\t\t\t\tcy: offsets.t + ry,\n\t\t\t\t\tr:  r\n\t\t\t\t};\n\n\t\t\tthis.dyn = [];\n\t\t\t// draw slices\n\t\t\tvar eventSeries = new Array(slices.length);\n\n\t\t\t// Calulate primarily size for each slice\n\t\t\tvar slicesSteps = [], localStart = start;\n\t\t\tvar minWidth = this.opt.minWidth;\n\t\t\tarr.forEach(slices, function(slice, i){\n\t\t\t\tif(slice === 0){\n\t\t\t\t\tslicesSteps[i] = {\n\t\t\t\t\t\tstep: 0,\n\t\t\t\t\t\tend: localStart,\n\t\t\t\t\t\tstart: localStart,\n\t\t\t\t\t\tweak: false\n\t\t\t\t\t};\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar end = localStart + slice * 2 * Math.PI;\n\t\t\t\tif(i === slices.length - 1){\n\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t}\n\t\t\t\tvar step = end - localStart,\n\t\t\t\t\tdist = step * r;\n\t\t\t\tslicesSteps[i] = {\n\t\t\t\t\tstep:  step,\n\t\t\t\t\tstart: localStart,\n\t\t\t\t\tend:   end,\n\t\t\t\t\tweak: dist < minWidth\n\t\t\t\t};\n\t\t\t\tlocalStart = end;\n\t\t\t});\n\n\t\t\tif(minWidth > 0){\n\t\t\t\tvar weakCount = 0, weakCoef = minWidth / r, oldWeakCoefSum = 0, i;\n\t\t\t\tfor(i = slicesSteps.length - 1; i >= 0; i--){\n\t\t\t\t\tif(slicesSteps[i].weak){\n\t\t\t\t\t\t++weakCount;\n\t\t\t\t\t\toldWeakCoefSum += slicesSteps[i].step;\n\t\t\t\t\t\tslicesSteps[i].step = weakCoef;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// make sure that our steps are small enough\n\t\t\t\tvar weakCoefSum = weakCount * weakCoef;\n\t\t\t\tif(weakCoefSum > Math.PI){\n\t\t\t\t\tweakCoef = Math.PI / weakCount;\n\t\t\t\t\tfor(i = 0; i < slicesSteps.length; ++i){\n\t\t\t\t\t\tif(slicesSteps[i].weak){\n\t\t\t\t\t\t\tslicesSteps[i].step = weakCoef;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tweakCoefSum = Math.PI;\n\t\t\t\t}\n\t\t\t\t// now let's redistribute percentage\n\t\t\t\tif(weakCount > 0){\n\t\t\t\t\tweakCoef = 1 - (weakCoefSum - oldWeakCoefSum) / 2 / Math.PI;\n\t\t\t\t\tfor(i = 0; i < slicesSteps.length; ++i){\n\t\t\t\t\t\tif(!slicesSteps[i].weak){\n\t\t\t\t\t\t\tslicesSteps[i].step = weakCoef * slicesSteps[i].step;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// now let's update start and end values\n\t\t\t\tfor(i = 0; i < slicesSteps.length; ++i){\n\t\t\t\t\tslicesSteps[i].start = i ? slicesSteps[i].end : localStart;\n\t\t\t\t\tslicesSteps[i].end = slicesSteps[i].start + slicesSteps[i].step;\n\t\t\t\t}\n\t\t\t\t// let's make sure that our last end is exactly 2 * Math.PI\n\t\t\t\tfor(i = slicesSteps.length - 1; i >= 0; --i){\n\t\t\t\t\tif(slicesSteps[i].step !== 0){\n\t\t\t\t\t\tslicesSteps[i].end = localStart + 2 * Math.PI;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocalStart = start;\n\t\t\tvar o, specialFill;\n\t\t\tarr.some(slices, function(slice, i){\n\t\t\t\tvar shape;\n\t\t\t\tvar v = run[i], theme = themes[i];\n\n\t\t\t\tif(slice >= 1){\n\t\t\t\t\t// whole pie\n\t\t\t\t\tspecialFill = this._plotFill(theme.series.fill, dim, offsets);\n\t\t\t\t\tspecialFill = this._shapeFill(specialFill,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tx: circle.cx - circle.r, y: circle.cy - circle.r,\n\t\t\t\t\t\t\twidth: 2 * circle.r, height: 2 * circle.r\n\t\t\t\t\t\t});\n\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, circle.r);\n\t\t\t\t\tshape = this._createRing(s, circle).setFill(specialFill).setStroke(theme.series.stroke);\n\t\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\n\n\t\t\t\t\tif(events){\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\telement: \"slice\",\n\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\tx:       i,\n\t\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\n\t\t\t\t\t\t\tcx:      circle.cx,\n\t\t\t\t\t\t\tcy:      circle.cy,\n\t\t\t\t\t\t\tcr:      r\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar k;\n\t\t\t\t\tfor(k = i + 1; k < slices.length; k++){\n\t\t\t\t\t\ttheme = themes[k];\n\t\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\t// stop iteration\n\t\t\t\t}\n\n\t\t\t\tif(slicesSteps[i].step === 0){\n\t\t\t\t\t// degenerated slice\n\t\t\t\t\t// But we still want a fill since this will be skipped and we need the fill\n\t\t\t\t\t// for the label.\n\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\n\t\t\t\t\treturn false;\t// continue\n\t\t\t\t}\n\n\t\t\t\t// calculate the geometry of the slice\n\t\t\t\tvar step = slicesSteps[i].step,\n\t\t\t\t\tx1 = circle.cx + r * Math.cos(localStart),\n\t\t\t\t\ty1 = circle.cy + r * Math.sin(localStart),\n\t\t\t\t\tx2 = circle.cx + r * Math.cos(localStart + step),\n\t\t\t\t\ty2 = circle.cy + r * Math.sin(localStart + step);\n\t\t\t\t// draw the slice\n\t\t\t\tvar fanSize = m._degToRad(this.opt.fanSize), stroke;\n\t\t\t\tif(theme.series.fill && theme.series.fill.type === \"radial\" && this.opt.radGrad === \"fan\" && step > fanSize){\n\t\t\t\t\tvar group = s.createGroup(), nfans = Math.ceil(step / fanSize), delta = step / nfans;\n\t\t\t\t\tspecialFill = this._shapeFill(theme.series.fill,\n\t\t\t\t\t\t{x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\n\t\t\t\t\tvar j, alpha, beta, fansx, fansy, fanex, faney;\n\t\t\t\t\tfor(j = 0; j < nfans; ++j){\n\t\t\t\t\t\talpha = localStart + (j - FUDGE_FACTOR) * delta;\n\t\t\t\t\t\tbeta  = localStart + (j + 1 + FUDGE_FACTOR) * delta;\n\t\t\t\t\t\tfansx = j == 0 ? x1 : circle.cx + r * Math.cos(alpha);\n\t\t\t\t\t\tfansy = j == 0 ? y1 : circle.cy + r * Math.sin(alpha);\n\t\t\t\t\t\tfanex = j == nfans - 1 ? x2 : circle.cx + r * Math.cos(beta);\n\t\t\t\t\t\tfaney = j == nfans - 1 ? y2 : circle.cy + r * Math.sin(beta);\n\t\t\t\t\t\tthis._createSlice(group, circle, r, fansx, fansy, fanex, faney, alpha, delta).\n\t\t\t\t\t\t\tsetFill(this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r,\n\t\t\t\t\t\t\t\tlocalStart + (j + 0.5) * delta, localStart + (j + 0.5) * delta));\n\t\t\t\t\t}\n\t\t\t\t\tstroke = theme.series.stroke;\n\t\t\t\t\tthis._createSlice(group, circle, r, x1, y1, x2, y2, localStart, step).setStroke(stroke);\n\t\t\t\t\tshape = group;\n\t\t\t\t}else{\n\t\t\t\t\tstroke = theme.series.stroke;\n\n\t\t\t\t\tshape = this._createSlice(s, circle, r, x1, y1, x2, y2, localStart, step).setStroke(stroke);\n\n\t\t\t\t\tspecialFill = theme.series.fill;\n\t\t\t\t\tif(specialFill && specialFill.type === \"radial\"){\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, {x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\n\t\t\t\t\t\tif(this.opt.radGrad === \"linear\"){\n\t\t\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, localStart, localStart + step);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(specialFill && specialFill.type === \"linear\"){\n\t\t\t\t\t\tvar bbox = lang.clone(shape.getBoundingBox());\n\t\t\t\t\t\tif(g.renderer === \"svg\"){\n\t\t\t\t\t\t\t// Try to fix the bounding box calculations for\n\t\t\t\t\t\t\t// height.  Only really works for SVG.\n\t\t\t\t\t\t\tvar pos = {w: 0, h: 0};\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tpos = domGeom.position(shape.rawNode);\n\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\tif(pos.h > bbox.height){\n\t\t\t\t\t\t\t\tbbox.height = pos.h;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(pos.w > bbox.width){\n\t\t\t\t\t\t\t\tbbox.width = pos.w;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tspecialFill = this._plotFill(specialFill, dim, offsets);\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, bbox);\n\t\t\t\t\t}\n\t\t\t\t\tshape.setFill(specialFill);\n\t\t\t\t}\n\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\n\n\t\t\t\tif(events){\n\t\t\t\t\to = {\n\t\t\t\t\t\telement: \"slice\",\n\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\tx:       i,\n\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\n\t\t\t\t\t\tcx:      circle.cx,\n\t\t\t\t\t\tcy:      circle.cy,\n\t\t\t\t\t\tcr:      r\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t}\n\n\t\t\t\tlocalStart = localStart + step;\n\n\t\t\t\treturn false;\t// continue\n\t\t\t}, this);\n\t\t\t// draw labels\n\t\t\tif(this.opt.labels){\n\t\t\t\tvar isRtl = has(\"dojo-bidi\") && this.chart.isRightToLeft();\n\t\t\t\tif(this.opt.labelStyle == \"default\"){\n\t\t\t\t\tstart = startAngle;\n\t\t\t\t\tlocalStart = start;\n\t\t\t\t\tarr.some(slices, function(slice, i){\n\t\t\t\t\t\tif(slice <= 0 && !this.opt.minWidth){\n\t\t\t\t\t\t\t// degenerated slice\n\t\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar theme = themes[i];\n\t\t\t\t\t\tif(slice >= 1){\n\t\t\t\t\t\t\t// whole pie\n\t\t\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size / 2, labels[i], theme, this.opt.labelOffset > 0);\n\t\t\t\t\t\t\treturn true;\t// stop iteration\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// calculate the geometry of the slice\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(this.opt.omitLabels && end-start < 0.001){\n\t\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar labelAngle = localStart + (slicesSteps[i].step / 2),//(start + end) / 2,\n\t\t\t\t\t\t\tx = circle.cx + labelR * Math.cos(labelAngle),\n\t\t\t\t\t\t\ty = circle.cy + labelR * Math.sin(labelAngle) + size / 2;\n\t\t\t\t\t\t// draw the label\n\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - x : x, y, labels[i], theme, this.opt.labelOffset > 0);\n\t\t\t\t\t\tlocalStart += slicesSteps[i].step;\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t}, this);\n\t\t\t\t}else if(this.opt.labelStyle == \"columns\"){\n\t\t\t\t\t//calculate label angles\n\t\t\t\t\tvar omitLabels = this.opt.omitLabels;\n\t\t\t\t\tstart = startAngle;\n\t\t\t\t\tlocalStart = start;\n\t\t\t\t\tvar labeledSlices = [],\n\t\t\t\t\t\tsignificantCount = 0, k;\n\t\t\t\t\tfor(k = slices.length - 1; k >= 0; --k){\n\t\t\t\t\t\tif(slices[k]){\n\t\t\t\t\t\t\t++significantCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tarr.forEach(slices, function(slice, i){\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.minWidth !== 0 || end - start >= 0.001){\n\t\t\t\t\t\t\t// var labelAngle = (start + end) / 2;\n\t\t\t\t\t\t\tvar labelAngle = localStart + (slicesSteps[i].step / 2);//(start + end) / 2,\n\t\t\t\t\t\t\tif(significantCount === 1 && !this.opt.minWidth){\n\t\t\t\t\t\t\t\tlabelAngle = (start + end) / 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabeledSlices.push({\n\t\t\t\t\t\t\t\tangle: labelAngle,\n\t\t\t\t\t\t\t\tleft:  Math.cos(labelAngle) < 0,\n\t\t\t\t\t\t\t\ttheme: themes[i],\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tomit: omitLabels? end - start < 0.001:false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t\tlocalStart += slicesSteps[i].step;\n\t\t\t\t\t}, this);\n\n\t\t\t\t\t//calculate label radius to each slice\n\t\t\t\t\tvar labelHeight = g._base._getTextBox(\"a\", {font:taFont, whiteSpace: \"nowrap\"}).h;\n\t\t\t\t\tthis._getProperLabelRadius(labeledSlices, labelHeight, circle.r * 1.1);\n\n\t\t\t\t\t//draw label and wiring\n\t\t\t\t\tvar leftColumn  = circle.cx - circle.r * 2,\n\t\t\t\t\t\trightColumn = circle.cx + circle.r * 2;\n\t\t\t\t\tarr.forEach(labeledSlices, function(slice){\n\t\t\t\t\t\tif(slice.omit){\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar cTheme = themes[slice.index], lrPadding = 0;\n\t\t\t\t\t\tif(cTheme && cTheme.axis && cTheme.axis.tick && cTheme.axis.tick.labelGap){\n\t\t\t\t\t\t\t// Try to pad the lable a bit, the same as a tick gap.\n\t\t\t\t\t\t\tlrPadding = cTheme.axis.tick.labelGap;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar labelWidth = g._base._getTextBox(labels[slice.index],\n\t\t\t\t\t\t\t\t{font: cTheme.series.font, whiteSpace: \"nowrap\", paddingLeft: lrPadding + \"px\"}).w,\n\t\t\t\t\t\t\tx = circle.cx + slice.labelR * Math.cos(slice.angle),\n\t\t\t\t\t\t\ty = circle.cy + slice.labelR * Math.sin(slice.angle),\n\t\t\t\t\t\t\tjointX = (slice.left) ? (leftColumn + labelWidth) : (rightColumn - labelWidth),\n\t\t\t\t\t\t\tlabelX = (slice.left) ? leftColumn : jointX + lrPadding,\n\t\t\t\t\t\t\tnewRadius = circle.r,\n\t\t\t\t\t\t\twiring = s.createPath().moveTo(circle.cx + newRadius * Math.cos(slice.angle),\n\t\t\t\t\t\t\t\tcircle.cy + newRadius * Math.sin(slice.angle));\n\t\t\t\t\t\tif(Math.abs(slice.labelR * Math.cos(slice.angle)) < circle.r * 2 - labelWidth){\n\t\t\t\t\t\t\twiring.lineTo(x, y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twiring.lineTo(jointX, y).setStroke(slice.theme.series.labelWiring);\n\t\t\t\t\t\t// Push the wiring to the back so that highlight/magnify actions don't bleed the wire.\n\t\t\t\t\t\twiring.moveToBack();\n\t\t\t\t\t\t// Try to adjust the wiring position here.  The browser always adds a bit\n\t\t\t\t\t\t// of padding on height, so divide by 3 instead of 2.\n\t\t\t\t\t\tvar mid = labelHeight/3 + y;\n\t\t\t\t\t\tvar elem = this.renderLabel(s, labelX, mid || 0, labels[slice.index], cTheme, false, \"left\");\n\n\t\t\t\t\t\tif(events && !this.opt.htmlLabels){\n\t\t\t\t\t\t\tvar fontWidth  = g._base._getTextBox(labels[slice.index], {font: slice.theme.series.font}).w || 0,\n\t\t\t\t\t\t\t\tfontHeight = g.normalizedLength(g.splitFontString(slice.theme.series.font).size);\n\t\t\t\t\t\t\to = {\n\t\t\t\t\t\t\t\telement: \"labels\",\n\t\t\t\t\t\t\t\tindex:   slice.index,\n\t\t\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\t\t\tshape:   elem,\n\t\t\t\t\t\t\t\tx:       labelX,\n\t\t\t\t\t\t\t\ty:       y,\n\t\t\t\t\t\t\t\tlabel:   labels[slice.index]\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tvar shp = elem.getShape(),\n\t\t\t\t\t\t\t\tlt = domGeom.position(this.chart.node, true),\n\t\t\t\t\t\t\t\taroundRect = lang.mixin({ type : 'rect' }, {\n\t\t\t\t\t\t\t\t\tx: shp.x,\n\t\t\t\t\t\t\t\t\ty: shp.y - 2 * fontHeight\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\taroundRect.x += lt.x;\n\t\t\t\t\t\t\taroundRect.y += lt.y;\n\t\t\t\t\t\t\taroundRect.x = Math.round(aroundRect.x);\n\t\t\t\t\t\t\taroundRect.y = Math.round(aroundRect.y);\n\t\t\t\t\t\t\taroundRect.width  = Math.ceil(fontWidth);\n\t\t\t\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\n\t\t\t\t\t\t\to.aroundRect = aroundRect;\n\n\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\teventSeries[slices.length + slice.index] = o;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// post-process events to restore the original indexing\n\t\t\tvar esi = 0;\n\t\t\tthis._eventSeries[this.run.name] = df.map(run, function(v){\n\t\t\t\treturn v <= 0 ? null : eventSeries[esi++];\n\t\t\t});\n\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\n\t\t_getProperLabelRadius: function(slices, labelHeight, minRadius){\n\t\t\tif(slices.length == 1){\n\t\t\t\tslices[0].labelR = minRadius;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar leftCenterSlice = {}, rightCenterSlice = {}, leftMinSIN = 2, rightMinSIN = 2, i;\n\t\t\tvar tempSIN;\n\t\t\tfor(i = 0; i < slices.length; ++i){\n\t\t\t\ttempSIN = Math.abs(Math.sin(slices[i].angle));\n\t\t\t\tif(slices[i].left){\n\t\t\t\t\tif(leftMinSIN > tempSIN){\n\t\t\t\t\t\tleftMinSIN = tempSIN;\n\t\t\t\t\t\tleftCenterSlice = slices[i];\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(rightMinSIN > tempSIN){\n\t\t\t\t\t\trightMinSIN = tempSIN;\n\t\t\t\t\t\trightCenterSlice = slices[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tleftCenterSlice.labelR = rightCenterSlice.labelR = minRadius;\n\t\t\tthis._caculateLabelR(leftCenterSlice,  slices, labelHeight);\n\t\t\tthis._caculateLabelR(rightCenterSlice, slices, labelHeight);\n\t\t},\n\n\t\t_caculateLabelR: function(firstSlice, slices, labelHeight){\n\t\t\tvar i, j, k, length = slices.length, currentLabelR = firstSlice.labelR, nextLabelR,\n\t\t\t\tstep = slices[firstSlice.index].left ? -labelHeight : labelHeight;\n\t\t\tfor(k = 0, i = firstSlice.index, j = (i + 1) % length; k < length && slices[i].left === slices[j].left; ++k){\n\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR + step) / Math.sin(slices[j].angle);\n\t\t\t\tcurrentLabelR = Math.max(firstSlice.labelR, nextLabelR);\n\t\t\t\tslices[j].labelR = currentLabelR;\n\t\t\t\ti = (i + 1) % length;\n\t\t\t\tj = (j + 1) % length;\n\t\t\t}\n\t\t\tif(k >= length){\n\t\t\t\tslices[0].labelR = firstSlice.labelR;\n\t\t\t}\n\t\t\tfor(k = 0, i = firstSlice.index, j = (i || length) - 1; k < length && slices[i].left === slices[j].left; ++k){\n\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR - step) / Math.sin(slices[j].angle);\n\t\t\t\tcurrentLabelR = Math.max(firstSlice.labelR, nextLabelR);\n\t\t\t\tslices[j].labelR = currentLabelR;\n\t\t\t\ti = (i || length) - 1;\n\t\t\t\tj = (j || length) - 1;\n\t\t\t}\n\t\t},\n\n\t\t_createRing: function(group, circle){\n\t\t\tvar r = this.opt.innerRadius;\n\t\t\tif(r > 0){\n\t\t\t\t// Percentage, use circle.  Anything < 0 for innerRadius\n\t\t\t\t// is assumed to be a multiple of the radius.  So 0.25 innerRadius value\n\t\t\t\t// is computed to be 25% of the outer radius.\n\t\t\t\tr = circle.r * (r/100);\n\t\t\t}else if(r < 0){\n\t\t\t\tr = -r; // Assume it is pixels, fixed size hole.\n\t\t\t}\n\t\t\tif(r){\n\t\t\t\treturn group.createPath({}).setAbsoluteMode(true).\n\t\t\t\t\tmoveTo(circle.cx, circle.cy - circle.r).\n\t\t\t\t\tarcTo(circle.r, circle.r, 0, false, true, circle.cx + circle.r, circle.cy).\n\t\t\t\t\tarcTo(circle.r, circle.r, 0,  true, true, circle.cx, circle.cy - circle.r).\n\t\t\t\t\tclosePath().\n\t\t\t\t\tmoveTo(circle.cx, circle.cy - r).\n\t\t\t\t\tarcTo(r, r, 0, false, true, circle.cx + r, circle.cy).\n\t\t\t\t\tarcTo(r, r, 0,  true, true, circle.cx, circle.cy - r).\n\t\t\t\t\tclosePath();\n\t\t\t}\n\t\t\treturn group.createCircle(circle);\n\t\t},\n\t\t_createSlice: function(group, circle, R, x1, y1, x2, y2, fromAngle, stepAngle){\n\t\t\tvar r = this.opt.innerRadius;\n\t\t\tif(r > 0){\n\t\t\t\t// Percentage, use circle.  Anything < 0 for innerRadius\n\t\t\t\t// is assumed to be a multiple of the radius.  So 0.25 innerRadius value\n\t\t\t\t// is computed to be 25% of the outer radius.\n\t\t\t\tr = circle.r * (r/100);\n\t\t\t}else if(r < 0){\n\t\t\t\tr = -r; // Assume it is pixels, fixed size hole.\n\t\t\t}\n\t\t\tif(r){\n\t\t\t\tvar innerX1 = circle.cx + r * Math.cos(fromAngle),\n\t\t\t\t\tinnerY1 = circle.cy + r * Math.sin(fromAngle),\n\t\t\t\t\tinnerX2 = circle.cx + r * Math.cos(fromAngle + stepAngle),\n\t\t\t\t\tinnerY2 = circle.cy + r * Math.sin(fromAngle + stepAngle);\n\t\t\t\treturn group.createPath({}).setAbsoluteMode(true).\n\t\t\t\t\tmoveTo(innerX1, innerY1).\n\t\t\t\t\tlineTo(x1, y1).\n\t\t\t\t\tarcTo(R, R, 0, stepAngle > Math.PI, true, x2, y2).\n\t\t\t\t\tlineTo(innerX2, innerY2).\n\t\t\t\t\tarcTo(r, r, 0, stepAngle > Math.PI, false, innerX1, innerY1).\n\t\t\t\t\tclosePath();\n\t\t\t}\n\t\t\treturn group.createPath({}).setAbsoluteMode(true).\n\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\tlineTo(x1, y1).\n\t\t\t\tarcTo(R, R, 0, stepAngle > Math.PI, true, x2, y2).\n\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\tclosePath();\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\", \n\t\t\"./CartesianBase\", \"./_PlotEvents\", \"./common\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\",\n\t\t\"dojox/lang/utils\", \"dojox/gfx/fx\"], \n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\treturn declare(\"dojox.charting.plot2d.Bubble\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot representing bubbles.  Note that data for Bubbles requires 3 parameters,\n\t\t//\t\tin the form of:  { x, y, size }, where size determines the size of the bubble.\n\t\tdefaultParams: {\n\t\t\tanimate: null   // animate bars into place\n\t\t},\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:\tnull,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tlabelFunc: null\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a plot of bubbles.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tOptional keyword arguments object to help define plot parameters.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tif(!this.opt.labelFunc){\n\t\t\t\tthis.opt.labelFunc = function(value, fixed, precision){\n\t\t\t\t\treturn this._getLabel(value.size, fixed, precision);\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\t//\toverride the render so that we are plotting only circles.\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Bubble\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tvar s;\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\tconsole.warn(\"dojox.charting.plot2d.Bubble: the data in the following series cannot be rendered as a bubble chart; \", run);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(\"circle\", [this.opt, run]),\n\t\t\t\t\tpoints = arr.map(run.data, function(v){\n\t\t\t\t\t\treturn v ? {\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\n\t\t\t\t\t\t\tradius: this._vScaler.bounds.scale * (v.size / 2)\n\t\t\t\t\t\t} : null;\n\t\t\t\t\t}, this);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n                \n\t\t\t\tvar frontCircles = null, outlineCircles = null, shadowCircles = null, styleFunc = this.opt.styleFunc;\n\n\t\t\t\tvar getFinalTheme = function(item){\n\t\t\t\t\tif(styleFunc){\n\t\t\t\t\t\treturn t.addMixin(theme, \"circle\", [item, styleFunc(item)], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn t.addMixin(theme, \"circle\", item, true);\n\t\t\t\t};\n\n\t\t\t\t// make shadows if needed\n\t\t\t\tif(theme.series.shadow){\n\t\t\t\t\tshadowCircles = arr.map(points, function(item, i){\n\t\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\t\tshadow = finalTheme.series.shadow;\n\t\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\t\tcx: item.x + shadow.dx, cy: item.y + shadow.dy, r: item.radius\n\t\t\t\t\t\t\t}).setStroke(shadow).setFill(shadow.color);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(shadowCircles.length){\n\t\t\t\t\t\trun.dyn.shadow = shadowCircles[shadowCircles.length - 1].getStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// make outlines if needed\n\t\t\t\tif(theme.series.outline){\n\t\t\t\t\toutlineCircles = arr.map(points, function(item, i){\n\t\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\t\toutline = dc.makeStroke(finalTheme.series.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (theme.series.stroke && theme.series.stroke.width || 0);\n\t\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\n\t\t\t\t\t\t\t}).setStroke(outline);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(outlineCircles.length){\n\t\t\t\t\t\trun.dyn.outline = outlineCircles[outlineCircles.length - 1].getStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\trun through the data and add the circles.\n\t\t\t\tfrontCircles = arr.map(points, function(item, i){\n\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\t\tx: item.x - item.radius,\n\t\t\t\t\t\t\t\ty: item.y - item.radius,\n\t\t\t\t\t\t\t\twidth:  2 * item.radius,\n\t\t\t\t\t\t\t\theight: 2 * item.radius\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\n\t\t\t\t\t\t}).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.createLabel(s, run.data[i], rect, finalTheme);\n\t\t\t\t\t\treturn shape;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}, this);\n\t\t\t\tif(frontCircles.length){\n\t\t\t\t\trun.dyn.fill   = frontCircles[frontCircles.length - 1].getFill();\n\t\t\t\t\trun.dyn.stroke = frontCircles[frontCircles.length - 1].getStroke();\n\t\t\t\t}\n\n\t\t\t\tif(events){\n\t\t\t\t\tvar eventSeries = new Array(frontCircles.length);\n\t\t\t\t\tarr.forEach(frontCircles, function(s, i){\n\t\t\t\t\t\tif(s !== null){\n\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\telement: \"circle\",\n\t\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\t\toutline: outlineCircles && outlineCircles[i] || null,\n\t\t\t\t\t\t\t\tshadow:  shadowCircles && shadowCircles[i] || null,\n\t\t\t\t\t\t\t\tx:       run.data[i].x,\n\t\t\t\t\t\t\t\ty:       run.data[i].y,\n\t\t\t\t\t\t\t\tr:       run.data[i].size / 2,\n\t\t\t\t\t\t\t\tcx:      points[i].x,\n\t\t\t\t\t\t\t\tcy:      points[i].y,\n\t\t\t\t\t\t\t\tcr:      points[i].radius\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\t}else{\n\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t}\n\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bubble\n\t\t},\n\t\t_animateBubble: function(shape, offset, size){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [0, 1/size], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"], \n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\n\t//\tas values in a series:\n\t//\t{ x?, open, close, high, low, mid? }\n\t//\tif x is not provided, the array index is used.\n\t//\tfailing to provide the OHLC values will throw an error.\n\treturn declare(\"dojox.charting.plot2d.Candlesticks\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot that represents typical candlesticks (financial reporting, primarily).\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\n\t\t//\t\tdata array is used.\n\t\tdefaultParams: {\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\n\t\t\tanimate: null   // animate bars into place\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal candle width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal candle width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a candlestick chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcollectStats: function(series){\n\t\t\t// summary:\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\n\t\t\t//\t\tfunctionality only assumes x and y, Candlesticks must create it's own\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\n\t\t\t// series: dojox.charting.Series[]\n\t\t\t//\t\tThe data series array to be drawn on this plot.\n\t\t\t// returns: Object\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\n\n\t\t\t//\twe have to roll our own, since we need to use all four passed\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\n\t\t\tfor(var i=0; i<series.length; i++){\n\t\t\t\tvar run = series[i];\n\t\t\t\tif(!run.data.length){ continue; }\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\n\t\t\t\t\t\tif(!this.isNullValue(val)){\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t}\n\t\t\treturn stats;\t//\tObject\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = this.collectStats(this.series);\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Candlesticks\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, f, gap, width,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\tgap = f.gap;\n\t\t\twidth = f.size;\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]),\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n                \n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\n\t\t\t\t\tvar v = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(v)){\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\n\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\n\t\t\t\t\t\t\topen = vt(v.open),\n\t\t\t\t\t\t\tclose = vt(v.close),\n\t\t\t\t\t\t\thigh = vt(v.high),\n\t\t\t\t\t\t\tlow = vt(v.low);\n\t\t\t\t\t\tif(\"mid\" in v){\n\t\t\t\t\t\t\tvar mid = vt(v.mid);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(low > high){\n\t\t\t\t\t\t\tvar tmp = high;\n\t\t\t\t\t\t\thigh = low;\n\t\t\t\t\t\t\tlow = tmp;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(width >= 1){\n\t\t\t\t\t\t\t//\tdraw the line and rect, set up as a group and pass that to the events.\n\t\t\t\t\t\t\tvar doFill = open > close;\n\t\t\t\t\t\t\tvar line = { x1: width/2, x2: width/2, y1: y - high, y2: y - low },\n\t\t\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\t\t\tx: 0, y: y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\twidth: width, height: Math.max(doFill ? open-close : close-open, 1)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvar shape = s.createGroup();\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0 });\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\n\t\t\t\t\t\t\tinner.createLine(line).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createRect(rect).setStroke(finalTheme.series.stroke).\n\t\t\t\t\t\t\t\tsetFill(doFill ? finalTheme.series.fill : \"white\");\n\t\t\t\t\t\t\tif(\"mid\" in v){\n\t\t\t\t\t\t\t\t//\tadd the mid line.\n\t\t\t\t\t\t\t\tinner.createLine({\n\t\t\t\t\t\t\t\t\t\tx1: (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1), x2: width - (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1),\n\t\t\t\t\t\t\t\t\ty1: y - mid, y2: y - mid\n\t\t\t\t\t\t\t\t}).setStroke(doFill ? \"white\" : finalTheme.series.stroke);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO: double check this.\n\t\t\t\t\t\t\trun.dyn.fill   = finalTheme.series.fill;\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   inner,\n\t\t\t\t\t\t\t\t\tx:       x,\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(doFill ? open-close : close-open, 1)/2),\n\t\t\t\t\t\t\t\t\twidth:\t width,\n\t\t\t\t\t\t\t\t\theight:  Math.max(doFill ? open-close : close-open, 1),\n\t\t\t\t\t\t\t\t\tdata:\t v\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateCandlesticks(shape, y - low, high - low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Candlesticks\n\t\t},\n\n\t\ttooltipFunc: function(o){\n\t\t\treturn '<table cellpadding=\"1\" cellspacing=\"0\" border=\"0\" style=\"font-size:0.9em;\">'\n\t\t\t\t\t\t+ '<tr><td>Open:</td><td align=\"right\"><strong>' + o.data.open + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>High:</td><td align=\"right\"><strong>' + o.data.high + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>Low:</td><td align=\"right\"><strong>' + o.data.low + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>Close:</td><td align=\"right\"><strong>' + o.data.close + '</strong></td></tr>'\n\t\t\t\t\t\t+ (o.data.mid !== undefined ? '<tr><td>Mid:</td><td align=\"right\"><strong>' + o.data.mid + '</strong></td></tr>' : '')\n\t\t\t\t\t\t+ '</table>';\n\t\t},\n\n\t\t_animateCandlesticks: function(shape, voffset, vsize){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\n\t//\tas values in a series:\n\t//\t{ x?, open, close, high, low }\n\t//\tif x is not provided, the array index is used.\n\t//\tfailing to provide the OHLC values will throw an error.\n\treturn declare(\"dojox.charting.plot2d.OHLC\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot that represents typical open/high/low/close (financial reporting, primarily).\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\n\t\t//\t\tdata array is used.\n\t\tdefaultParams: {\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\n\t\t\tanimate: null\t// animate chart to place\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize: 1,\t// minimal bar size in pixels\n\t\t\tmaxBarSize: 1,\t// maximal bar size in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a candlestick chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcollectStats: function(series){\n\t\t\t// summary:\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\n\t\t\t//\t\tfunctionality only assumes x and y, OHLC must create it's own\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\n\t\t\t// series: dojox/charting/Series[]\n\t\t\t//\t\tThe data series array to be drawn on this plot.\n\t\t\t// returns: Object\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\n\n\t\t\t//\twe have to roll our own, since we need to use all four passed\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\n\t\t\tfor(var i=0; i<series.length; i++){\n\t\t\t\tvar run = series[i];\n\t\t\t\tif(!run.data.length){ continue; }\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\n\t\t\t\t\t\tif(!this.isNullValue(val)){\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t}\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = this.collectStats(this.series);\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/OHLC\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\tvar s = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, f, gap, width,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\tgap = f.gap;\n\t\t\twidth = f.size;\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]), s = run.group,\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\n\t\t\t\t\tvar v = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(v)){\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\n\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\n\t\t\t\t\t\t\topen = vt(v.open),\n\t\t\t\t\t\t\tclose = vt(v.close),\n\t\t\t\t\t\t\thigh = vt(v.high),\n\t\t\t\t\t\t\tlow = vt(v.low);\n\t\t\t\t\t\tif(low > high){\n\t\t\t\t\t\t\tvar tmp = high;\n\t\t\t\t\t\t\thigh = low;\n\t\t\t\t\t\t\tlow = tmp;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(width >= 1){\n\t\t\t\t\t\t\tvar hl = {x1: width/2, x2: width/2, y1: y - high, y2: y - low},\n\t\t\t\t\t\t\t\top = {x1: 0, x2: ((width/2) + ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), y1: y-open, y2: y-open},\n\t\t\t\t\t\t\t\tcl = {x1: ((width/2) - ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), x2: width, y1: y-close, y2: y-close};\n\t\t\t\t\t\t\tvar shape = s.createGroup();\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0});\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\n\t\t\t\t\t\t\tinner.createLine(hl).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createLine(op).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createLine(cl).setStroke(finalTheme.series.stroke);\n\n\t\t\t\t\t\t\t// TODO: double check this.\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:\t inner,\n\t\t\t\t\t\t\t\t\tx:       x,\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(open > close ? open-close : close-open, 1)/2),\n\t\t\t\t\t\t\t\t\twidth:\t width,\n\t\t\t\t\t\t\t\t\theight:  Math.max(open > close ? open-close : close-open, 1),\n\t\t\t\t\t\t\t\t\tdata:\t v\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateOHLC(shape, y - low, high - low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/OHLC\n\t\t},\n\t\t_animateOHLC: function(shape, voffset, vsize){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/connect\", \"dojo/_base/array\",\n\t\"dojo/dom-geometry\", \"dojo/_base/fx\", \"dojo/fx\", \"dojo/sniff\",\n\t\"./Base\", \"./_PlotEvents\", \"./common\", \"../axis2d/common\",\n\t\"dojox/gfx\", \"dojox/gfx/matrix\", \"dojox/gfx/fx\", \"dojox/lang/functional\",\n\t\"dojox/lang/utils\", \"dojo/fx/easing\"],\n\tfunction(lang, declare, hub, arr, domGeom, baseFx, coreFx, has,\n\t\t\tBase, PlotEvents, dc, da, g, m, gfxfx, df, du, easing){\n\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\n\n\tvar Spider = declare(\"dojox.charting.plot2d.Spider\", [Base, PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot that represents a typical Spider chart.\n\t\tdefaultParams: {\n\t\t\tlabels:\t\t\ttrue,\n\t\t\tticks:\t\t\tfalse,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelOffset:\t-10,\n\t\t\tlabelStyle:\t\t\"default\",\t// default/rows/auto\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tstartAngle:\t\t-90,\t\t// start angle for slices in degrees\n\t\t\tdivisions:\t\t 3,\t\t\t// radius tick count\n\t\t\taxisColor:\t\t \"\",\t\t// spider axis color\n\t\t\taxisWidth:\t\t 0,\t\t\t// spider axis stroke width\n\t\t\tspiderColor:\t \"\",\t\t// spider web color\n\t\t\tspiderWidth:\t 0,\t\t\t// spider web stroke width\n\t\t\tseriesWidth:\t 0,\t\t\t// plot border with\n\t\t\tseriesFillAlpha: 0.2,\t\t// plot fill alpha\n\t\t\tspiderOrigin:\t 0.16,\n\t\t\tmarkerSize:\t\t 3,\t\t\t// radius of plot vertex (px)\n\t\t\tspiderType:\t\t \"polygon\", //\"circle\"\n\t\t\tanimationType:\t easing.backOut,\n\t\t\tanimate: null,\n\t\t\taxisTickFont:\t\t\"\",\n\t\t\taxisTickFontColor:\t\"\",\n\t\t\taxisFont:\t\t\t\"\",\n\t\t\taxisFontColor:\t\t\"\"\n\t\t},\n\t\toptionalParams: {\n\t\t\tradius:\t\t0,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a Spider plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.dyn = [];\n\t\t\tthis.datas = {};\n\t\t\tthis.labelKey = [];\n\t\t\tthis.oldSeriePoints = {};\n\t\t\tthis.animate = this.opt.animate === null ? {} : this.opt.animate;\n\t\t\tthis.animations = {};\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.dyn = [];\n\t\t\tthis.axes = [];\n\t\t\tthis.datas = {};\n\t\t\tthis.labelKey = [];\n\t\t\tthis.oldSeriePoints = {};\n\t\t\tthis.animations = {};\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tOptionally set axis min and max property.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\n\t\t\t// override the computed min/max with provided values if any\n\t\t\tif(axis){\n\t\t\t\tif(axis.opt.min != undefined){\n\t\t\t\t\tthis.datas[axis.name].min = axis.opt.min;\n\t\t\t\t}\n\t\t\t\tif(axis.opt.max != undefined){\n\t\t\t\t\tthis.datas[axis.name].max = axis.opt.max;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to this plot.\n\t\t\t// run: dojox.charting.Series\n\t\t\t//\t\tThe series to be added.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series.push(run);\n\t\t\tvar key;\n\t\t\tfor(key in run.data){\n\t\t\t\tvar val = run.data[key],\n\t\t\t\t\tdata = this.datas[key];\n\t\t\t\tif(data){\n\t\t\t\t\tdata.vlist.push(val);\n\t\t\t\t\tdata.min = Math.min(data.min, val);\n\t\t\t\t\tdata.max = Math.max(data.max, val);\n\t\t\t\t}else{\n\t\t\t\t\tvar axisKey = \"__\"+key;\n\t\t\t\t\tthis.axes.push(axisKey);\n\t\t\t\t\tthis[axisKey] = key;\n\t\t\t\t\tthis.datas[key] = {min: val, max: val, vlist: [val]};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.labelKey.length <= 0){\n\t\t\t\tfor(key in run.data){\n\t\t\t\t\tthis.labelKey.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox.charting.plot2d.Base\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn dc.collectSimpleStats(this.series, function(v){ return v === null; }); // Object\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.dirty = false;\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.group, t = this.chart.theme;\n\t\t\tthis.resetEvents();\n\n\t\t\tif(!this.series || !this.series.length){\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// calculate the geometry\n\t\t\tvar o = this.opt, ta = t.axis,\n\t\t\t\trx = (dim.width\t - offsets.l - offsets.r) / 2,\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\n\t\t\t\tr  = Math.min(rx, ry),\n\t\t\t\taxisTickFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font) || \"normal normal normal 7pt Tahoma\",\n\t\t\t\taxisFont = o.axisFont || (ta.tick && ta.tick.titleFont) || \"normal normal normal 11pt Tahoma\",\n\t\t\t\taxisTickFontColor = o.axisTickFontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"silver\",\n\t\t\t\taxisFontColor = o.axisFontColor || (ta.tick && ta.tick.titleFontColor) || \"black\",\n\t\t\t\taxisColor = o.axisColor || (ta.tick && ta.tick.axisColor) || \"silver\",\n\t\t\t\tspiderColor = o.spiderColor || (ta.tick && ta.tick.spiderColor) || \"silver\",\n\t\t\t\taxisWidth = o.axisWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tspiderWidth = o.spiderWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tseriesWidth = o.seriesWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tasize = g.normalizedLength(g.splitFontString(axisFont).size),\n\t\t\t\tstartAngle = m._degToRad(o.startAngle),\n\t\t\t\tstart = startAngle, labels, shift, labelR,\n\t\t\t\touterPoints, innerPoints, divisionPoints, divisionRadius, labelPoints,\n\t\t\t\tro = o.spiderOrigin, dv = o.divisions >= 3 ? o.divisions : 3, ms = o.markerSize,\n\t\t\t\tspt = o.spiderType, at = o.animationType, lboffset = o.labelOffset < -10 ? o.labelOffset : -10,\n\t\t\t\taxisExtra = 0.2,\n\t\t\t\ti, j, point, len, fontWidth, render, serieEntry, run, data, min, max, distance;\n\t\t\t\n\t\t\tif(o.labels){\n\t\t\t\tlabels = arr.map(this.series, function(s){\n\t\t\t\t\treturn s.name;\n\t\t\t\t}, this);\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label){\n\t\t\t\t\tvar font = t.series.font;\n\t\t\t\t\treturn g._base._getTextBox(label, {\n\t\t\t\t\t\tfont: font\n\t\t\t\t\t}).w;\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\n\t\t\t\tr = Math.min(rx - 2 * shift, ry - asize) + lboffset;\n\t\t\t\tlabelR = r - lboffset;\n\t\t\t}\n\t\t\tif(\"radius\" in o){\n\t\t\t\tr = o.radius;\n\t\t\t\tlabelR = r - lboffset;\n\t\t\t}\n\t\t\tr /= (1+axisExtra);\n\t\t\tvar circle = {\n\t\t\t\tcx: offsets.l + rx,\n\t\t\t\tcy: offsets.t + ry,\n\t\t\t\tr: r\n\t\t\t};\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tserieEntry = this.series[i];\n\t\t\t\tif(!this.dirty && !serieEntry.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tserieEntry.cleanGroup();\n\t\t\t\trun = serieEntry.data;\n\t\t\t\tif(run !== null){\n\t\t\t\t\tlen = this._getObjectLength(run);\n\t\t\t\t\t//construct connect points\n\t\t\t\t\tif(!outerPoints || outerPoints.length <= 0){\n\t\t\t\t\t\touterPoints = [], innerPoints = [], labelPoints = [];\n\t\t\t\t\t\tthis._buildPoints(outerPoints, len, circle, r, start, true, dim);\n\t\t\t\t\t\tthis._buildPoints(innerPoints, len, circle, r*ro, start, true, dim);\n\t\t\t\t\t\tthis._buildPoints(labelPoints, len, circle, labelR, start, false, dim);\n\t\t\t\t\t\tif(dv > 2){\n\t\t\t\t\t\t\tdivisionPoints = [], divisionRadius = [];\n\t\t\t\t\t\t\tfor (j = 0; j < dv - 2; j++){\n\t\t\t\t\t\t\t\tdivisionPoints[j] = [];\n\t\t\t\t\t\t\t\tthis._buildPoints(divisionPoints[j], len, circle, r*(ro + (1-ro)*(j+1)/(dv-1)), start, true, dim);\n\t\t\t\t\t\t\t\tdivisionRadius[j] = r*(ro + (1-ro)*(j+1)/(dv-1));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//draw Spider\n\t\t\t//axis\n\t\t\tvar axisGroup = s.createGroup(), axisStroke = {color: axisColor, width: axisWidth},\n\t\t\t\tspiderStroke = {color: spiderColor, width: spiderWidth};\n\t\t\tfor (j = outerPoints.length - 1; j >= 0; --j){\n\t\t\t\tpoint = outerPoints[j];\n\t\t\t\tvar st = {\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra,\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra\n\t\t\t\t\t},\n\t\t\t\t\tnd = {\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra / 2,\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra / 2\n\t\t\t\t\t};\n\t\t\t\taxisGroup.createLine({\n\t\t\t\t\tx1: circle.cx,\n\t\t\t\t\ty1: circle.cy,\n\t\t\t\t\tx2: st.x,\n\t\t\t\t\ty2: st.y\n\t\t\t\t}).setStroke(axisStroke);\n\t\t\t\t//arrow\n\t\t\t\tthis._drawArrow(axisGroup, st, nd, axisStroke);\n\t\t\t}\n\t\t\t\n\t\t\t// draw the label\n\t\t\tvar labelGroup = s.createGroup();\n\t\t\tfor (j = labelPoints.length - 1; j >= 0; --j){\n\t\t\t\tpoint = labelPoints[j];\n\t\t\t\tfontWidth = g._base._getTextBox(this.labelKey[j], {font: axisFont}).w || 0;\n\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\n\t\t\t\tvar elem = da.createText[render](this.chart, labelGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\n\t\t\t\t\t\t\t\"middle\", this.labelKey[j], axisFont, axisFontColor);\n\t\t\t\tif(this.opt.htmlLabels){\n\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//spider web: polygon or circle\n\t\t\tvar spiderGroup = s.createGroup();\n\t\t\tif(spt == \"polygon\"){\n\t\t\t\tspiderGroup.createPolyline(outerPoints).setStroke(spiderStroke);\n\t\t\t\tspiderGroup.createPolyline(innerPoints).setStroke(spiderStroke);\n\t\t\t\tif(divisionPoints.length > 0){\n\t\t\t\t\tfor (j = divisionPoints.length - 1; j >= 0; --j){\n\t\t\t\t\t\tspiderGroup.createPolyline(divisionPoints[j]).setStroke(spiderStroke);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{//circle\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r}).setStroke(spiderStroke);\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r*ro}).setStroke(spiderStroke);\n\t\t\t\tif(divisionRadius.length > 0){\n\t\t\t\t\tfor (j = divisionRadius.length - 1; j >= 0; --j){\n\t\t\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: divisionRadius[j]}).setStroke(spiderStroke);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//text\n\t\t\tlen = this._getObjectLength(this.datas);\n\t\t\tvar textGroup = s.createGroup(), k = 0;\n\t\t\tfor(var key in this.datas){\n\t\t\t\tdata = this.datas[key];\n\t\t\t\tmin = data.min;\n\t\t\t\tmax = data.max;\n\t\t\t\tdistance = max - min;\n\t\t\t\t\tend = start + 2 * Math.PI * k / len;\n\t\t\t\tfor (i = 0; i < dv; i++){\n\t\t\t\t\tvar text = min + distance*i/(dv-1);\n\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*i/(dv-1)), end, dim);\n\t\t\t\t\ttext = this._getLabel(text);\n\t\t\t\t\tfontWidth = g._base._getTextBox(text, {font: axisTickFont}).w || 0;\n\t\t\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\n\t\t\t\t\tif(this.opt.htmlLabels){\n\t\t\t\t\t\tthis.htmlElements.push(da.createText[render]\n\t\t\t\t\t\t\t(this.chart, textGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\n\t\t\t\t\t\t\t\t\"start\", text, axisTickFont, axisTickFontColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\n\t\t\t//draw series (animation)\n\t\t\tthis.chart.seriesShapes = {};\n\t\t\tfor (i = this.series.length - 1; i >= 0; i--){\n\t\t\t\tserieEntry = this.series[i];\n\t\t\t\trun = serieEntry.data;\n\t\t\t\tif(run !== null){\n\t\t\t\t\tvar theme = t.next(\"spider\", [o, serieEntry]),\n\t\t\t\t\t\tf = g.normalizeColor(theme.series.fill), \n\t\t\t\t\t\tsk = {color: theme.series.fill, width: seriesWidth};\n\t\t\t\t\tf.a = o.seriesFillAlpha;\n\t\t\t\t\tserieEntry.dyn = {fill: f, stroke: sk};\n\t\t\t\t\tif(serieEntry.hidden){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t//series polygon\n\t\t\t\t\tvar seriePoints = [], tipData = [];\n\t\t\t\t\tk = 0;\n\t\t\t\t\tfor(key in run){\n\t\t\t\t\t\tdata = this.datas[key];\n\t\t\t\t\t\tmin = data.min;\n\t\t\t\t\t\tmax = data.max;\n\t\t\t\t\t\tdistance = max - min;\n\t\t\t\t\t\tvar entry = run[key], end = start + 2 * Math.PI * k / len;\n\t\t\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*(entry-min)/distance), end, dim);\n\t\t\t\t\t\tseriePoints.push(point);\n\t\t\t\t\t\ttipData.push({sname: serieEntry.name, key: key, data: entry});\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t\tseriePoints[seriePoints.length] = seriePoints[0];\n\t\t\t\t\ttipData[tipData.length] = tipData[0];\n\t\t\t\t\tvar polygonBoundRect = this._getBoundary(seriePoints),\n\t\t\t\t\t\tts = serieEntry.group;\n\t\t\t         \n\t\t\t\t\t\n\t\t\t\t\tvar osps = this.oldSeriePoints[serieEntry.name];\n\t\t\t\t\tvar cs = this._createSeriesEntry(ts, (osps || innerPoints), seriePoints, f, sk, r, ro, ms, at);\n\t\t\t\t\tthis.chart.seriesShapes[serieEntry.name] = cs;\n\t\t\t\t\tthis.oldSeriePoints[serieEntry.name] = seriePoints;\n\t\t\t\t\t\n\t\t\t\t\tvar po = {\n\t\t\t\t\t\telement: \"spider_poly\",\n\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\tid:\t\t \"spider_poly_\"+serieEntry.name,\n\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\tshape:\t cs.poly,\n\t\t\t\t\t\tparent:\t ts,\n\t\t\t\t\t\tbrect:\t polygonBoundRect,\n\t\t\t\t\t\tcx:\t\t circle.cx,\n\t\t\t\t\t\tcy:\t\t circle.cy,\n\t\t\t\t\t\tcr:\t\t r,\n\t\t\t\t\t\tf:\t\t f,\n\t\t\t\t\t\ts:\t\t s\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(po);\n\t\t\t\t\t\n\t\t\t\t\tvar so = {\n\t\t\t\t\t\telement: \"spider_plot\",\n\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\tid:\t\t \"spider_plot_\"+serieEntry.name,\n\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\tshape:\t serieEntry.group\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(so);\n\t\t\t\t\t\n\t\t\t\t\tarr.forEach(cs.circles, function(c, i){\n\t\t\t\t\t\tvar co = {\n\t\t\t\t\t\t\t\telement: \"spider_circle\",\n\t\t\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\t\t\tid:\t\t \"spider_circle_\"+serieEntry.name+i,\n\t\t\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\t\t\tshape:\t c,\n\t\t\t\t\t\t\t\tparent:\t ts,\n\t\t\t\t\t\t\t\ttdata:\t tipData[i],\n\t\t\t\t\t\t\t\tcx:\t\t seriePoints[i].x,\n\t\t\t\t\t\t\t\tcy:\t\t seriePoints[i].y,\n\t\t\t\t\t\t\t\tf:\t\t f,\n\t\t\t\t\t\t\t\ts:\t\t s\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._connectEvents(co);\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\t_createSeriesEntry: function(ts, osps, sps, f, sk, r, ro, ms, at){\n\t\t\t//polygon\n\t\t\tvar initpoints = this.animate?osps:sps;\n\t\t\tvar spoly = ts.createPolyline(initpoints).setFill(f).setStroke(sk), scircle = [];\n\t\t\tfor (var j = 0; j < initpoints.length; j++){\n\t\t\t\tvar point = initpoints[j], cr = ms;\n\t\t\t\tvar circle = ts.createCircle({cx: point.x, cy: point.y, r: cr}).setFill(f).setStroke(sk);\n\t\t\t\tscircle.push(circle);\n\t\t\t}\n\t\t\tif(this.animate) {\n\t\t\t\tvar anims = arr.map(sps, function (np, j) {\n\t\t\t\t\t// create animation\n\t\t\t\t\tvar sp = osps[j],\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: at,\n\t\t\t\t\t\t\tcurve: [sp.y, np.y]\n\t\t\t\t\t\t}, this.animate));\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (y) {\n\t\t\t\t\t\t//apply poly\n\t\t\t\t\t\tvar pshape = spl.getShape();\n\t\t\t\t\t\tpshape.points[j].y = y;\n\t\t\t\t\t\tspl.setShape(pshape);\n\t\t\t\t\t\t//apply circle\n\t\t\t\t\t\tvar cshape = sc.getShape();\n\t\t\t\t\t\tcshape.cy = y;\n\t\t\t\t\t\tsc.setShape(cshape);\n\t\t\t\t\t});\n\t\t\t\t\treturn anim;\n\t\t\t\t}, this);\n\n\t\t\t\tvar anims1 = arr.map(sps, function (np, j) {\n\t\t\t\t\t// create animation\n\t\t\t\t\tvar sp = osps[j],\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: at,\n\t\t\t\t\t\t\tcurve: [sp.x, np.x]\n\t\t\t\t\t\t}, this.animate));\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (x) {\n\t\t\t\t\t\t//apply poly\n\t\t\t\t\t\tvar pshape = spl.getShape();\n\t\t\t\t\t\tpshape.points[j].x = x;\n\t\t\t\t\t\tspl.setShape(pshape);\n\t\t\t\t\t\t//apply circle\n\t\t\t\t\t\tvar cshape = sc.getShape();\n\t\t\t\t\t\tcshape.cx = x;\n\t\t\t\t\t\tsc.setShape(cshape);\n\t\t\t\t\t});\n\t\t\t\t\treturn anim;\n\t\t\t\t}, this);\n\t\t\t\tvar masterAnimation = coreFx.combine(anims.concat(anims1)); //dojo.fx.chain(anims);\n\t\t\t\tmasterAnimation.play();\n\t\t\t}\n\t\t\treturn {group :ts, poly: spoly, circles: scircle};\n\t\t},\n\t\tplotEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for use by specific plots.\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t\tif(o.element == \"spider_plot\"){\n\t\t\t\t//dojo gfx function \"moveToFront\" not work in IE\n\t\t\t\tif(o.type == \"onmouseover\" && !has(\"ie\")){\n\t\t\t\t\to.shape.moveToFront();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttooltipFunc: function(o){\n\t\t\tif(o.element == \"spider_circle\"){\n\t\t\t\treturn o.tdata.sname + \"<br/>\" + o.tdata.key + \"<br/>\" + o.tdata.data;\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t_getBoundary: function(points){\n\t\t\tvar xmax = points[0].x,\n\t\t\t\txmin = points[0].x,\n\t\t\t\tymax = points[0].y,\n\t\t\t\tymin = points[0].y;\n\t\t\tfor(var i = 0; i < points.length; i++){\n\t\t\t\tvar point = points[i];\n\t\t\t\txmax = Math.max(point.x, xmax);\n\t\t\t\tymax = Math.max(point.y, ymax);\n\t\t\t\txmin = Math.min(point.x, xmin);\n\t\t\t\tymin = Math.min(point.y, ymin);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tx: xmin,\n\t\t\t\ty: ymin,\n\t\t\t\twidth: xmax - xmin,\n\t\t\t\theight: ymax - ymin\n\t\t\t};\n\t\t},\n\t\t\n\t\t_drawArrow: function(s, start, end, stroke){\n\t\t\tvar len = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2)),\n\t\t\t\tsin = (end.y - start.y)/len, cos = (end.x - start.x)/len,\n\t\t\t\tpoint2 = {x: end.x + (len/3)*(-sin), y: end.y + (len/3)*cos},\n\t\t\t\tpoint3 = {x: end.x + (len/3)*sin, y: end.y + (len/3)*(-cos)};\n\t\t\ts.createPolyline([start, point2, point3]).setFill(stroke.color).setStroke(stroke);\n\t\t},\n\t\t\n\t\t_buildPoints: function(points, count, circle, radius, angle, recursive, dim){\n\t\t\tfor(var i = 0; i < count; i++){\n\t\t\t\tvar end = angle + 2 * Math.PI * i / count;\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, end, dim));\n\t\t\t}\n\t\t\tif(recursive){\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, angle + 2 * Math.PI, dim));\n\t\t\t}\n\t\t},\n\t\t\n\t\t_getCoordinate: function(circle, radius, angle, dim){\n\t\t\tvar x = circle.cx + radius * Math.cos(angle);\n\t\t\tif(has(\"dojo-bidi\") && this.chart.isRightToLeft() && dim){\n\t\t\t\tx = dim.width - x;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: circle.cy + radius * Math.sin(angle)\n\t\t\t}\n\t\t},\n\t\t\n\t\t_getObjectLength: function(obj){\n\t\t\tvar count = 0;\n\t\t\tif(lang.isObject(obj)){\n\t\t\t\tfor(var key in obj){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\t// utilities\n\t\t_getLabel: function(number){\n\t\t\treturn dc.getLabel(number, this.opt.fixed, this.opt.precision);\n\t\t}\n\t});\n\n\treturn Spider; // dojox/plot2d/Spider\n});\n","define([\n\t\"./_base/lang\",\n\t\"./Evented\",\n\t\"./_base/kernel\",\n\t\"./_base/array\",\n\t\"./aspect\",\n\t\"./_base/fx\",\n\t\"./dom\",\n\t\"./dom-style\",\n\t\"./dom-geometry\",\n\t\"./ready\",\n\t\"require\" // for context sensitive loading of Toggler\n], function(lang, Evented, dojo, arrayUtil, aspect, baseFx, dom, domStyle, geom, ready, require){\n\n\t// module:\n\t//\t\tdojo/fx\n\n\t// For back-compat, remove in 2.0.\n\tif(!dojo.isAsync){\n\t\tready(0, function(){\n\t\t\tvar requires = [\"./fx/Toggler\"];\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\n\t\t});\n\t}\n\n\tvar coreFx = dojo.fx = {\n\t\t// summary:\n\t\t//\t\tEffects library on top of Base animations\n\t};\n\n\tvar _baseObj = {\n\t\t\t_fire: function(evt, args){\n\t\t\t\tif(this[evt]){\n\t\t\t\t\tthis[evt].apply(this, args||[]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\tvar _chain = function(animations){\n\t\tthis._index = -1;\n\t\tthis._animations = animations||[];\n\t\tthis._current = this._onAnimateCtx = this._onEndCtx = null;\n\n\t\tthis.duration = 0;\n\t\tarrayUtil.forEach(this._animations, function(a){\n\t\t\tif(a){\n\t\t\t\tif(typeof a.duration != \"undefined\"){\n\t        \t\tthis.duration += a.duration;\n\t\t\t\t}\n\t\t\t\tif(a.delay){\n\t\t\t\t\tthis.duration += a.delay;\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\t};\n\t_chain.prototype = new Evented();\n\tlang.extend(_chain, {\n\t\t_onAnimate: function(){\n\t\t\tthis._fire(\"onAnimate\", arguments);\n\t\t},\n\t\t_onEnd: function(){\n\t\t\tthis._onAnimateCtx.remove();\n\t\t\tthis._onEndCtx.remove();\n\t\t\tthis._onAnimateCtx = this._onEndCtx = null;\n\t\t\tif(this._index + 1 == this._animations.length){\n\t\t\t\tthis._fire(\"onEnd\");\n\t\t\t}else{\n\t\t\t\t// switch animations\n\t\t\t\tthis._current = this._animations[++this._index];\n\t\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\n\t\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\n\t\t\t\tthis._current.play(0, true);\n\t\t\t}\n\t\t},\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\n\t\t\tif(!this._current){ this._current = this._animations[this._index = 0]; }\n\t\t\tif(!gotoStart && this._current.status() == \"playing\"){ return this; }\n\t\t\tvar beforeBegin = aspect.after(this._current, \"beforeBegin\", lang.hitch(this, function(){\n\t\t\t\t\tthis._fire(\"beforeBegin\");\n\t\t\t\t}), true),\n\t\t\t\tonBegin = aspect.after(this._current, \"onBegin\", lang.hitch(this, function(arg){\n\t\t\t\t\tthis._fire(\"onBegin\", arguments);\n\t\t\t\t}), true),\n\t\t\t\tonPlay = aspect.after(this._current, \"onPlay\", lang.hitch(this, function(arg){\n\t\t\t\t\tthis._fire(\"onPlay\", arguments);\n\t\t\t\t\tbeforeBegin.remove();\n\t\t\t\t\tonBegin.remove();\n\t\t\t\t\tonPlay.remove();\n\t\t\t\t}));\n\t\t\tif(this._onAnimateCtx){\n\t\t\t\tthis._onAnimateCtx.remove();\n\t\t\t}\n\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\n\t\t\tif(this._onEndCtx){\n\t\t\t\tthis._onEndCtx.remove();\n\t\t\t}\n\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\n\t\t\tthis._current.play.apply(this._current, arguments);\n\t\t\treturn this;\n\t\t},\n\t\tpause: function(){\n\t\t\tif(this._current){\n\t\t\t\tvar e = aspect.after(this._current, \"onPause\", lang.hitch(this, function(arg){\n\t\t\t\t\t\tthis._fire(\"onPause\", arguments);\n\t\t\t\t\t\te.remove();\n\t\t\t\t\t}), true);\n\t\t\t\tthis._current.pause();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\n\t\t\tthis.pause();\n\t\t\tvar offset = this.duration * percent;\n\t\t\tthis._current = null;\n\n\t\t\tarrayUtil.some(this._animations, function(a, index){\n\t\t\t\tif(offset <= a.duration){\n\t\t\t\t\tthis._current = a;\n\t\t\t\t\tthis._index = index;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\toffset -= a.duration;\n\t\t\t\treturn false;\n\t\t\t}, this);\n\t\t\tif(this._current){\n\t\t\t\tthis._current.gotoPercent(offset / this._current.duration);\n\t\t\t}\n\t\t\tif (andPlay) { this.play(); }\n\t\t\treturn this;\n\t\t},\n\t\tstop: function(/*boolean?*/ gotoEnd){\n\t\t\tif(this._current){\n\t\t\t\tif(gotoEnd){\n\t\t\t\t\tfor(; this._index + 1 < this._animations.length; ++this._index){\n\t\t\t\t\t\tthis._animations[this._index].stop(true);\n\t\t\t\t\t}\n\t\t\t\t\tthis._current = this._animations[this._index];\n\t\t\t\t}\n\t\t\t\tvar e = aspect.after(this._current, \"onStop\", lang.hitch(this, function(arg){\n\t\t\t\t\t\tthis._fire(\"onStop\", arguments);\n\t\t\t\t\t\te.remove();\n\t\t\t\t\t}), true);\n\t\t\t\tthis._current.stop();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tstatus: function(){\n\t\t\treturn this._current ? this._current.status() : \"stopped\";\n\t\t},\n\t\tdestroy: function(){\n\t\t\tthis.stop();\n\t\t\tif(this._onAnimateCtx){ this._onAnimateCtx.remove(); }\n\t\t\tif(this._onEndCtx){ this._onEndCtx.remove(); }\n\t\t}\n\t});\n\tlang.extend(_chain, _baseObj);\n\n\tcoreFx.chain = function(/*dojo/_base/fx.Animation[]*/ animations){\n\t\t// summary:\n\t\t//\t\tChain a list of `dojo/_base/fx.Animation`s to run in sequence\n\t\t//\n\t\t// description:\n\t\t//\t\tReturn a `dojo/_base/fx.Animation` which will play all passed\n\t\t//\t\t`dojo/_base/fx.Animation` instances in sequence, firing its own\n\t\t//\t\tsynthesized events simulating a single animation. (eg:\n\t\t//\t\tonEnd of this animation means the end of the chain,\n\t\t//\t\tnot the individual animations within)\n\t\t//\n\t\t// example:\n\t\t//\tOnce `node` is faded out, fade in `otherNode`\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\n\t\t//\t|\t\tfx.chain([\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\n\t\t//\t|\t\t]).play();\n\t\t//\t|\t});\n\t\t//\n\t\treturn new _chain(lang.isArray(animations) ? animations : Array.prototype.slice.call(animations, 0)); // dojo/_base/fx.Animation\n\t};\n\n\tvar _combine = function(animations){\n\t\tthis._animations = animations||[];\n\t\tthis._connects = [];\n\t\tthis._finished = 0;\n\n\t\tthis.duration = 0;\n\t\tarrayUtil.forEach(animations, function(a){\n\t\t\tvar duration = a.duration;\n\t\t\tif(a.delay){ duration += a.delay; }\n\t\t\tif(this.duration < duration){ this.duration = duration; }\n\t\t\tthis._connects.push(aspect.after(a, \"onEnd\", lang.hitch(this, \"_onEnd\"), true));\n\t\t}, this);\n\n\t\tthis._pseudoAnimation = new baseFx.Animation({curve: [0, 1], duration: this.duration});\n\t\tvar self = this;\n\t\tarrayUtil.forEach([\"beforeBegin\", \"onBegin\", \"onPlay\", \"onAnimate\", \"onPause\", \"onStop\", \"onEnd\"],\n\t\t\tfunction(evt){\n\t\t\t\tself._connects.push(aspect.after(self._pseudoAnimation, evt,\n\t\t\t\t\tfunction(){ self._fire(evt, arguments); },\n\t\t\t\ttrue));\n\t\t\t}\n\t\t);\n\t};\n\tlang.extend(_combine, {\n\t\t_doAction: function(action, args){\n\t\t\tarrayUtil.forEach(this._animations, function(a){\n\t\t\t\ta[action].apply(a, args);\n\t\t\t});\n\t\t\treturn this;\n\t\t},\n\t\t_onEnd: function(){\n\t\t\tif(++this._finished > this._animations.length){\n\t\t\t\tthis._fire(\"onEnd\");\n\t\t\t}\n\t\t},\n\t\t_call: function(action, args){\n\t\t\tvar t = this._pseudoAnimation;\n\t\t\tt[action].apply(t, args);\n\t\t},\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\n\t\t\tthis._finished = 0;\n\t\t\tthis._doAction(\"play\", arguments);\n\t\t\tthis._call(\"play\", arguments);\n\t\t\treturn this;\n\t\t},\n\t\tpause: function(){\n\t\t\tthis._doAction(\"pause\", arguments);\n\t\t\tthis._call(\"pause\", arguments);\n\t\t\treturn this;\n\t\t},\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\n\t\t\tvar ms = this.duration * percent;\n\t\t\tarrayUtil.forEach(this._animations, function(a){\n\t\t\t\ta.gotoPercent(a.duration < ms ? 1 : (ms / a.duration), andPlay);\n\t\t\t});\n\t\t\tthis._call(\"gotoPercent\", arguments);\n\t\t\treturn this;\n\t\t},\n\t\tstop: function(/*boolean?*/ gotoEnd){\n\t\t\tthis._doAction(\"stop\", arguments);\n\t\t\tthis._call(\"stop\", arguments);\n\t\t\treturn this;\n\t\t},\n\t\tstatus: function(){\n\t\t\treturn this._pseudoAnimation.status();\n\t\t},\n\t\tdestroy: function(){\n\t\t\tthis.stop();\n\t\t\tarrayUtil.forEach(this._connects, function(handle){\n\t\t\t\thandle.remove();\n\t\t\t});\n\t\t}\n\t});\n\tlang.extend(_combine, _baseObj);\n\n\tcoreFx.combine = function(/*dojo/_base/fx.Animation[]*/ animations){\n\t\t// summary:\n\t\t//\t\tCombine a list of `dojo/_base/fx.Animation`s to run in parallel\n\t\t//\n\t\t// description:\n\t\t//\t\tCombine an array of `dojo/_base/fx.Animation`s or N\n\t\t//\t\t`dojo/_base/fx.Animation`s  to run in parallel, providing\n\t\t//\t\ta new `dojo/_base/fx.Animation` instance encompassing each\n\t\t//\t\tanimation, firing standard animation events.\n\t\t//\n\t\t// example:\n\t\t//\tFade out `node` while fading in `otherNode` simultaneously\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\n\t\t//\t|\t\tfx.combine([\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\n\t\t//\t|\t\t]).play();\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\tWhen the longest animation ends, execute a function:\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\n\t\t//\t|\t\tvar anim = fx.combine([\n\t\t//\t|\t\t\tfx.fadeIn({ node: n, duration:700 }),\n\t\t//\t|\t\t\tfx.fadeOut({ node: otherNode, duration: 300 })\n\t\t//\t|\t\t]);\n\t\t//\t|\t\taspect.after(anim, \"onEnd\", function(){\n\t\t//\t|\t\t\t// overall animation is done.\n\t\t//\t|\t\t}, true);\n\t\t//\t|\t\tanim.play(); // play the animation\n\t\t//\t|\t});\n\t\t//\n\t\treturn new _combine(lang.isArray(animations) ? animations : Array.prototype.slice.call(animations, 0)); // dojo/_base/fx.Animation\n\t};\n\n\tcoreFx.wipeIn = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tExpand a node to it's natural height.\n\t\t//\n\t\t// description:\n\t\t//\t\tReturns an animation that will expand the\n\t\t//\t\tnode defined in 'args' object from it's current height to\n\t\t//\t\tit's natural height (with no scrollbar).\n\t\t//\t\tNode must have no margin/border/padding.\n\t\t//\n\t\t// args: Object\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\n\t\t//\t\t(such as easing: node: duration: and so on)\n\t\t//\n\t\t// example:\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\n\t\t//\t|\t\tfx.wipeIn({\n\t\t//\t|\t\t\tnode:\"someId\"\n\t\t//\t|\t\t}).play()\n\t\t//\t|\t});\n\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\n\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\n\t\t\tproperties: {\n\t\t\t\theight: {\n\t\t\t\t\t// wrapped in functions so we wait till the last second to query (in case value has changed)\n\t\t\t\t\tstart: function(){\n\t\t\t\t\t\t// start at current [computed] height, but use 1px rather than 0\n\t\t\t\t\t\t// because 0 causes IE to display the whole panel\n\t\t\t\t\t\to = s.overflow;\n\t\t\t\t\t\ts.overflow = \"hidden\";\n\t\t\t\t\t\tif(s.visibility == \"hidden\" || s.display == \"none\"){\n\t\t\t\t\t\t\ts.height = \"1px\";\n\t\t\t\t\t\t\ts.display = \"\";\n\t\t\t\t\t\t\ts.visibility = \"\";\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tvar height = domStyle.get(node, \"height\");\n\t\t\t\t\t\t\treturn Math.max(height, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tend: function(){\n\t\t\t\t\t\treturn node.scrollHeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, args));\n\n\t\tvar fini = function(){\n\t\t\ts.height = \"auto\";\n\t\t\ts.overflow = o;\n\t\t};\n\t\taspect.after(anim, \"onStop\", fini, true);\n\t\taspect.after(anim, \"onEnd\", fini, true);\n\n\t\treturn anim; // dojo/_base/fx.Animation\n\t};\n\n\tcoreFx.wipeOut = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tShrink a node to nothing and hide it.\n\t\t//\n\t\t// description:\n\t\t//\t\tReturns an animation that will shrink node defined in \"args\"\n\t\t//\t\tfrom it's current height to 1px, and then hide it.\n\t\t//\n\t\t// args: Object\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\n\t\t//\t\t(such as easing: node: duration: and so on)\n\t\t//\n\t\t// example:\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\n\t\t//\t|\t\tfx.wipeOut({ node:\"someId\" }).play()\n\t\t//\t|\t});\n\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\n\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\n\t\t\tproperties: {\n\t\t\t\theight: {\n\t\t\t\t\tend: 1 // 0 causes IE to display the whole panel\n\t\t\t\t}\n\t\t\t}\n\t\t}, args));\n\n\t\taspect.after(anim, \"beforeBegin\", function(){\n\t\t\to = s.overflow;\n\t\t\ts.overflow = \"hidden\";\n\t\t\ts.display = \"\";\n\t\t}, true);\n\t\tvar fini = function(){\n\t\t\ts.overflow = o;\n\t\t\ts.height = \"auto\";\n\t\t\ts.display = \"none\";\n\t\t};\n\t\taspect.after(anim, \"onStop\", fini, true);\n\t\taspect.after(anim, \"onEnd\", fini, true);\n\n\t\treturn anim; // dojo/_base/fx.Animation\n\t};\n\n\tcoreFx.slideTo = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tSlide a node to a new top/left position\n\t\t//\n\t\t// description:\n\t\t//\t\tReturns an animation that will slide \"node\"\n\t\t//\t\tdefined in args Object from its current position to\n\t\t//\t\tthe position defined by (args.left, args.top).\n\t\t//\n\t\t// args: Object\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\n\t\t//\t\t(such as easing: node: duration: and so on). Special args members\n\t\t//\t\tare `top` and `left`, which indicate the new position to slide to.\n\t\t//\n\t\t// example:\n\t\t//\t|\t.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()\n\n\t\tvar node = args.node = dom.byId(args.node),\n\t\t\ttop = null, left = null;\n\n\t\tvar init = (function(n){\n\t\t\treturn function(){\n\t\t\t\tvar cs = domStyle.getComputedStyle(n);\n\t\t\t\tvar pos = cs.position;\n\t\t\t\ttop = (pos == 'absolute' ? n.offsetTop : parseInt(cs.top) || 0);\n\t\t\t\tleft = (pos == 'absolute' ? n.offsetLeft : parseInt(cs.left) || 0);\n\t\t\t\tif(pos != 'absolute' && pos != 'relative'){\n\t\t\t\t\tvar ret = geom.position(n, true);\n\t\t\t\t\ttop = ret.y;\n\t\t\t\t\tleft = ret.x;\n\t\t\t\t\tn.style.position=\"absolute\";\n\t\t\t\t\tn.style.top=top+\"px\";\n\t\t\t\t\tn.style.left=left+\"px\";\n\t\t\t\t}\n\t\t\t};\n\t\t})(node);\n\t\tinit();\n\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\n\t\t\tproperties: {\n\t\t\t\ttop: args.top || 0,\n\t\t\t\tleft: args.left || 0\n\t\t\t}\n\t\t}, args));\n\t\taspect.after(anim, \"beforeBegin\", init, true);\n\n\t\treturn anim; // dojo/_base/fx.Animation\n\t};\n\n\treturn coreFx;\n});\n","define([\"../_base/lang\"], function(lang){\n\n// module:\n//\t\tdojo/fx/easing\n\nvar easingFuncs = {\n\t// summary:\n\t//\t\tCollection of easing functions to use beyond the default\n\t//\t\t`dojo._defaultEasing` function.\n\t// description:\n\t//\t\tEasing functions are used to manipulate the iteration through\n\t//\t\tan `dojo.Animation`s _Line. _Line being the properties of an Animation,\n\t//\t\tand the easing function progresses through that Line determining\n\t//\t\thow quickly (or slowly) it should go. Or more accurately: modify\n\t//\t\tthe value of the _Line based on the percentage of animation completed.\n\t//\n\t//\t\tAll functions follow a simple naming convention of \"ease type\" + \"when\".\n\t//\t\tIf the name of the function ends in Out, the easing described appears\n\t//\t\ttowards the end of the animation. \"In\" means during the beginning,\n\t//\t\tand InOut means both ranges of the Animation will applied, both\n\t//\t\tbeginning and end.\n\t//\n\t//\t\tOne does not call the easing function directly, it must be passed to\n\t//\t\tthe `easing` property of an animation.\n\t// example:\n\t//\t|\tdojo.require(\"dojo.fx.easing\");\n\t//\t|\tvar anim = dojo.fadeOut({\n\t//\t|\t\tnode: 'node',\n\t//\t|\t\tduration: 2000,\n\t//\t|\t\t//\tnote there is no ()\n\t//\t|\t\teasing: dojo.fx.easing.quadIn\n\t//\t|\t}).play();\n\t//\n\n\tlinear: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tA linear easing function\n\t\treturn n;\n\t},\n\n\tquadIn: function(/* Decimal? */n){\n\t\treturn Math.pow(n, 2);\n\t},\n\n\tquadOut: function(/* Decimal? */n){\n\t\treturn n * (n - 2) * -1;\n\t},\n\n\tquadInOut: function(/* Decimal? */n){\n\t\tn = n * 2;\n\t\tif(n < 1){ return Math.pow(n, 2) / 2; }\n\t\treturn -1 * ((--n) * (n - 2) - 1) / 2;\n\t},\n\n\tcubicIn: function(/* Decimal? */n){\n\t\treturn Math.pow(n, 3);\n\t},\n\n\tcubicOut: function(/* Decimal? */n){\n\t\treturn Math.pow(n - 1, 3) + 1;\n\t},\n\n\tcubicInOut: function(/* Decimal? */n){\n\t\tn = n * 2;\n\t\tif(n < 1){ return Math.pow(n, 3) / 2; }\n\t\tn -= 2;\n\t\treturn (Math.pow(n, 3) + 2) / 2;\n\t},\n\n\tquartIn: function(/* Decimal? */n){\n\t\treturn Math.pow(n, 4);\n\t},\n\n\tquartOut: function(/* Decimal? */n){\n\t\treturn -1 * (Math.pow(n - 1, 4) - 1);\n\t},\n\n\tquartInOut: function(/* Decimal? */n){\n\t\tn = n * 2;\n\t\tif(n < 1){ return Math.pow(n, 4) / 2; }\n\t\tn -= 2;\n\t\treturn -1 / 2 * (Math.pow(n, 4) - 2);\n\t},\n\n\tquintIn: function(/* Decimal? */n){\n\t\treturn Math.pow(n, 5);\n\t},\n\n\tquintOut: function(/* Decimal? */n){\n\t\treturn Math.pow(n - 1, 5) + 1;\n\t},\n\n\tquintInOut: function(/* Decimal? */n){\n\t\tn = n * 2;\n\t\tif(n < 1){ return Math.pow(n, 5) / 2; }\n\t\tn -= 2;\n\t\treturn (Math.pow(n, 5) + 2) / 2;\n\t},\n\n\tsineIn: function(/* Decimal? */n){\n\t\treturn -1 * Math.cos(n * (Math.PI / 2)) + 1;\n\t},\n\n\tsineOut: function(/* Decimal? */n){\n\t\treturn Math.sin(n * (Math.PI / 2));\n\t},\n\n\tsineInOut: function(/* Decimal? */n){\n\t\treturn -1 * (Math.cos(Math.PI * n) - 1) / 2;\n\t},\n\n\texpoIn: function(/* Decimal? */n){\n\t\treturn (n == 0) ? 0 : Math.pow(2, 10 * (n - 1));\n\t},\n\n\texpoOut: function(/* Decimal? */n){\n\t\treturn (n == 1) ? 1 : (-1 * Math.pow(2, -10 * n) + 1);\n\t},\n\n\texpoInOut: function(/* Decimal? */n){\n\t\tif(n == 0){ return 0; }\n\t\tif(n == 1){ return 1; }\n\t\tn = n * 2;\n\t\tif(n < 1){ return Math.pow(2, 10 * (n - 1)) / 2; }\n\t\t--n;\n\t\treturn (-1 * Math.pow(2, -10 * n) + 2) / 2;\n\t},\n\n\tcircIn: function(/* Decimal? */n){\n\t\treturn -1 * (Math.sqrt(1 - Math.pow(n, 2)) - 1);\n\t},\n\n\tcircOut: function(/* Decimal? */n){\n\t\tn = n - 1;\n\t\treturn Math.sqrt(1 - Math.pow(n, 2));\n\t},\n\n\tcircInOut: function(/* Decimal? */n){\n\t\tn = n * 2;\n\t\tif(n < 1){ return -1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) - 1); }\n\t\tn -= 2;\n\t\treturn 1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) + 1);\n\t},\n\n\tbackIn: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that starts away from the target,\n\t\t//\t\tand quickly accelerates towards the end value.\n\t\t//\n\t\t//\t\tUse caution when the easing will cause values to become\n\t\t//\t\tnegative as some properties cannot be set to negative values.\n\t\tvar s = 1.70158;\n\t\treturn Math.pow(n, 2) * ((s + 1) * n - s);\n\t},\n\n\tbackOut: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\n\t\t// description:\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\n\t\t//\n\t\t//\t\tUse caution when the easing will cause values to become negative as some\n\t\t//\t\tproperties cannot be set to negative values.\n\n\t\tn = n - 1;\n\t\tvar s = 1.70158;\n\t\treturn Math.pow(n, 2) * ((s + 1) * n + s) + 1;\n\t},\n\n\tbackInOut: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`\n\t\t// description:\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`.\n\t\t//\t\tUse caution when the easing will cause values to become negative\n\t\t//\t\tas some properties cannot be set to negative values.\n\t\tvar s = 1.70158 * 1.525;\n\t\tn = n * 2;\n\t\tif(n < 1){ return (Math.pow(n, 2) * ((s + 1) * n - s)) / 2; }\n\t\tn-=2;\n\t\treturn (Math.pow(n, 2) * ((s + 1) * n + s) + 2) / 2;\n\t},\n\n\telasticIn: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function the elastically snaps from the start value\n\t\t// description:\n\t\t//\t\tAn easing function the elastically snaps from the start value\n\t\t//\n\t\t//\t\tUse caution when the elasticity will cause values to become negative\n\t\t//\t\tas some properties cannot be set to negative values.\n\t\tif(n == 0 || n == 1){ return n; }\n\t\tvar p = .3;\n\t\tvar s = p / 4;\n\t\tn = n - 1;\n\t\treturn -1 * Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p);\n\t},\n\n\telasticOut: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\n\t\t//\t\tnear the end of the Animation\n\t\t// description:\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\n\t\t//\t\tnear the end of the Animation\n\t\t//\n\t\t//\t\tUse caution when the elasticity will cause values to become\n\t\t//\t\tnegative as some properties cannot be set to negative values.\n\t\tif(n==0 || n == 1){ return n; }\n\t\tvar p = .3;\n\t\tvar s = p / 4;\n\t\treturn Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\telasticInOut: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\n\t\t//\t\tthe beginning and end of the Animation.\n\t\t// description:\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\n\t\t//\t\tthe beginning and end of the Animation.\n\t\t//\n\t\t//\t\tUse caution when the elasticity will cause values to become\n\t\t//\t\tnegative as some properties cannot be set to negative values.\n\t\tif(n == 0) return 0;\n\t\tn = n * 2;\n\t\tif(n == 2) return 1;\n\t\tvar p = .3 * 1.5;\n\t\tvar s = p / 4;\n\t\tif(n < 1){\n\t\t\tn -= 1;\n\t\t\treturn -.5 * (Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p));\n\t\t}\n\t\tn -= 1;\n\t\treturn .5 * (Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p)) + 1;\n\t},\n\n\tbounceIn: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that 'bounces' near the beginning of an Animation\n\t\treturn (1 - easingFuncs.bounceOut(1 - n)); // Decimal\n\t},\n\n\tbounceOut: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that 'bounces' near the end of an Animation\n\t\tvar s = 7.5625;\n\t\tvar p = 2.75;\n\t\tvar l;\n\t\tif(n < (1 / p)){\n\t\t\tl = s * Math.pow(n, 2);\n\t\t}else if(n < (2 / p)){\n\t\t\tn -= (1.5 / p);\n\t\t\tl = s * Math.pow(n, 2) + .75;\n\t\t}else if(n < (2.5 / p)){\n\t\t\tn -= (2.25 / p);\n\t\t\tl = s * Math.pow(n, 2) + .9375;\n\t\t}else{\n\t\t\tn -= (2.625 / p);\n\t\t\tl = s * Math.pow(n, 2) + .984375;\n\t\t}\n\t\treturn l;\n\t},\n\n\tbounceInOut: function(/* Decimal? */n){\n\t\t// summary:\n\t\t//\t\tAn easing function that 'bounces' at the beginning and end of the Animation\n\t\tif(n < 0.5){ return easingFuncs.bounceIn(n * 2) / 2; }\n\t\treturn (easingFuncs.bounceOut(n * 2 - 1) / 2) + 0.5; // Decimal\n\t}\n};\n\nlang.setObject(\"dojo.fx.easing\", easingFuncs);\n\nreturn easingFuncs;\n});\n","define([\"dojo/_base/lang\"], function(lang){\n\treturn lang.getObject(\"dojox.charting.themes\", true);\n});\n"],"sourceRoot":""}