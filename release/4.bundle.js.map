{"version":3,"sources":["webpack:///./node_modules/dijit/ColorPalette.js","webpack:///./node_modules/dijit/templates/ColorPalette.html","webpack:///./node_modules/dijit/_PaletteMixin.js","webpack:///./node_modules/dijit/typematic.js","webpack:///./node_modules/dojo/nls/colors.js?daa1","webpack:///./node_modules/dojo/nls/colors.js","webpack:///./node_modules/dojo/colors.js"],"names":["__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","dj","c","module","i","undefined","require","template","_Widget","_TemplatedMixin","_PaletteMixin","has","i18n","Color","declare","domConstruct","string","ColorPalette","palette","_palettes","7x10","3x4","templateString","baseClass","_dyeFactory","value","row","col","title","this","_dyeClass","buildRendering","inherited","arguments","_Color","_preparePalette","getLocalization","lang","hcTemplate","_imagePaths","toUrl","constructor","alias","_title","_row","_col","setColor","named","getValue","toHex","fillCell","cell","blankGif","html","substitute","color","alt","image","toString","left","top","size","place","apply","exports","domAttr","domClass","keys","on","_CssStateMixin","a11yclick","focus","typematic","defaultTimeout","timeoutChangeRate","_selectedCell","tabIndex","cellClass","dyeClass","getObject","choices","titles","_cells","url","_blankGif","own","gridNode","hitch","length","rowNode","create","role","cellObject","cellNode","class","idx","push","node","dye","_xDim","_yDim","keyIncrementMap","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","isLeftToRight","LEFT_ARROW","key","addKeyListener","domNode","keyCode","ctrlKey","altKey","shiftKey","increment","count","_navigateByKey","postCreate","_setCurrent","_currentFocus","_onCellClick","evt","target","tagName","parentNode","_getDye","_setValueAttr","stopPropagation","preventDefault","set","priorityChange","remove","add","_set","onChange","typeCount","newFocusIndex","focusNode","defer","array","connect","dijit","_fireEventAndReload","_timer","_callback","_count","_node","_evt","_currentTimeout","Math","max","_initialDelay","_subsequentDelay","round","_minDelay","setTimeout","trigger","_this","callback","obj","subsequentDelay","initialDelay","minDelay","_obj","attr","stop","faux","v","clearTimeout","keyObject","type","_keypress","handles","metaKey","forEach","h","addMouseListener","addListener","mouseNode","keyNode","req","root","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","bs","mk","sr","zh","zh-tw","uk","tr","th","sv","sl","sk","ru","ro","pt","pt-pt","pl","nl","nb","ko","kk","ja","it","id","hu","hr","he","fr","fi","eu","es","el","de","da","cs","ca","bg","az","ar","dojo","ArrayUtil","ColorExt","setObject","hue2rgb","m1","m2","h6","colorFromRgb","fromRgb","m","toLowerCase","match","a","split","l","t","r","charAt","map","x","parseFloat","fromArray","H","S","L","confine","low","high","Number","isNaN","prototype","sanitize","g","b","makeGrey","mixin"],"mappings":"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","file":"4.bundle.js","sourcesContent":["define([\n\t\"require\", // require.toUrl\n\t\"dojo/text!./templates/ColorPalette.html\",\n\t\"./_Widget\", // used also to load dijit/hccss for setting has(\"highcontrast\")\n\t\"./_TemplatedMixin\",\n\t\"./_PaletteMixin\",\n\t\"./hccss\", // has(\"highcontrast\")\n\t\"dojo/i18n\", // i18n.getLocalization\n\t\"dojo/_base/Color\", // dojo.Color dojo.Color.named\n\t\"dojo/_base/declare\", // declare\n\t\"dojo/dom-construct\", // domConstruct.place\n\t\"dojo/string\", // string.substitute\n\t\"dojo/i18n!dojo/nls/colors\", // translations\n\t\"dojo/colors\"    // extend dojo.Color w/names of other colors\n], function(require, template, _Widget, _TemplatedMixin, _PaletteMixin, has, i18n, Color,\n\tdeclare, domConstruct, string){\n\n\t// module:\n\t//\t\tdijit/ColorPalette\n\n\tvar ColorPalette = declare(\"dijit.ColorPalette\", [_Widget, _TemplatedMixin, _PaletteMixin], {\n\t\t// summary:\n\t\t//\t\tA keyboard accessible color-picking widget\n\t\t// description:\n\t\t//\t\tGrid showing various colors, so the user can pick a certain color.\n\t\t//\t\tCan be used standalone, or as a popup.\n\t\t//\n\t\t// example:\n\t\t// |\t<div data-dojo-type=\"dijit/ColorPalette\"></div>\n\t\t//\n\t\t// example:\n\t\t// |\tvar picker = new dijit.ColorPalette({ },srcNode);\n\t\t// |\tpicker.startup();\n\n\n\t\t// palette: [const] String\n\t\t//\t\tSize of grid, either \"7x10\" or \"3x4\".\n\t\tpalette: \"7x10\",\n\n\t\t// _palettes: [protected] Map\n\t\t//\t\tThis represents the value of the colors.\n\t\t//\t\tThe first level is a hashmap of the different palettes available.\n\t\t//\t\tThe next two dimensions represent the columns and rows of colors.\n\t\t_palettes: {\n\t\t\t\"7x10\": [\n\t\t\t\t[\"white\", \"seashell\", \"cornsilk\", \"lemonchiffon\", \"lightyellow\", \"palegreen\", \"paleturquoise\", \"lightcyan\", \"lavender\", \"plum\"],\n\t\t\t\t[\"lightgray\", \"pink\", \"bisque\", \"moccasin\", \"khaki\", \"lightgreen\", \"lightseagreen\", \"lightskyblue\", \"cornflowerblue\", \"violet\"],\n\t\t\t\t[\"silver\", \"lightcoral\", \"sandybrown\", \"orange\", \"palegoldenrod\", \"chartreuse\", \"mediumturquoise\", \"skyblue\", \"mediumslateblue\", \"orchid\"],\n\t\t\t\t[\"gray\", \"red\", \"orangered\", \"darkorange\", \"yellow\", \"limegreen\", \"darkseagreen\", \"royalblue\", \"slateblue\", \"mediumorchid\"],\n\t\t\t\t[\"dimgray\", \"crimson\", \"chocolate\", \"coral\", \"gold\", \"forestgreen\", \"seagreen\", \"blue\", \"blueviolet\", \"darkorchid\"],\n\t\t\t\t[\"darkslategray\", \"firebrick\", \"saddlebrown\", \"sienna\", \"olive\", \"green\", \"darkcyan\", \"mediumblue\", \"darkslateblue\", \"darkmagenta\" ],\n\t\t\t\t[\"black\", \"darkred\", \"maroon\", \"brown\", \"darkolivegreen\", \"darkgreen\", \"midnightblue\", \"navy\", \"indigo\", \"purple\"]\n\t\t\t],\n\n\t\t\t\"3x4\": [\n\t\t\t\t[\"white\", \"lime\", \"green\", \"blue\"],\n\t\t\t\t[\"silver\", \"yellow\", \"fuchsia\", \"navy\"],\n\t\t\t\t[\"gray\", \"red\", \"purple\", \"black\"]\n\t\t\t]\n\t\t},\n\n\t\t// templateString: String\n\t\t//\t\tThe template of this widget.\n\t\ttemplateString: template,\n\n\t\tbaseClass: \"dijitColorPalette\",\n\n\t\t_dyeFactory: function(value, row, col, title){\n\t\t\t// Overrides _PaletteMixin._dyeFactory().\n\t\t\treturn new this._dyeClass(value, row, col, title);\n\t\t},\n\n\t\tbuildRendering: function(){\n\t\t\t// Instantiate the template, which makes a skeleton into which we'll insert a bunch of\n\t\t\t// <img> nodes\n\t\t\tthis.inherited(arguments);\n\n\t\t\t//\tCreates customized constructor for dye class (color of a single cell) for\n\t\t\t//\tspecified palette and high-contrast vs. normal mode.   Used in _getDye().\n\t\t\tthis._dyeClass = declare(ColorPalette._Color, {\n\t\t\t\tpalette: this.palette\n\t\t\t});\n\n\t\t\t// Creates <img> nodes in each cell of the template.\n\t\t\tthis._preparePalette(\n\t\t\t\tthis._palettes[this.palette],\n\t\t\t\ti18n.getLocalization(\"dojo\", \"colors\", this.lang));\n\t\t}\n\t});\n\n\tColorPalette._Color = declare(\"dijit._Color\", Color, {\n\t\t// summary:\n\t\t//\t\tObject associated with each cell in a ColorPalette palette.\n\t\t//\t\tImplements dijit/Dye.\n\n\t\t// Template for each cell in normal (non-high-contrast mode).  Each cell contains a wrapper\n\t\t// node for showing the border (called dijitPaletteImg for back-compat), and dijitColorPaletteSwatch\n\t\t// for showing the color.\n\t\ttemplate: \"<span class='dijitInline dijitPaletteImg'>\" +\n\t\t\t\"<img src='${blankGif}' alt='${alt}' title='${title}' class='dijitColorPaletteSwatch' style='background-color: ${color}'/>\" +\n\t\t\t\"</span>\",\n\n\t\t// Template for each cell in high contrast mode.  Each cell contains an image with the whole palette,\n\t\t// but scrolled and clipped to show the correct color only\n\t\thcTemplate: \"<span class='dijitInline dijitPaletteImg' style='position: relative; overflow: hidden; height: 12px; width: 14px;'>\" +\n\t\t\t\"<img src='${image}' alt='${alt}' title='${title}' style='position: absolute; left: ${left}px; top: ${top}px; ${size}'/>\" +\n\t\t\t\"</span>\",\n\n\t\t// _imagePaths: [protected] Map\n\t\t//\t\tThis is stores the path to the palette images used for high-contrast mode display\n\t\t_imagePaths: {\n\t\t\t\"7x10\": require.toUrl(\"./themes/a11y/colors7x10.png\"),\n\t\t\t\"3x4\": require.toUrl(\"./themes/a11y/colors3x4.png\")\n\t\t},\n\n\t\tconstructor: function(alias, row, col, title){\n\t\t\t// summary:\n\t\t\t//\t\tConstructor for ColorPalette._Color\n\t\t\t// alias: String\n\t\t\t//\t\tEnglish name of the color.\n\t\t\t// row: Number\n\t\t\t//\t\tVertical position in grid.\n\t\t\t// column: Number\n\t\t\t//\t\tHorizontal position in grid.\n\t\t\t// title: String\n\t\t\t//\t\tLocalized name of the color.\n\t\t\tthis._title = title;\n\t\t\tthis._row = row;\n\t\t\tthis._col = col;\n\t\t\tthis.setColor(Color.named[alias]);\n\t\t},\n\n\t\tgetValue: function(){\n\t\t\t// summary:\n\t\t\t//\t\tNote that although dijit._Color is initialized with a value like \"white\" getValue() always\n\t\t\t//\t\treturns a hex value\n\t\t\treturn this.toHex();\n\t\t},\n\n\t\tfillCell: function(/*DOMNode*/ cell, /*String*/ blankGif){\n\t\t\tvar html = string.substitute(has(\"highcontrast\") ? this.hcTemplate : this.template, {\n\t\t\t\t// substitution variables for normal mode\n\t\t\t\tcolor: this.toHex(),\n\t\t\t\tblankGif: blankGif,\n\t\t\t\talt: this._title,\n\t\t\t\ttitle: this._title,\n\n\t\t\t\t// variables used for high contrast mode\n\t\t\t\timage: this._imagePaths[this.palette].toString(),\n\t\t\t\tleft: this._col * -20 - 5,\n\t\t\t\ttop: this._row * -20 - 5,\n\t\t\t\tsize: this.palette == \"7x10\" ? \"height: 145px; width: 206px\" : \"height: 64px; width: 86px\"\n\t\t\t});\n\n\t\t\tdomConstruct.place(html, cell);\n\t\t}\n\t});\n\n\treturn ColorPalette;\n});\n","module.exports = \"<div class=\\\"dijitInline dijitColorPalette\\\" role=\\\"grid\\\">\\n\\t<table data-dojo-attach-point=\\\"paletteTableNode\\\" class=\\\"dijitPaletteTable\\\" cellSpacing=\\\"0\\\" cellPadding=\\\"0\\\" role=\\\"presentation\\\">\\n\\t\\t<tbody data-dojo-attach-point=\\\"gridNode\\\"></tbody>\\n\\t</table>\\n</div>\\n\"","define([\n\t\"dojo/_base/declare\", // declare\n\t\"dojo/dom-attr\", // domAttr.set\n\t\"dojo/dom-class\", // domClass.add domClass.remove\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.place\n\t\"dojo/keys\", // keys\n\t\"dojo/_base/lang\", // lang.getObject\n\t\"dojo/on\",\n\t\"./_CssStateMixin\",\n\t\"./a11yclick\",\n\t\"./focus\",\n\t\"./typematic\"\n], function(declare, domAttr, domClass, domConstruct, keys, lang, on, _CssStateMixin, a11yclick, focus, typematic){\n\n\t// module:\n\t//\t\tdijit/_PaletteMixin\n\n\tvar PaletteMixin = declare(\"dijit._PaletteMixin\", _CssStateMixin, {\n\t\t// summary:\n\t\t//\t\tA keyboard accessible palette, for picking a color/emoticon/etc.\n\t\t// description:\n\t\t//\t\tA mixin for a grid showing various entities, so the user can pick a certain entity.\n\n\t\t// defaultTimeout: Number\n\t\t//\t\tNumber of milliseconds before a held key or button becomes typematic\n\t\tdefaultTimeout: 500,\n\n\t\t// timeoutChangeRate: Number\n\t\t//\t\tFraction of time used to change the typematic timer between events\n\t\t//\t\t1.0 means that each typematic event fires at defaultTimeout intervals\n\t\t//\t\tLess than 1.0 means that each typematic event fires at an increasing faster rate\n\t\ttimeoutChangeRate: 0.90,\n\n\t\t// value: String\n\t\t//\t\tCurrently selected color/emoticon/etc.\n\t\tvalue: \"\",\n\n\t\t// _selectedCell: [private] Integer\n\t\t//\t\tIndex of the currently selected cell. Initially, none selected\n\t\t_selectedCell: -1,\n\n\t\t/*=====\n\t\t // _currentFocus: [private] DomNode\n\t\t //\t\tThe currently focused cell (if the palette itself has focus), or otherwise\n\t\t //\t\tthe cell to be focused when the palette itself gets focus.\n\t\t //\t\tDifferent from value, which represents the selected (i.e. clicked) cell.\n\t\t _currentFocus: null,\n\t\t =====*/\n\n\t\t/*=====\n\t\t // _xDim: [protected] Integer\n\t\t //\t\tThis is the number of cells horizontally across.\n\t\t _xDim: null,\n\t\t =====*/\n\n\t\t/*=====\n\t\t // _yDim: [protected] Integer\n\t\t //\t\tThis is the number of cells vertically down.\n\t\t _yDim: null,\n\t\t =====*/\n\n\t\t// tabIndex: String\n\t\t//\t\tWidget tab index.\n\t\ttabIndex: \"0\",\n\n\t\t// cellClass: [protected] String\n\t\t//\t\tCSS class applied to each cell in the palette\n\t\tcellClass: \"dijitPaletteCell\",\n\n\t\t// dyeClass: [protected] Constructor\n\t\t//\t\tConstructor for Object created for each cell of the palette.\n\t\t//\t\tdyeClass should implement the dijit/_PaletteMixin.__Dye interface.\n\t\tdyeClass: null,\n\n\t\t_dyeFactory: function(value /*===== , row, col, title =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tReturn instance of dijit.Dye for specified cell of palette\n\t\t\t// tags:\n\t\t\t//\t\textension\n\n\t\t\t// Remove string support for 2.0\n\t\t\tvar dyeClassObj = typeof this.dyeClass == \"string\" ? lang.getObject(this.dyeClass) : this.dyeClass;\n\t\t\treturn new dyeClassObj(value);\n\t\t},\n\n\t\t_preparePalette: function(choices, titles){\n\t\t\t// summary:\n\t\t\t//\t\tSubclass must call _preparePalette() from postCreate(), passing in the tooltip\n\t\t\t//\t\tfor each cell\n\t\t\t// choices: String[][]\n\t\t\t//\t\tid's for each cell of the palette, used to create Dye JS object for each cell\n\t\t\t// titles: String[]\n\t\t\t//\t\tLocalized tooltip for each cell\n\n\t\t\tthis._cells = [];\n\t\t\tvar url = this._blankGif;\n\n\t\t\tthis.own(on(this.gridNode, a11yclick, lang.hitch(this, \"_onCellClick\")));\n\n\t\t\tfor(var row = 0; row < choices.length; row++){\n\t\t\t\tvar rowNode = domConstruct.create(\"tr\", {tabIndex: \"-1\", role: \"row\"}, this.gridNode);\n\t\t\t\tfor(var col = 0; col < choices[row].length; col++){\n\t\t\t\t\tvar value = choices[row][col];\n\t\t\t\t\tif(value){\n\t\t\t\t\t\tvar cellObject = this._dyeFactory(value, row, col, titles[value]);\n\n\t\t\t\t\t\tvar cellNode = domConstruct.create(\"td\", {\n\t\t\t\t\t\t\t\"class\": this.cellClass,\n\t\t\t\t\t\t\ttabIndex: \"-1\",\n\t\t\t\t\t\t\ttitle: titles[value],\n\t\t\t\t\t\t\trole: \"gridcell\"\n\t\t\t\t\t\t}, rowNode);\n\n\t\t\t\t\t\t// prepare cell inner structure\n\t\t\t\t\t\tcellObject.fillCell(cellNode, url);\n\n\t\t\t\t\t\tcellNode.idx = this._cells.length;\n\n\t\t\t\t\t\t// save cell info into _cells\n\t\t\t\t\t\tthis._cells.push({node: cellNode, dye: cellObject});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._xDim = choices[0].length;\n\t\t\tthis._yDim = choices.length;\n\n\t\t\t// Now set all events\n\t\t\t// The palette itself is navigated to with the tab key on the keyboard\n\t\t\t// Keyboard navigation within the Palette is with the arrow keys\n\t\t\t// Spacebar selects the cell.\n\t\t\t// For the up key the index is changed by negative the x dimension.\n\n\t\t\tvar keyIncrementMap = {\n\t\t\t\tUP_ARROW: -this._xDim,\n\t\t\t\t// The down key the index is increase by the x dimension.\n\t\t\t\tDOWN_ARROW: this._xDim,\n\t\t\t\t// Right and left move the index by 1.\n\t\t\t\tRIGHT_ARROW: this.isLeftToRight() ? 1 : -1,\n\t\t\t\tLEFT_ARROW: this.isLeftToRight() ? -1 : 1\n\t\t\t};\n\t\t\tfor(var key in keyIncrementMap){\n\t\t\t\tthis.own(\n\t\t\t\t\ttypematic.addKeyListener(\n\t\t\t\t\t\tthis.domNode,\n\t\t\t\t\t\t{keyCode: keys[key], ctrlKey: false, altKey: false, shiftKey: false},\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\tvar increment = keyIncrementMap[key];\n\t\t\t\t\t\t\treturn function(count){\n\t\t\t\t\t\t\t\tthis._navigateByKey(increment, count);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\tthis.timeoutChangeRate,\n\t\t\t\t\t\tthis.defaultTimeout\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\n\t\tpostCreate: function(){\n\t\t\tthis.inherited(arguments);\n\n\t\t\t// Set initial navigable node.\n\t\t\tthis._setCurrent(this._cells[0].node);\n\t\t},\n\n\t\tfocus: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFocus this widget.  Puts focus on the most recently focused cell.\n\n\t\t\t// The cell already has tabIndex set, just need to set CSS and focus it\n\t\t\tfocus.focus(this._currentFocus);\n\t\t},\n\n\t\t_onCellClick: function(/*Event*/ evt){\n\t\t\t// summary:\n\t\t\t//\t\tHandler for click, enter key & space key. Selects the cell.\n\t\t\t// evt:\n\t\t\t//\t\tThe event.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\tvar target = evt.target;\n\n\t\t\t// Find TD associated with click event.   For ColorPalette user likely clicked IMG inside of TD\n\t\t\twhile(target.tagName != \"TD\"){\n\t\t\t\tif(!target.parentNode || target == this.gridNode){    // probably can never happen, but just in case\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\n\t\t\tvar value = this._getDye(target).getValue();\n\n\t\t\t// First focus the clicked cell, and then send onChange() notification.\n\t\t\t// onChange() (via _setValueAttr) must be after the focus call, because\n\t\t\t// it may trigger a refocus to somewhere else (like the Editor content area), and that\n\t\t\t// second focus should win.\n\t\t\tthis._setCurrent(target);\n\t\t\tfocus.focus(target);\n\t\t\tthis._setValueAttr(value, true);\n\n\t\t\tevt.stopPropagation();\n\t\t\tevt.preventDefault();\n\t\t},\n\n\t\t_setCurrent: function(/*DomNode*/ node){\n\t\t\t// summary:\n\t\t\t//\t\tSets which node is the focused cell.\n\t\t\t// description:\n\t\t\t//\t\tAt any point in time there's exactly one\n\t\t\t//\t\tcell with tabIndex != -1.   If focus is inside the palette then\n\t\t\t//\t\tfocus is on that cell.\n\t\t\t//\n\t\t\t//\t\tAfter calling this method, arrow key handlers and mouse click handlers\n\t\t\t//\t\tshould focus the cell in a setTimeout().\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\tif(\"_currentFocus\" in this){\n\t\t\t\t// Remove tabIndex on old cell\n\t\t\t\tdomAttr.set(this._currentFocus, \"tabIndex\", \"-1\");\n\t\t\t}\n\n\t\t\t// Set tabIndex of new cell\n\t\t\tthis._currentFocus = node;\n\t\t\tif(node){\n\t\t\t\tdomAttr.set(node, \"tabIndex\", this.tabIndex);\n\t\t\t}\n\t\t},\n\n\t\t_setValueAttr: function(value, priorityChange){\n\t\t\t// summary:\n\t\t\t//\t\tThis selects a cell. It triggers the onChange event.\n\t\t\t// value: String\n\t\t\t//\t\tValue of the cell to select\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\t// priorityChange: Boolean?\n\t\t\t//\t\tOptional parameter used to tell the select whether or not to fire\n\t\t\t//\t\tonChange event.\n\n\t\t\t// clear old selected cell\n\t\t\tif(this._selectedCell >= 0){\n\t\t\t\tdomClass.remove(this._cells[this._selectedCell].node, this.cellClass + \"Selected\");\n\t\t\t}\n\t\t\tthis._selectedCell = -1;\n\n\t\t\t// search for cell matching specified value\n\t\t\tif(value){\n\t\t\t\tfor(var i = 0; i < this._cells.length; i++){\n\t\t\t\t\tif(value == this._cells[i].dye.getValue()){\n\t\t\t\t\t\tthis._selectedCell = i;\n\t\t\t\t\t\tdomClass.add(this._cells[i].node, this.cellClass + \"Selected\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// record new value, or null if no matching cell\n\t\t\tthis._set(\"value\", this._selectedCell >= 0 ? value : null);\n\n\t\t\tif(priorityChange || priorityChange === undefined){\n\t\t\t\tthis.onChange(value);\n\t\t\t}\n\t\t},\n\n\t\tonChange: function(/*===== value =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tCallback when a cell is selected.\n\t\t\t// value: String\n\t\t\t//\t\tValue corresponding to cell.\n\t\t},\n\n\t\t_navigateByKey: function(increment, typeCount){\n\t\t\t// summary:\n\t\t\t//\t\tThis is the callback for typematic.\n\t\t\t//\t\tIt changes the focus and the highlighed cell.\n\t\t\t// increment:\n\t\t\t//\t\tHow much the key is navigated.\n\t\t\t// typeCount:\n\t\t\t//\t\tHow many times typematic has fired.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\t// typecount == -1 means the key is released.\n\t\t\tif(typeCount == -1){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newFocusIndex = this._currentFocus.idx + increment;\n\t\t\tif(newFocusIndex < this._cells.length && newFocusIndex > -1){\n\t\t\t\tvar focusNode = this._cells[newFocusIndex].node;\n\t\t\t\tthis._setCurrent(focusNode);\n\n\t\t\t\t// Actually focus the node, for the benefit of screen readers.\n\t\t\t\t// Use defer because IE doesn't like changing focus inside of an event handler\n\t\t\t\tthis.defer(lang.hitch(focus, \"focus\", focusNode));\n\t\t\t}\n\t\t},\n\n\t\t_getDye: function(/*DomNode*/ cell){\n\t\t\t// summary:\n\t\t\t//\t\tGet JS object for given cell DOMNode\n\n\t\t\treturn this._cells[cell.idx].dye;\n\t\t}\n\t});\n\n\t/*=====\n\t PaletteMixin.__Dye = declare(\"dijit.Dye\", null, {\n\t\t // summary:\n\t\t //\t\tInterface for the JS Object associated with a palette cell (i.e. DOMNode)\n\n\t\t constructor: function(alias, row, col){\n\t\t\t // summary:\n\t\t\t //\t\tInitialize according to value or alias like \"white\"\n\t\t\t // alias: String\n\t\t },\n\n\t\t getValue: function(){\n\t\t\t // summary:\n\t\t\t //\t\tReturn \"value\" of cell; meaning of \"value\" varies by subclass.\n\t\t\t // description:\n\t\t\t //\t\tFor example color hex value, emoticon ascii value etc, entity hex value.\n\t\t },\n\n\t\t fillCell: function(cell, blankGif){\n\t\t\t // summary:\n\t\t\t //\t\tAdd cell DOMNode inner structure\n\t\t\t // cell: DomNode\n\t\t\t //\t\tThe surrounding cell\n\t\t\t // blankGif: String\n\t\t\t //\t\tURL for blank cell image\n\t\t }\n\t });\n\t =====*/\n\n\treturn PaletteMixin;\n});\n","define([\n\t\"dojo/_base/array\", // array.forEach\n\t\"dojo/_base/connect\", // connect._keyPress\n\t\"dojo/_base/lang\", // lang.mixin, lang.hitch\n\t\"dojo/on\",\n\t\"dojo/sniff\", // has(\"ie\")\n\t\"./main\"        // setting dijit.typematic global\n], function(array, connect, lang, on, has, dijit){\n\n\t// module:\n\t//\t\tdijit/typematic\n\n\tvar typematic = (dijit.typematic = {\n\t\t// summary:\n\t\t//\t\tThese functions are used to repetitively call a user specified callback\n\t\t//\t\tmethod when a specific key or mouse click over a specific DOM node is\n\t\t//\t\theld down for a specific amount of time.\n\t\t//\t\tOnly 1 such event is allowed to occur on the browser page at 1 time.\n\n\t\t_fireEventAndReload: function(){\n\t\t\tthis._timer = null;\n\t\t\tthis._callback(++this._count, this._node, this._evt);\n\n\t\t\t// Schedule next event, timer is at most minDelay (default 10ms) to avoid\n\t\t\t// browser overload (particularly avoiding starving DOH robot so it never gets to send a mouseup)\n\t\t\tthis._currentTimeout = Math.max(\n\t\t\t\tthis._currentTimeout < 0 ? this._initialDelay :\n\t\t\t\t\t(this._subsequentDelay > 1 ? this._subsequentDelay : Math.round(this._currentTimeout * this._subsequentDelay)),\n\t\t\t\tthis._minDelay);\n\t\t\tthis._timer = setTimeout(lang.hitch(this, \"_fireEventAndReload\"), this._currentTimeout);\n\t\t},\n\n\t\ttrigger: function(/*Event*/ evt, /*Object*/ _this, /*DOMNode*/ node, /*Function*/ callback, /*Object*/ obj, /*Number?*/ subsequentDelay, /*Number?*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart a timed, repeating callback sequence.\n\t\t\t//\t\tIf already started, the function call is ignored.\n\t\t\t//\t\tThis method is not normally called by the user but can be\n\t\t\t//\t\twhen the normal listener code is insufficient.\n\t\t\t// evt:\n\t\t\t//\t\tkey or mouse event object to pass to the user callback\n\t\t\t// _this:\n\t\t\t//\t\tpointer to the user's widget space.\n\t\t\t// node:\n\t\t\t//\t\tthe DOM node object to pass the the callback function\n\t\t\t// callback:\n\t\t\t//\t\tfunction to call until the sequence is stopped called with 3 parameters:\n\t\t\t// count:\n\t\t\t//\t\tinteger representing number of repeated calls (0..n) with -1 indicating the iteration has stopped\n\t\t\t// node:\n\t\t\t//\t\tthe DOM node object passed in\n\t\t\t// evt:\n\t\t\t//\t\tkey or mouse event object\n\t\t\t// obj:\n\t\t\t//\t\tuser space object used to uniquely identify each typematic sequence\n\t\t\t// subsequentDelay:\n\t\t\t//\t\tif > 1, the number of milliseconds until the 3->n events occur\n\t\t\t//\t\tor else the fractional time multiplier for the next event's delay, default=0.9\n\t\t\t// initialDelay:\n\t\t\t//\t\tthe number of milliseconds until the 2nd event occurs, default=500ms\n\t\t\t// minDelay:\n\t\t\t//\t\tthe maximum delay in milliseconds for event to fire, default=10ms\n\t\t\tif(obj != this._obj){\n\t\t\t\tthis.stop();\n\t\t\t\tthis._initialDelay = initialDelay || 500;\n\t\t\t\tthis._subsequentDelay = subsequentDelay || 0.90;\n\t\t\t\tthis._minDelay = minDelay || 10;\n\t\t\t\tthis._obj = obj;\n\t\t\t\tthis._node = node;\n\t\t\t\tthis._currentTimeout = -1;\n\t\t\t\tthis._count = -1;\n\t\t\t\tthis._callback = lang.hitch(_this, callback);\n\t\t\t\tthis._evt = { faux: true };\n\t\t\t\tfor(var attr in evt){\n\t\t\t\t\tif(attr != \"layerX\" && attr != \"layerY\"){ // prevent WebKit warnings\n\t\t\t\t\t\tvar v = evt[attr];\n\t\t\t\t\t\tif(typeof v != \"function\" && typeof v != \"undefined\"){\n\t\t\t\t\t\t\tthis._evt[attr] = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._fireEventAndReload();\n\t\t\t}\n\t\t},\n\n\t\tstop: function(){\n\t\t\t// summary:\n\t\t\t//\t\tStop an ongoing timed, repeating callback sequence.\n\t\t\tif(this._timer){\n\t\t\t\tclearTimeout(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t\tif(this._obj){\n\t\t\t\tthis._callback(-1, this._node, this._evt);\n\t\t\t\tthis._obj = null;\n\t\t\t}\n\t\t},\n\n\t\taddKeyListener: function(/*DOMNode*/ node, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a specific typematic key.\n\t\t\t//\t\tSee also the trigger method for other parameters.\n\t\t\t// keyObject:\n\t\t\t//\t\tan object defining the key to listen for:\n\t\t\t//\n\t\t\t//\t\t- keyCode: the keyCode (number) to listen for, used for non-printable keys\n\t\t\t//\t\t- charCode: the charCode (number) to listen for, used for printable keys\n\t\t\t//\t\t- charOrCode: deprecated, use keyCode or charCode\n\t\t\t//\t\t- ctrlKey: desired ctrl key state to initiate the callback sequence:\n\t\t\t//\t\t\t- pressed (true)\n\t\t\t//\t\t\t- released (false)\n\t\t\t//\t\t\t- either (unspecified)\n\t\t\t//\t\t- altKey: same as ctrlKey but for the alt key\n\t\t\t//\t\t- shiftKey: same as ctrlKey but for the shift key\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\n\t\t\t// Setup keydown or keypress listener depending on whether keyCode or charCode was specified.\n\t\t\t// If charOrCode is specified use deprecated connect._keypress synthetic event (remove for 2.0)\n\t\t\tvar type = \"keyCode\" in keyObject ? \"keydown\" : \"charCode\" in keyObject ? \"keypress\" : connect._keypress,\n\t\t\t\tattr = \"keyCode\" in keyObject ? \"keyCode\" : \"charCode\" in keyObject ? \"charCode\" : \"charOrCode\";\n\n\t\t\tvar handles = [\n\t\t\t\ton(node, type, lang.hitch(this, function(evt){\n\t\t\t\t\tif(evt[attr] == keyObject[attr] &&\n\t\t\t\t\t\t(keyObject.ctrlKey === undefined || keyObject.ctrlKey == evt.ctrlKey) &&\n\t\t\t\t\t\t(keyObject.altKey === undefined || keyObject.altKey == evt.altKey) &&\n\t\t\t\t\t\t(keyObject.metaKey === undefined || keyObject.metaKey == (evt.metaKey || false)) && // IE doesn't even set metaKey\n\t\t\t\t\t\t(keyObject.shiftKey === undefined || keyObject.shiftKey == evt.shiftKey)){\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, keyObject, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t\t}else if(typematic._obj == keyObject){\n\t\t\t\t\t\ttypematic.stop();\n\t\t\t\t\t}\n\t\t\t\t})),\n\t\t\t\ton(node, \"keyup\", lang.hitch(this, function(){\n\t\t\t\t\tif(typematic._obj == keyObject){\n\t\t\t\t\t\ttypematic.stop();\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t},\n\n\t\taddMouseListener: function(/*DOMNode*/ node, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a typematic mouse click.\n\t\t\t//\t\tSee the trigger method for other parameters.\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\t\t\tvar handles = [\n\t\t\t\ton(node, \"mousedown\", lang.hitch(this, function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t})),\n\t\t\t\ton(node, \"mouseup\", lang.hitch(this, function(evt){\n\t\t\t\t\tif(this._obj){\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\ttypematic.stop();\n\t\t\t\t})),\n\t\t\t\ton(node, \"mouseout\", lang.hitch(this, function(evt){\n\t\t\t\t\tif(this._obj){\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\ttypematic.stop();\n\t\t\t\t})),\n\t\t\t\ton(node, \"dblclick\", lang.hitch(this, function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tif(has(\"ie\") < 9){\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t\t\tsetTimeout(lang.hitch(this, typematic.stop), 50);\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t},\n\n\t\taddListener: function(/*Node*/ mouseNode, /*Node*/ keyNode, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a specific typematic key and mouseclick.\n\t\t\t//\t\tThis is a thin wrapper to addKeyListener and addMouseListener.\n\t\t\t//\t\tSee the addMouseListener and addKeyListener methods for other parameters.\n\t\t\t// mouseNode:\n\t\t\t//\t\tthe DOM node object to listen on for mouse events.\n\t\t\t// keyNode:\n\t\t\t//\t\tthe DOM node object to listen on for key events.\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\t\t\tvar handles = [\n\t\t\t\tthis.addKeyListener(keyNode, keyObject, _this, callback, subsequentDelay, initialDelay, minDelay),\n\t\t\t\tthis.addMouseListener(mouseNode, _this, callback, subsequentDelay, initialDelay, minDelay)\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t}\n\t});\n\n\treturn typematic;\n});\n","require(\"C:/git/dojo-webpack-plugin-sample/node_modules/dojo/nls/colors.js?absMid=dojo/nls/colors\");\nvar req = __webpack_require__.dj.c();\nmodule.exports = require(\"C:/git/dojo-webpack-plugin-sample/node_modules/dojo-webpack-plugin/loaders/dojo/i18n/runner.js\")(\"dojo/nls/colors\", req);","/*\n * This module was modified by dojo-webpack-plugin to disable some locales\n * that were excluded by the plugin's 'locales' option\n */\ndefine(({'root':({'aliceblue':'alice blue','antiquewhite':'antique white','aqua':'aqua','aquamarine':'aquamarine','azure':'azure','beige':'beige','bisque':'bisque','black':'black','blanchedalmond':'blanched almond','blue':'blue','blueviolet':'blue-violet','brown':'brown','burlywood':'burlywood','cadetblue':'cadet blue','chartreuse':'chartreuse','chocolate':'chocolate','coral':'coral','cornflowerblue':'cornflower blue','cornsilk':'cornsilk','crimson':'crimson','cyan':'cyan','darkblue':'dark blue','darkcyan':'dark cyan','darkgoldenrod':'dark goldenrod','darkgray':'dark gray','darkgreen':'dark green','darkgrey':'dark gray','darkkhaki':'dark khaki','darkmagenta':'dark magenta','darkolivegreen':'dark olive green','darkorange':'dark orange','darkorchid':'dark orchid','darkred':'dark red','darksalmon':'dark salmon','darkseagreen':'dark sea green','darkslateblue':'dark slate blue','darkslategray':'dark slate gray','darkslategrey':'dark slate gray','darkturquoise':'dark turquoise','darkviolet':'dark violet','deeppink':'deep pink','deepskyblue':'deep sky blue','dimgray':'dim gray','dimgrey':'dim gray','dodgerblue':'dodger blue','firebrick':'fire brick','floralwhite':'floral white','forestgreen':'forest green','fuchsia':'fuchsia','gainsboro':'gainsboro','ghostwhite':'ghost white','gold':'gold','goldenrod':'goldenrod','gray':'gray','green':'green','greenyellow':'green-yellow','grey':'gray','honeydew':'honeydew','hotpink':'hot pink','indianred':'indian red','indigo':'indigo','ivory':'ivory','khaki':'khaki','lavender':'lavender','lavenderblush':'lavender blush','lawngreen':'lawn green','lemonchiffon':'lemon chiffon','lightblue':'light blue','lightcoral':'light coral','lightcyan':'light cyan','lightgoldenrodyellow':'light goldenrod yellow','lightgray':'light gray','lightgreen':'light green','lightgrey':'light gray','lightpink':'light pink','lightsalmon':'light salmon','lightseagreen':'light sea green','lightskyblue':'light sky blue','lightslategray':'light slate gray','lightslategrey':'light slate gray','lightsteelblue':'light steel blue','lightyellow':'light yellow','lime':'lime','limegreen':'lime green','linen':'linen','magenta':'magenta','maroon':'maroon','mediumaquamarine':'medium aquamarine','mediumblue':'medium blue','mediumorchid':'medium orchid','mediumpurple':'medium purple','mediumseagreen':'medium sea green','mediumslateblue':'medium slate blue','mediumspringgreen':'medium spring green','mediumturquoise':'medium turquoise','mediumvioletred':'medium violet-red','midnightblue':'midnight blue','mintcream':'mint cream','mistyrose':'misty rose','moccasin':'moccasin','navajowhite':'navajo white','navy':'navy','oldlace':'old lace','olive':'olive','olivedrab':'olive drab','orange':'orange','orangered':'orange red','orchid':'orchid','palegoldenrod':'pale goldenrod','palegreen':'pale green','paleturquoise':'pale turquoise','palevioletred':'pale violet-red','papayawhip':'papaya whip','peachpuff':'peach puff','peru':'peru','pink':'pink','plum':'plum','powderblue':'powder blue','purple':'purple','red':'red','rosybrown':'rosy brown','royalblue':'royal blue','saddlebrown':'saddle brown','salmon':'salmon','sandybrown':'sandy brown','seagreen':'sea green','seashell':'seashell','sienna':'sienna','silver':'silver','skyblue':'sky blue','slateblue':'slate blue','slategray':'slate gray','slategrey':'slate gray','snow':'snow','springgreen':'spring green','steelblue':'steel blue','tan':'tan','teal':'teal','thistle':'thistle','tomato':'tomato','transparent':'transparent','turquoise':'turquoise','violet':'violet','wheat':'wheat','white':'white','whitesmoke':'white smoke','yellow':'yellow','yellowgreen':'yellow green'}),'bs':false,'mk':false,'sr':false,'zh':false,'zh-tw':false,'uk':false,'tr':false,'th':false,'sv':false,'sl':false,'sk':false,'ru':false,'ro':false,'pt':false,'pt-pt':false,'pl':false,'nl':false,'nb':false,'ko':false,'kk':false,'ja':false,'it':false,'id':false,'hu':false,'hr':false,'he':false,'fr':false,'fi':false,'eu':false,'es':false,'el':false,'de':false,'da':false,'cs':false,'ca':false,'bg':false,'az':false,'ar':false}))","define([\"./_base/kernel\", \"./_base/lang\", \"./_base/Color\", \"./_base/array\"], function(dojo, lang, Color, ArrayUtil){\n\t// module:\n\t//\t\tdojo/colors\n\n\t/*=====\n\treturn {\n\t\t// summary:\n\t\t//\t\tColor utilities, extending Base dojo.Color\n\t};\n\t=====*/\n\n\tvar ColorExt = {};\n\tlang.setObject(\"dojo.colors\", ColorExt);\n\n//TODO: this module appears to break naming conventions\n\n\t// this is a standard conversion prescribed by the CSS3 Color Module\n\tvar hue2rgb = function(m1, m2, h){\n\t\tif(h < 0){ ++h; }\n\t\tif(h > 1){ --h; }\n\t\tvar h6 = 6 * h;\n\t\tif(h6 < 1){ return m1 + (m2 - m1) * h6; }\n\t\tif(2 * h < 1){ return m2; }\n\t\tif(3 * h < 2){ return m1 + (m2 - m1) * (2 / 3 - h) * 6; }\n\t\treturn m1;\n\t};\n\t// Override base Color.fromRgb with the impl in this module\n\tdojo.colorFromRgb = Color.fromRgb = function(/*String*/ color, /*dojo/_base/Color?*/ obj){\n\t\t// summary:\n\t\t//\t\tget rgb(a) array from css-style color declarations\n\t\t// description:\n\t\t//\t\tthis function can handle all 4 CSS3 Color Module formats: rgb,\n\t\t//\t\trgba, hsl, hsla, including rgb(a) with percentage values.\n\t\tvar m = color.toLowerCase().match(/^(rgba?|hsla?)\\(([\\s\\.\\-,%0-9]+)\\)/);\n\t\tif(m){\n\t\t\tvar c = m[2].split(/\\s*,\\s*/), l = c.length, t = m[1], a;\n\t\t\tif((t == \"rgb\" && l == 3) || (t == \"rgba\" && l == 4)){\n\t\t\t\tvar r = c[0];\n\t\t\t\tif(r.charAt(r.length - 1) == \"%\"){\n\t\t\t\t\t// 3 rgb percentage values\n\t\t\t\t\ta = ArrayUtil.map(c, function(x){\n\t\t\t\t\t\treturn parseFloat(x) * 2.56;\n\t\t\t\t\t});\n\t\t\t\t\tif(l == 4){ a[3] = c[3]; }\n\t\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\n\t\t\t\t}\n\t\t\t\treturn Color.fromArray(c, obj); // dojo/_base/Color\n\t\t\t}\n\t\t\tif((t == \"hsl\" && l == 3) || (t == \"hsla\" && l == 4)){\n\t\t\t\t// normalize hsl values\n\t\t\t\tvar H = ((parseFloat(c[0]) % 360) + 360) % 360 / 360,\n\t\t\t\t\tS = parseFloat(c[1]) / 100,\n\t\t\t\t\tL = parseFloat(c[2]) / 100,\n\t\t\t\t\t// calculate rgb according to the algorithm\n\t\t\t\t\t// recommended by the CSS3 Color Module\n\t\t\t\t\tm2 = L <= 0.5 ? L * (S + 1) : L + S - L * S,\n\t\t\t\t\tm1 = 2 * L - m2;\n\t\t\t\ta = [\n\t\t\t\t\thue2rgb(m1, m2, H + 1 / 3) * 256,\n\t\t\t\t\thue2rgb(m1, m2, H) * 256,\n\t\t\t\t\thue2rgb(m1, m2, H - 1 / 3) * 256,\n\t\t\t\t\t1\n\t\t\t\t];\n\t\t\t\tif(l == 4){ a[3] = c[3]; }\n\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\n\t\t\t}\n\t\t}\n\t\treturn null;\t// dojo/_base/Color\n\t};\n\n\tvar confine = function(c, low, high){\n\t\t// summary:\n\t\t//\t\tsanitize a color component by making sure it is a number,\n\t\t//\t\tand clamping it to valid values\n\t\tc = Number(c);\n\t\treturn isNaN(c) ? high : c < low ? low : c > high ? high : c;\t// Number\n\t};\n\n\tColor.prototype.sanitize = function(){\n\t\t// summary:\n\t\t//\t\tmakes sure that the object has correct attributes\n\t\tvar t = this;\n\t\tt.r = Math.round(confine(t.r, 0, 255));\n\t\tt.g = Math.round(confine(t.g, 0, 255));\n\t\tt.b = Math.round(confine(t.b, 0, 255));\n\t\tt.a = confine(t.a, 0, 1);\n\t\treturn this;\t// dojo/_base/Color\n\t};\n\n\tColorExt.makeGrey = Color.makeGrey = function(/*Number*/ g, /*Number?*/ a){\n\t\t// summary:\n\t\t//\t\tcreates a greyscale color with an optional alpha\n\t\treturn Color.fromArray([g, g, g, a]);\t// dojo/_base/Color\n\t};\n\n\t// mixin all CSS3 named colors not already in _base, along with SVG 1.0 variant spellings\n\tlang.mixin(Color.named, {\n\t\t\"aliceblue\":\t[240,248,255],\n\t\t\"antiquewhite\": [250,235,215],\n\t\t\"aquamarine\":\t[127,255,212],\n\t\t\"azure\":\t[240,255,255],\n\t\t\"beige\":\t[245,245,220],\n\t\t\"bisque\":\t[255,228,196],\n\t\t\"blanchedalmond\":\t[255,235,205],\n\t\t\"blueviolet\":\t[138,43,226],\n\t\t\"brown\":\t[165,42,42],\n\t\t\"burlywood\":\t[222,184,135],\n\t\t\"cadetblue\":\t[95,158,160],\n\t\t\"chartreuse\":\t[127,255,0],\n\t\t\"chocolate\":\t[210,105,30],\n\t\t\"coral\":\t[255,127,80],\n\t\t\"cornflowerblue\":\t[100,149,237],\n\t\t\"cornsilk\": [255,248,220],\n\t\t\"crimson\":\t[220,20,60],\n\t\t\"cyan\": [0,255,255],\n\t\t\"darkblue\": [0,0,139],\n\t\t\"darkcyan\": [0,139,139],\n\t\t\"darkgoldenrod\":\t[184,134,11],\n\t\t\"darkgray\": [169,169,169],\n\t\t\"darkgreen\":\t[0,100,0],\n\t\t\"darkgrey\": [169,169,169],\n\t\t\"darkkhaki\":\t[189,183,107],\n\t\t\"darkmagenta\":\t[139,0,139],\n\t\t\"darkolivegreen\":\t[85,107,47],\n\t\t\"darkorange\":\t[255,140,0],\n\t\t\"darkorchid\":\t[153,50,204],\n\t\t\"darkred\":\t[139,0,0],\n\t\t\"darksalmon\":\t[233,150,122],\n\t\t\"darkseagreen\": [143,188,143],\n\t\t\"darkslateblue\":\t[72,61,139],\n\t\t\"darkslategray\":\t[47,79,79],\n\t\t\"darkslategrey\":\t[47,79,79],\n\t\t\"darkturquoise\":\t[0,206,209],\n\t\t\"darkviolet\":\t[148,0,211],\n\t\t\"deeppink\": [255,20,147],\n\t\t\"deepskyblue\":\t[0,191,255],\n\t\t\"dimgray\":\t[105,105,105],\n\t\t\"dimgrey\":\t[105,105,105],\n\t\t\"dodgerblue\":\t[30,144,255],\n\t\t\"firebrick\":\t[178,34,34],\n\t\t\"floralwhite\":\t[255,250,240],\n\t\t\"forestgreen\":\t[34,139,34],\n\t\t\"gainsboro\":\t[220,220,220],\n\t\t\"ghostwhite\":\t[248,248,255],\n\t\t\"gold\": [255,215,0],\n\t\t\"goldenrod\":\t[218,165,32],\n\t\t\"greenyellow\":\t[173,255,47],\n\t\t\"grey\": [128,128,128],\n\t\t\"honeydew\": [240,255,240],\n\t\t\"hotpink\":\t[255,105,180],\n\t\t\"indianred\":\t[205,92,92],\n\t\t\"indigo\":\t[75,0,130],\n\t\t\"ivory\":\t[255,255,240],\n\t\t\"khaki\":\t[240,230,140],\n\t\t\"lavender\": [230,230,250],\n\t\t\"lavenderblush\":\t[255,240,245],\n\t\t\"lawngreen\":\t[124,252,0],\n\t\t\"lemonchiffon\": [255,250,205],\n\t\t\"lightblue\":\t[173,216,230],\n\t\t\"lightcoral\":\t[240,128,128],\n\t\t\"lightcyan\":\t[224,255,255],\n\t\t\"lightgoldenrodyellow\": [250,250,210],\n\t\t\"lightgray\":\t[211,211,211],\n\t\t\"lightgreen\":\t[144,238,144],\n\t\t\"lightgrey\":\t[211,211,211],\n\t\t\"lightpink\":\t[255,182,193],\n\t\t\"lightsalmon\":\t[255,160,122],\n\t\t\"lightseagreen\":\t[32,178,170],\n\t\t\"lightskyblue\": [135,206,250],\n\t\t\"lightslategray\":\t[119,136,153],\n\t\t\"lightslategrey\":\t[119,136,153],\n\t\t\"lightsteelblue\":\t[176,196,222],\n\t\t\"lightyellow\":\t[255,255,224],\n\t\t\"limegreen\":\t[50,205,50],\n\t\t\"linen\":\t[250,240,230],\n\t\t\"magenta\":\t[255,0,255],\n\t\t\"mediumaquamarine\": [102,205,170],\n\t\t\"mediumblue\":\t[0,0,205],\n\t\t\"mediumorchid\": [186,85,211],\n\t\t\"mediumpurple\": [147,112,219],\n\t\t\"mediumseagreen\":\t[60,179,113],\n\t\t\"mediumslateblue\":\t[123,104,238],\n\t\t\"mediumspringgreen\":\t[0,250,154],\n\t\t\"mediumturquoise\":\t[72,209,204],\n\t\t\"mediumvioletred\":\t[199,21,133],\n\t\t\"midnightblue\": [25,25,112],\n\t\t\"mintcream\":\t[245,255,250],\n\t\t\"mistyrose\":\t[255,228,225],\n\t\t\"moccasin\": [255,228,181],\n\t\t\"navajowhite\":\t[255,222,173],\n\t\t\"oldlace\":\t[253,245,230],\n\t\t\"olivedrab\":\t[107,142,35],\n\t\t\"orange\":\t[255,165,0],\n\t\t\"orangered\":\t[255,69,0],\n\t\t\"orchid\":\t[218,112,214],\n\t\t\"palegoldenrod\":\t[238,232,170],\n\t\t\"palegreen\":\t[152,251,152],\n\t\t\"paleturquoise\":\t[175,238,238],\n\t\t\"palevioletred\":\t[219,112,147],\n\t\t\"papayawhip\":\t[255,239,213],\n\t\t\"peachpuff\":\t[255,218,185],\n\t\t\"peru\": [205,133,63],\n\t\t\"pink\": [255,192,203],\n\t\t\"plum\": [221,160,221],\n\t\t\"powderblue\":\t[176,224,230],\n\t\t\"rosybrown\":\t[188,143,143],\n\t\t\"royalblue\":\t[65,105,225],\n\t\t\"saddlebrown\":\t[139,69,19],\n\t\t\"salmon\":\t[250,128,114],\n\t\t\"sandybrown\":\t[244,164,96],\n\t\t\"seagreen\": [46,139,87],\n\t\t\"seashell\": [255,245,238],\n\t\t\"sienna\":\t[160,82,45],\n\t\t\"skyblue\":\t[135,206,235],\n\t\t\"slateblue\":\t[106,90,205],\n\t\t\"slategray\":\t[112,128,144],\n\t\t\"slategrey\":\t[112,128,144],\n\t\t\"snow\": [255,250,250],\n\t\t\"springgreen\":\t[0,255,127],\n\t\t\"steelblue\":\t[70,130,180],\n\t\t\"tan\":\t[210,180,140],\n\t\t\"thistle\":\t[216,191,216],\n\t\t\"tomato\":\t[255,99,71],\n\t\t\"turquoise\":\t[64,224,208],\n\t\t\"violet\":\t[238,130,238],\n\t\t\"wheat\":\t[245,222,179],\n\t\t\"whitesmoke\":\t[245,245,245],\n\t\t\"yellowgreen\":\t[154,205,50]\n\t});\n\n\treturn Color;\t// TODO: return ColorExt, not Color\n});\n"],"sourceRoot":""}